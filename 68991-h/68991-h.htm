<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <meta http-equiv="Content-Style-Type" content="text/css" />
    <title>
      Giant Brains Or Machines That Think, by Edmund Callis Berkely&mdash;A Project Gutenberg eBook
    </title>
    <link rel="coverpage" href="images/cover.jpg" />
    <style type="text/css">

body { margin-left: 10%; margin-right: 10%; }

h1,h2,h3,h4 { text-align: center; clear: both; }
.h_subtitle{font-weight: normal; font-size: smaller;}

p            { margin-top: .51em; text-align: justify; text-indent: 1.5em; margin-bottom: .49em; }
p.no-indent  { margin-top: .51em; text-align: justify; text-indent: 0em; margin-bottom: .49em;}
p.author     { margin-top: 1em; margin-right: 5%; text-align: right;}
p.big_indent { text-indent: 3.5em;}
p.indent     { text-indent: 1.5em;}
p.neg-indent { text-indent: -1.5em; margin-left: 5%; margin-right: 5%; padding-left: 1.5em;}
p.neg-indent2 { text-indent: -1.5em; margin-left: 5%; margin-right: 5%; padding-left: 3em;}
p.f90        { font-size: 90%;  text-align: center; text-indent: 0em; }
p.f110       { font-size: 110%; text-align: center; text-indent: 0em; }
p.f120       { font-size: 120%; text-align: center; text-indent: 0em; }
p.f150       { font-size: 150%; text-align: center; text-indent: 0em; }

.fontsize_90 { font-size:    90%; }
.fontsize_110 { font-size:  110%; }
.fontsize_120 { font-size:  120%; }
.fontsize_150 { font-size:  150%; }
.fontsize_200 { font-size:  200%; }

.space-above1 { margin-top: 1em; }
.space-above2 { margin-top: 2em; }

.space-below1 { margin-bottom: 1em; }
.space-below2 { margin-bottom: 2em; }
.space-below3 { margin-bottom: 3em; }

hr.tb   {width: 45%; margin-left: 27.5%; margin-right: 27.5%; margin-top: 1.5em; margin-bottom: 1.5em;}
hr.chap {width: 65%; margin-left: 17.5%; margin-right: 17.5%; margin-top: 2em; margin-bottom: 2em;}
         @media print { hr.chap {display: none; visibility: hidden;} }
hr.r5   {width: 5%; margin-top: 0.5em; margin-bottom: 0.5em; margin-left: 47.5%; margin-right: 47.5%;}

div.chapter {page-break-before: always;}
h2.nobreak  {page-break-before: avoid;}

ul.index  { list-style-type: none; }
li.ifrst  { margin-top: 1em; text-indent: 1em;}
li.isub1  {text-indent: 1em;}
li.isub2  {text-indent: 2em;}
li.isub3  {text-indent: 3em;}
li.isub4  {text-indent: 4em;}
li.isub5  {text-indent: 5em;}
li.isub6  {text-indent: 6em;}
li.isub7  {text-indent: 7em;}
li.isub10 {text-indent: 10em;}

table { margin-left: auto; margin-right: auto; }

.tdl {text-align: left;}
.tdr {text-align: right;}
.tdc {text-align: center;}
.tdc_top    {text-align: center; vertical-align: top;}
.tdc_bott   {text-align: center; vertical-align: bottom;}
.tdl_top    {text-align: left; vertical-align: top;}
.tdc_ws1    {text-align: center; vertical-align: top; padding-left: 1em; padding-right: 1em;}
.tdl_ws1    {text-align: left; vertical-align: top; padding-left: 1em;}
.tdr_ws1    {text-align: right; vertical-align: top; padding-right: 1em;}

.pagenum {
    position: absolute;
    left: 92%;
    font-size: smaller;
    text-align: right;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
}

.blockquot  { margin-left: 10%; margin-right: 10%; }
.blockquot2 { margin-left: 15%; margin-right: 15%; }

.bb    {border-bottom: solid thin;}
.bt    {border-top: solid thin;}
.br    {border-right: solid thin;}
.bl    {border-left: solid thin;}
.bbox  {border: solid medium;}

.center   {text-align: center; text-indent: 0em;}
.smcap    {font-variant: small-caps;}
.allsmcap {font-variant: small-caps; text-transform: lowercase;}
.u        {text-decoration: underline;}
.no-wrap {white-space: nowrap; }
.over    {text-decoration: overline;}

img { max-width: 100%; height: auto; }

.figcenter { margin: auto; text-align: center;
             page-break-inside: avoid; max-width: 100%; }

.figleft { float: left; clear: left; margin-left: 0; margin-bottom: 1em; margin-top: 1em;
           margin-right: 1em; padding: 0; text-align: center; page-break-inside: avoid;
           max-width: 100%; }

div.figcontainer { clear: both; margin: 0em auto; text-align: center; max-width: 100%;}
div.figsub { display: inline-block; margin: 1em 1em; vertical-align: top; max-width: 100%; text-align: center; }

.footnotes        {border: 1px dashed;}
.footnote         {margin-left: 10%; margin-right: 10%; font-size: 0.9em;}
.footnote .label  {position: absolute; right: 84%; text-align: right;}
.fnanchor {
    vertical-align: super;
    font-size: .8em;
    text-decoration:
    none;
}

.transnote {background-color: #E6E6FA;
    color: black;
     font-size:smaller;
     padding:0.5em;
     margin-bottom:5em;
     font-family:sans-serif, serif; }

.ws2   {display: inline; margin-left: 0em; padding-left:  2em;}
.ws3   {display: inline; margin-left: 0em; padding-left:  3em;}
.ws4   {display: inline; margin-left: 0em; padding-left:  4em;}
.ws6   {display: inline; margin-left: 0em; padding-left:  6em;}
.ws8   {display: inline; margin-left: 0em; padding-left:  8em;}
    </style>
  </head>

<body>
<p style='text-align:center; font-size:1.2em; font-weight:bold'>The Project Gutenberg eBook of Giant brains; or Machines that think, by Edmund Callis Berkeley</p>
<div style='display:block; margin:1em 0'>
This eBook is for the use of anyone anywhere in the United States and
most other parts of the world at no cost and with almost no restrictions
whatsoever. You may copy it, give it away or re-use it under the terms
of the Project Gutenberg License included with this eBook or online
at <a href="https://www.gutenberg.org">www.gutenberg.org</a>. If you
are not located in the United States, you will have to check the laws of the
country where you are located before using this eBook.
</div>

<p style='display:block; margin-top:1em; margin-bottom:1em; margin-left:2em; text-indent:-2em'>Title: Giant brains; or Machines that think</p>
<p style='display:block; margin-top:1em; margin-bottom:0; margin-left:2em; text-indent:-2em'>Author: Edmund Callis Berkeley</p>
<p style='display:block; text-indent:0; margin:1em 0'>Release Date: September 14, 2022 [eBook #68991]</p>
<p style='display:block; text-indent:0; margin:1em 0'>Language: English</p>
  <p style='display:block; margin-top:1em; margin-bottom:0; margin-left:2em; text-indent:-2em; text-align:left'>Produced by: Tim Lindell and the Online Distributed Proofreading Team at https://www.pgdp.net (This book was produced from images made available by the HathiTrust Digital Library.)</p>
<div style='margin-top:2em; margin-bottom:4em'>*** START OF THE PROJECT GUTENBERG EBOOK GIANT BRAINS; OR MACHINES THAT THINK ***</div>

<hr class="chap" />

<h1>GIANT BRAINS<br /><small>OR</small><br />MACHINES THAT THINK</h1>

<p class="f120 space-above2"><b>EDMUND CALLIS BERKELEY</b></p>

<p class="f90">Consultant in Modern Technology<br />
President, E. C. Berkeley and Associates</p>

<p class="center space-above2">JOHN WILEY &amp; SONS, INC., NEW YORK<br />
CHAPMAN &amp; HALL, LIMITED, LONDON</p>

<p class="center space-above2">Copyright, 1949<br />by<br />
EDMUND CALLIS BERKELEY</p>

<p class="center space-above2"><i>All Rights Reserved</i></p>

<p class="center space-above2"><i>This book or any part thereof must not<br />
be reproduced in any form without<br />the written permission of the publisher.</i></p>

<p class="center space-above2">Second Printing, February, 1950</p>

<p class="center space-above2">Printed in the United States of America</p>

<p class="center space-above2">To my friends,<br />
whose help and instruction<br />made this book possible</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<h2 class="nobreak">PREFACE<br />
<span class="h_subtitle">The Subject, Purpose, and Method<br />of this Book</span></h2>
</div>

<p>The subject of this book is a type of machine that comes closer to
being a brain that thinks than any machine ever did before 1940. These
new machines are called sometimes mechanical brains and sometimes
sequence-controlled calculators and sometimes by other names.
Essentially, though, they are machines that can handle information with
great skill and great speed. And that power is very similar to the
power of a brain.</p>

<p>These new machines are important. They do the work of hundreds of human
beings for the wages of a dozen. They are powerful instruments for
obtaining new knowledge. They apply in science, business, government,
and other activities. They apply in reasoning and computing, and, the
harder the problem, the more useful they are. Along with the release of
atomic energy, they are one of the great achievements of the present
century. No one can afford to be unaware of their significance.</p>

<p>In this book I have sought to tell a part of the story of these new
machines that think. Perhaps you, as you start this book, may not agree
with me that a machine can think: the first chapter of this book is
devoted to the discussion of this question.</p>

<p>My purpose has been to tell enough about these machines so that we
can see in general how they work. I have sought to explain some
giant brains that have been built and to show how they do thinking
operations. I have sought also to talk about what these machines can do
in the future and to judge their significance for us. It seems to me
that they will take a load off men’s as great as the load that
printing took off men’s writing: a tremendous burden lifted.</p>

<p>We need to examine several of the new mechanical brains: Massachusetts
Institute of Technology’s differential analyzer, Harvard’s IBM
automatic sequence-controlled calculator, Moore School’s ENIAC
<span class="pagenum" id="Page_viii">[Pg viii]</span>
(Electronic Numerical Integrator and Calculator), and Bell
Laboratories’ general-purpose relay calculator. These are described in
the sequence in which they were finished between the years 1942 and 1946.</p>

<p>We also have to go on some excursions—for instance, the nature of
language and of symbols, the meaning of thinking, the human brain and
nervous system, the future design of machinery that can think, and a
little algebra and logic. I have also sought to discuss the relations
between machines that think and human society—what we can foresee as
likely to happen or be needed as a result of the remarkable invention
of machines that can think.</p>

<h3>READING THIS BOOK</h3>

<p>This book is intended for everyone. I have sought to put it together in
such a way that any reader can select from it what he wants.</p>

<p>Perhaps at first reading you want only the main thread of the story.
Then read only what seems interesting, and skip whatever seems
uninteresting. The subheadings should help to tell you what to read and
what to skip. Nearly all the chapters can be read with little reference
to what goes before, although some reference to the supplements in the
back may at times be useful.</p>

<p>Perhaps your memory of physics is dim, like mine. The little knowledge
of physics needed is explained here and there throughout the book, and
the index should tell where to find any explanation you may want.</p>

<p>Perhaps it is a long time since you did any algebra. Then <a href="#SUPPL_2">Supplement 2</a>
on mathematics may hold something of use to you. Two sections (one
in <a href="#CHAPTER_5">Chapter 5</a> and one in <a href="#CHAPTER_6">Chapter 6</a>)
labeled as containing some rather mathematical details may be skipped
with no great loss.</p>

<p>Perhaps you are unacquainted with logic that uses symbols—the branch
of logic called mathematical logic. In fact, very few people are
familiar with it. No discussion in the book hinges on understanding
this subject, except for <a href="#CHAPTER_9">Chapter 9</a> where a machine that
calculates logical truth is described. In all other chapters you may freely skip
all references to mathematical logic. But, if you are curious about the
<span class="pagenum" id="Page_ix">[Pg ix]</span>
subject and how it can be usefully applied in the field of mechanical
brains, then begin with the introduction to the subject in <a href="#CHAPTER_9">Chapter 9</a>,
and note the suggestions in the section entitled “Algebra of Logic”
in <a href="#SUPPL_2">Supplement 2</a>.</p>

<p>In any case, glance at the table of contents, the chapter headings and
subheadings, and the supplements at the back. These should give an idea
of how the book is put together and how you may select what may be
interesting to you.</p>

<p>Please do not read this book straight from beginning to end unless
that way proves to be congenial to you. If you are not interested in
technical details, skip most of the middle chapters, which describe
existing mechanical brains. If, on the other hand, you want more
details than this book contains, look up references in <a href="#SUPPL_3">Supplement 3</a>.
Here are listed, with a few comments, over 250 books, articles,
and pamphlets related to the subject of machinery for computing and
reasoning. These cover many parts of the field; some parts, however,
are not yet covered by any published information.</p>

<p>There are no photographs in this book, although there are over 80
drawings. Photographs of these complicated machines can really show
very little: panels, lights, switches, wires, and other kinds of
hardware. What is important is the way the machine works inside. This
cannot be shown by a photograph but may be shown by schematic drawings.
In the same way, a photograph of a human being shows almost nothing
about how he thinks.</p>

<h3>UNDERSTANDING THIS BOOK</h3>

<p>I have tried to write this book so that it could be understood. I have
attempted to explain machinery for computing and reasoning without
using technical words any more than necessary. To do this seemed to be
easy in some places, much harder in others. As a test of this attempt,
a count has been made of all the different words in the book that have
two syllables or more, that are used for explaining, and that are
not themselves defined. There are fewer than 1800 of these words. In
<a href="#SUPPL_1">Supplement 1</a>, entitled “Words and Ideas,” I have
digressed to discuss further the problem of explanation and understanding.
<span class="pagenum" id="Page_x">[Pg x]</span></p>

<p>Every now and then in the book, along comes a word or a phrase that
has a special meaning, for example, the name of something new. When it
first appears, it is put in italics and is explained or defined. In
addition, all the words and phrases having special meaning appear again
in the index, and next to each is the page number of its explanation or
definition.</p>

<p>In many places, I have talked of mechanical brains as if they were
living. For example, instead of “capacity to store information” I have
spoken of “memory.” Of course, the machines are not living; but they do
have individuality, responsiveness, and other traits of living beings,
just as a political party pictured as a living elephant does. Besides,
to treat things as persons is a help in making any subject vivid and
understandable, as every song writer and cartoonist illustrates.
We speak of “Old Man River” and “Father Time”; we may speak of a
ship or a locomotive as “she”; and the crew on the first Harvard
sequence-controlled calculator has often called her “Bessy, the
Bessel engine.”</p>

<p>Let us pause a little longer on the subject of understanding. What
is the understanding of something new? It is a state of knowing, a
process of knowing more and more. The more we know about something
new, the better we understand it. It is possible for almost anybody to
understand almost anything, I believe. What is mainly needed in order
to grasp an idea is a good collection of true statements about it and
some practice in using those statements in situations. For example,
no one has ever seen or touched the separate scraps of electricity
called electrons. But electrons have been described and measured;
hundreds of thousands of people work with electrons; they know and use
true statements about electrons. In effect, these people understand electrons.</p>

<p>Probably the hardest task of an author is to make his statements
understandable yet accurate. It is too much to hope for complete
success. I shall be very grateful to any reader who points out to me
the statements that he has not understood or that are in error.</p>

<p>As to the views I have expressed, I do not expect every reader to agree
with me. In fact, I shall be glad if many a reader disagrees with me.
For then someone else may say to both of us, “You’re both right and
<span class="pagenum" id="Page_xi">[Pg xi]</span>
both wrong—the truth lies atwixt and atween you.” Thoughtful and
tolerant disagreement is the finest climate for scientific progress.</p>

<h3>BASIC FACTS</h3>

<p>Many of the mechanical brains described in this book will do good work
for years; but their design is already out of date. Many organizations
are hard at work finding new tricks in electronics, materials, and
engineering and making new mechanical brains that are better and faster.</p>

<p>In spite of future developments, though, the basic facts about
mechanical brains will endure. These basic facts are drawn from the
principles of thinking, of mathematics, of science, of engineering,
etc. These facts govern all handling of information. They do not depend
very much on human or mechanical energy. They do not depend very much
on signs. They do not depend very much on the century, or the language,
or the country. For example, “II et III V sunt,” the Romans may have
said; “deux et trois font cinq,” say the French; “2 + 3 = 5,” say the
mathematicians; and we say, “two and three make five.” The main effort
in this book has been to make clear the basic facts about mechanical
brains, for they are now a masterly instrument for obtaining new
knowledge.</p>

<p class="author"><span class="smcap">Edmund Callis Berkeley</span></p>

<p>New York 11, N. Y.<br />&nbsp;&emsp;<i>June 30, 1949</i></p>

<p><span class="pagenum" id="Page_xii">[Pg xii]</span></p>
<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_xiii">[Pg xiii]</span></p>
<h2 class="nobreak">ACKNOWLEDGMENTS</h2>
</div>

<p>This book has been over seven years in the making and has evolved
through many different plans for its contents. It springs essentially
from the desire to see human beings use their knowledge better: we
know enough, but how are we to use what we know? Machines that handle
information, that make knowledge accessible, are a long step in the
direction of using what we know.</p>

<p>For help in causing this desire to come to fruition, I should like
to express my indebtedness especially to Professor (then Commander,
U.S.N.R.) Howard H. Aiken of Harvard University, whose stimulus, while
I was stationed for ten months in 1945-46 in his laboratory, was very
great.</p>

<p>I should also like to express my appreciation to Mr. Harry J. Volk,
whose vision and enthusiasm greatly encouraged me in the writing of
this book.</p>

<p>For careful reviews and helpful comments on the chapters dealing with
existing mechanical brains, I am especially grateful to Dr. Franz
L. Alt, Mr. E. G. Andrews, Professor Samuel H. Caldwell, Dr. Grace
M. Hopper, Mr. Theodore A. Kalin, and Dr. John W. Mauchly, who are
experts in their fields. Dr. Ruth P. Berkeley, Dr. Rudolf Flesch, Mr.
J. Ross Macdonald, Dr. Z. I. Mosesson, Mr. Irving Rosenthal, Mr. Max
S. Weinstein, and many others have been true friends in reading and
commenting upon many parts of the manuscript. Mr. Frank W. Keller
devoted much time and skill to converting my rough sketches into
illustrations. Mr. Murray B. Ritterman has been of invaluable help in
preparing and checking much of the bibliography. Miss Marjorie L. Black
has helped very greatly in turning scraps of paper bearing sentences
into an excellent manuscript for the printer.</p>

<p>For permission to use the quotations on various pages in Chapters 11
and 12, I am indebted to the kindness of:
<span class="pagenum" id="Page_xiv">[Pg xiv]</span></p>

<div class="blockquot">
<p class="neg-indent">E. P. Dutton &amp; Co., for quotations from
<i>Frankenstein</i>, by Mary W. Shelley, Everyman’s Library, No.
616.</p>

<p class="neg-indent">Samuel French, for quotations from <i>R.
U. R.</i>, by Karel Čapek.<a id="FNanchor_1" href="#Footnote_1" class="fnanchor">[1]</a></p>

<p class="neg-indent"><i>Modern Industry</i>, for a quotation from the
issue of February 15, 1947.</p>
</div>

<p>Responsibility for the statements and opinions expressed in
this book is solely my own. These statements and opinions do
not necessarily represent the views of any organization with
which I may be or have been associated. To the best of my
knowledge and belief no information contained in this book is
classified by the Department of Defense of the United States.</p>

<p class="author"><span class="smcap">Edmund Callis Berkeley</span></p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_xv">[Pg xv]</span></p>
<h2 class="nobreak">CONTENTS</h2>
</div>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary="TOC" cellpadding="2" >
  <tbody><tr>
      <td class="tdr">1.</td>
      <td class="tdl_ws1" colspan="2">CAN MACHINES THINK?</td>
   </tr><tr>
      <td class="tdr"> </td>
      <td class="tdl"><span class="ws2"> </span>What Is a Mechanical Brain?</td>
      <td class="tdr"><a href="#CHAPTER_1"> 1</a></td>
   </tr><tr>
      <td class="tdr">2.</td>
      <td class="tdl_ws1" colspan="2">LANGUAGES:</td>
   </tr><tr>
      <td class="tdr"> </td>
      <td class="tdl"><span class="ws2"> </span>Systems for Handling Information</td>
      <td class="tdr"><a href="#CHAPTER_2">10</a></td>
   </tr><tr>
      <td class="tdr">3.</td>
      <td class="tdl_ws1" colspan="2">A MACHINE THAT WILL THINK:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>The Design of a Very Simple Mechanical Brain</td>
      <td class="tdr"><a href="#CHAPTER_3">22</a></td>
   </tr><tr>
      <td class="tdr">4.</td>
      <td class="tdl_ws1" colspan="2">COUNTING HOLES:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Punch-Card Calculating Machines</td>
      <td class="tdr"><a href="#CHAPTER_4">42</a></td>
   </tr><tr>
      <td class="tdr">5.</td>
      <td class="tdl_ws1" colspan="2">MEASURING:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Massachusetts Institute of Technology’s</td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Differential Analyzer No. 2</td>
      <td class="tdr"><a href="#CHAPTER_5">65</a></td>
   </tr><tr>
      <td class="tdr">6.</td>
      <td class="tdl_ws1" colspan="2">ACCURACY TO 23 DIGITS:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Harvard’s IBM Automatic</td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Sequence-Controlled Calculator</td>
      <td class="tdr"><a href="#CHAPTER_6">89</a></td>
   </tr><tr>
      <td class="tdr">7.</td>
      <td class="tdl_ws1" colspan="2">SPEED—5000 ADDITIONS A SECOND:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Moore School’s <b>ENIAC</b></td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>(Electronic Numerical Integrator and Calculator)</td>
      <td class="tdr"><a href="#CHAPTER_7">113</a></td>
   </tr><tr>
      <td class="tdr">8.</td>
      <td class="tdl_ws1" colspan="2">RELIABILITY—NO WRONG RESULTS:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Bell Laboratories’</td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>General-Purpose Relay Calculator</td>
      <td class="tdr"><a href="#CHAPTER_8">128</a></td>
   </tr><tr>
      <td class="tdr">9.</td>
      <td class="tdl_ws1" colspan="2">REASONING:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>The Kalin-Burkhart Logical-Truth Calculator</td>
      <td class="tdr"><a href="#CHAPTER_9">144</a></td>
   </tr><tr>
      <td class="tdr">10.</td>
      <td class="tdl_ws1" colspan="2">AN EXCURSION:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>The Future Design of Machines That Think</td>
      <td class="tdr"><a href="#CHAPTER_10">167</a></td>
   </tr><tr>
      <td class="tdr">11.</td>
      <td class="tdl_ws1" colspan="2">THE FUTURE:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Machines That Think, and</td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>What They Might Do for Men</td>
      <td class="tdr"><a href="#CHAPTER_11">180</a></td>
   </tr><tr>
      <td class="tdr">12.</td>
      <td class="tdl_ws1" colspan="2">SOCIAL CONTROL:</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>Machines That Think, and</td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl"><span class="ws2">&nbsp;</span>How Society May Control Them</td>
      <td class="tdr"><a href="#CHAPTER_12">196</a></td>
   </tr><tr>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr><tr>
      <td class="tdc" colspan="3"><b>SUPPLEMENTS</b>
                     <span class="pagenum" id="Page_xvi">[Pg xvi]</span></td>
   </tr><tr>
      <td class="tdr">1.</td>
      <td class="tdl_ws1">Words and Ideas</td>
      <td class="tdr"><a href="#SUPPL_1">209</a></td>
   </tr><tr>
      <td class="tdr">2.</td>
      <td class="tdl_ws1">Mathematics</td>
      <td class="tdr"><a href="#SUPPL_2">214</a></td>
   </tr><tr>
      <td class="tdr">3.</td>
      <td class="tdl_ws1">References</td>
      <td class="tdr"><a href="#SUPPL_3">228</a></td>
   </tr><tr>
      <td class="tdr">&nbsp;</td>
      <td class="tdl_ws1">INDEX</td>
      <td class="tdr"><a href="#Page_257">257</a></td>
   </tr>
 </tbody>
</table>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_1">[Pg 1]</span></p>
<h2 class="nobreak" id="CHAPTER_1">Chapter 1<br />
<span class="h_subtitle">CAN MACHINES THINK?<br />WHAT IS A MECHANICAL BRAIN?</span></h2>
</div>

<p>Recently there has been a good deal of news about strange giant
machines that can handle information with vast speed and skill. They
calculate and they reason. Some of them are cleverer than others—able
to do more kinds of problems. Some are extremely fast: one of them does
5000 additions a second for hours or days, as may be needed. Where they
apply, they find answers to problems much faster and more accurately
than human beings can; and so they can solve problems that a man’s life
is far too short to permit him to do. That is why they were built.</p>

<p>These machines are similar to what a brain would be if it were made of
hardware and wire instead of flesh and nerves. It is therefore natural
to call these machines <i>mechanical brains</i>. Also, since their
powers are like those of a giant, we may call them <i>giant brains</i>.</p>

<p>Several giant mechanical brains are now at work finding out
answers never before known. Two are in Cambridge, Mass.; one is
at Massachusetts Institute of Technology, and one at Harvard
University. Two are in Aberdeen, Md., at the Army’s Ballistic Research
Laboratories. These four machines were finished in the period 1942
to 1946 and are described in later chapters of this book. More giant
brains are being constructed.</p>

<p>Can we say that these machines really think? What do we mean by
thinking, and how does the human brain think?
<span class="pagenum" id="Page_2">[Pg 2]</span></p>

<h3>HUMAN THINKING</h3>

<p>We do not know very much about the physical process of thinking in the
human brain. If you ask a scientist how flesh and blood in a human
brain can think, he will talk to you a little about nerves and about
electrical and chemical changes, but he will not be able to tell you
very much about how we add 2 and 3 and make 5. What men know about the
way in which a human brain thinks can be put down in a few pages, and
what men do not know would fill many libraries.</p>

<p>Injuries to brains have shown some things of importance; for example,
they have shown that certain parts of the brain have certain
duties. There is a part of the brain, for instance, where sights
are recorded and compared. If an accident damages the part of the
brain where certain information is stored, the human being has to
relearn—haltingly and badly—the information destroyed.</p>

<p>We know also that thinking in the human brain is done essentially by
a process of storing information and then referring to it, by a process
of learning and remembering. We know that there are no little wheels
in the brain so that a wheel standing at 2 can be turned 3 more steps
and the result of 5 read. Instead, you and I store the information that
2 and 3 are 5, and store it in such a way that we can give the answer
when questioned. But we do not know the register in our brain where
this particular piece of information is stored. Nor do we know how,
when we are questioned, we are able automatically to pick up the nerve
channels that lead into this register, get the answer, and report it.</p>

<p>Since there are many nerves in the brain, about 10 billion of them,
in fact, we are certain that the network of connecting nerves is a main
part of the puzzle. We are therefore much interested in nerves and
their properties.</p>

<h3>NERVES AND THEIR PROPERTIES</h3>

<p>A single nerve, or <i>nerve cell</i>, consists of a <i>cell nucleus</i>
and a <i>fiber</i>. This fiber may have a length of anything from a
<span class="pagenum" id="Page_3">[Pg 3]</span>
small fraction of an inch up to several feet. In the laboratory,
successive impulses can be sent along a nerve fiber as often as 1000
a second. Impulses can travel along a nerve fiber in either direction
at a rate from 3 feet to 300 feet a second. Because the speed of
the impulse is far less than 186,000 miles a second—the speed of
an electric current—the impulse in the nerve is thought by some
investigators to be more chemical than electrical.</p>

<p>We know that a nerve cell has what is called an <i>all-or-none
response</i>, like the trigger of a gun. If you stimulate the nerve
up to a certain point, nothing will happen; if you reach that point,
or cross it,—bang!—the nerve responds and sends out an impulse. The
strength of the impulse, like the shot of the gun, has no relation
whatever to the amount of the stimulation.</p>

<div class="figcenter">
  <img id="FIG_1-1" src="images/i_003.jpg" alt="" width="600" height="192" />
  <p class="f120"><span class="smcap">Fig. 1.</span> Scheme of a nerve cell.</p>
</div>

<p>The structure between the end of one nerve and the beginning of the
next is called a <i>synapse</i> (<a href="#FIG_1-1">see Fig. 1</a>).
No one really knows very much about synapses, for they are extremely
small and it is not easy to tell where a synapse stops and other stuff
begins. Impulses travel through synapses in from ½ to 3 thousandths of
a second. An impulse travels through a synapse only in one direction,
from the head (or <i>axon</i>) of one nerve fiber to the foot (or
<i>dendrite</i>) of another. It seems clear that the activity in a
synapse is chemical. When the head of a nerve fiber brings in an
impulse to a synapse, apparently a chemical called <i>acetylcholine</i>
is released and may affect the foot of another fiber, thus transmitting
the impulse; but the process and the conditions for it are still not
well understood.</p>

<p>It is thought that nearly all information is handled in the brain by
groups of nerves in parallel paths. For example, the eye is estimated
<span class="pagenum" id="Page_4">[Pg 4]</span>
to have about 100 million nerves sensitive to light, and the
information that they gather is reported by about 1 million nerves to
the part of the brain that stores sights.</p>

<p>Not much more is yet known, however, about the operation of handling
information in a human brain. We do not yet know how the nerves are
connected so that we can do what we do. Probably the greatest obstacle
to knowledge is that so far we cannot observe the detailed structure of
a living human brain while it performs, without hurting or killing it.</p>

<h3>BEHAVIOR THAT IS THINKING</h3>

<p>Therefore, we cannot yet tell what thinking is by observing precisely
how a human brain does it. Instead, we have to define thinking by
describing the kind of behavior that we call thinking. Let us consider
some examples.</p>

<p>When you and I add 12 and 8 and make 20, we are thinking. We use our
minds and our understanding to count 8 places forward from 12, for
example, and finish with 20. If we could find a dog or a horse that
could add numbers and tell answers, we would certainly say that the
animal could think.</p>

<p>With no trouble a machine can do this. An ordinary 10-column adding
machine can be given two numbers like 1,378,917,766 and 2,355,799,867
and the instruction to add them. The machine will then give the answer,
3,734,717,633, much faster than a man. In fact, the mechanical brain at
Harvard can add a number of 23 digits to another number of 23 digits
and get the right answer in ³/₁₀ of a second.</p>

<p>Or, suppose that you are walking along a road and come to a fork. If
you stop, read the signpost, and then choose left or right, you are
thinking. You know beforehand where you want to go, you compare your
destination with what the signpost says, and you decide on your route.
This is an operation of logical choice.</p>

<p>A machine can do this. The mechanical brain now at Aberdeen which was
built at Bell Laboratories can examine any number that comes up in the
process of a calculation and tell whether it is bigger than 3 (or any
stated number) or smaller. If the number is bigger than 3, the machine
<span class="pagenum" id="Page_5">[Pg 5]</span>
will choose one process; if the number is smaller than 3, the machine
will choose another process.</p>

<p>Now suppose that we consider the basic operation of all thinking: in
the human brain it is called learning and remembering, and in a machine
it is called storing information and then referring to it. For example,
suppose you want to find 305 Main Street in Kalamazoo. You look up a
map of Kalamazoo; the map is information kindly stored by other people
for your use. When you study the map, notice the streets and the
numbering, and then find where the house should be, you are thinking.</p>

<p>A machine can do this. In the Bell Laboratories’ mechanical brain, for
example, the map could be stored as a long list of the blocks of the
city and the streets and numbers that apply to each block. The machine
will then hunt for the city block that contains 305 Main Street and
report it when found.</p>

<p>A machine can handle information; it can calculate, conclude, and
choose; it can perform reasonable operations with information. A
machine, therefore, can think.</p>

<h3>THE DEFINITION OF A MECHANICAL BRAIN</h3>

<p>Now when we speak of a machine that thinks, or a mechanical brain,
what do we mean? Essentially, a <i>mechanical brain</i> is a machine
that handles information, transfers information automatically from
one part of the machine to another, and has a flexible control over
the sequence of its operations. No human being is needed around such
a machine to pick up a physical piece of information produced in
one part of the machine, personally move it to another part of the
machine, and there put it in again. Nor is any human being needed to
give the machine instructions from minute to minute. Instead, we can
write out the whole program to solve a problem, translate the program
into machine language, and put the program into the machine. Then we
press the “start” button; the machine starts whirring; and it prints
out the answers as it obtains them. Machines that handle information
have existed for more than 2000 years. These two properties are new,
however, and make a deep break with the past.
<span class="pagenum" id="Page_6">[Pg 6]</span></p>

<p>How should we imagine a mechanical brain? One way to think of a
mechanical brain is shown in <a href="#FIG_2-1">Fig. 2</a>. We see
here a railroad line with four stations, marked <i>input</i>,
<i>storage</i>, <i>computer</i>, and <i>output</i>. These stations
are joined by little gates or switches to the main railroad line.
We can imagine that numbers and other information move along this
railroad line, loaded in freight cars. <i>Input</i> and <i>output</i>
are stations where numbers or other information go in and come out,
respectively. <i>Storage</i> is a station where there are many
platforms and where information can be stored. The <i>computer</i> is a
special station somewhat like a factory; when two numbers are loaded on
platforms 1 and 2 of this station and an order is loaded on platform 3,
then another number is produced on platform 4.</p>

<div class="figcenter">
  <img id="FIG_2-1" src="images/i_006.jpg" alt="" width="600" height="468" />
  <p class="f120"><span class="smcap">Fig. 2.</span> Scheme of a mechanical brain.</p>
</div>

<p>We see also a tower, marked <i>control</i>. This tower runs a telegraph
line to each of its little watchmen standing by the gates. The tower
tells them when to open and when to shut which gates.</p>

<p>Now we can see that, just as soon as the right gates are shut, freight
<span class="pagenum" id="Page_7">[Pg 7]</span>
cars of information can move between stations. Actually the freight
cars move at the speed of electric current, thousands of miles a
second. So, by closing the right gates each fraction of a second,
we can flash numbers and information through the system and perform
operations of reasoning. Thus we obtain a mechanical brain.</p>

<p>In general, a mechanical brain is made up of:</p>

<div class="blockquot">
<p class="neg-indent">1. A quantity of registers where information
(numbers and instructions) can be stored.</p>

<p class="neg-indent">2. Channels along which information can be
sent.</p>

<p class="neg-indent">3. Mechanisms that can carry out arithmetical and
logical operations.</p>

<p class="neg-indent">4. A control, which guides the machine to perform
a sequence of operations.</p>

<p class="neg-indent">5. Input and output devices, whereby information
can go into the machine and come out of it.</p>

<p class="neg-indent">6. Motors or electricity, which provide
energy.</p>
</div>

<h3>THE KINDS OF THINKING A<br /> MECHANICAL BRAIN CAN DO</h3>

<p>There are many kinds of thinking that mechanical brains can do. Among
other things, they can:</p>

<ul class="index no-wrap">
<li class="isub2">&nbsp;&nbsp;1. Learn what you tell them.</li>
<li class="isub2">&nbsp;&nbsp;2. Apply the instructions when needed.</li>
<li class="isub2">&nbsp;&nbsp;3. Read and remember numbers.</li>
<li class="isub2">&nbsp;&nbsp;4. Add, subtract, multiply, divide, and round off.</li>
<li class="isub2">&nbsp;&nbsp;5. Look up numbers in tables.</li>
<li class="isub2">&nbsp;&nbsp;6. Look at a result, and make a choice.</li>
<li class="isub2">&nbsp;&nbsp;7. Do long chains of these operations one after another.</li>
<li class="isub2">&nbsp;&nbsp;8. Write out an answer.</li>
<li class="isub2">&nbsp;&nbsp;9. Make sure the answer is right.</li>
<li class="isub2">10. Know that one problem is finished, and turn to another.</li>
<li class="isub2">11. Determine <i>most</i> of their own instructions.</li>
<li class="isub2">12. Work unattended.</li>
</ul>

<p>They do these things much better than you or I. They are fast. The
mechanical brain built at the Moore School of Electrical Engineering at
the University of Pennsylvania does 5000 additions a second. They are
reliable. Even with hundreds of thousands of parts, the existing giant
<span class="pagenum" id="Page_8">[Pg 8]</span>
brains have worked successfully. They have remarkably few mechanical
troubles; in fact, for one of the giant brains, a mechanical failure
is of the order of once a month. They are powerful. The big machine
at Harvard can remember 72 numbers each of 23 digits at one time and
can do 3 operations with these numbers every second. The mechanical
brains that have been finished are able to solve problems that have
baffled men for many, many years, and they think in ways never open to
men before. Mechanical brains have removed the limits on complexity of
routine: the machine can carry out a complicated routine as easily as
a simple one. Already, processes for solving problems are being worked
out so that the mechanical brain will itself determine more than 99 per
cent of all the routine orders that it is to carry out.</p>

<p>But, you may ask, can they do any kind of thinking? The answer is no.
No mechanical brain so far built can:</p>

<ul class="index no-wrap">
<li class="isub2">1. Do intuitive thinking.</li>
<li class="isub2">2. Make bright guesses, and leap to conclusions.</li>
<li class="isub2">3. Determine <i>all</i> its own instructions.</li>
<li class="isub2">4. Perceive complex situations outside itself and interpret them.</li>
</ul>

<p>A clever wild animal, for example, a fox, can do all these things; a
mechanical brain, not yet. There is, however, good reason to believe
that most, if not all, of these operations will in the future be
performed not only by animals but also by machines. Men have only just
begun to construct mechanical brains. All those finished are children;
they have all been born since 1940. Soon there will be much more
remarkable giant brains.</p>

<h3>WHY ARE THESE GIANT BRAINS IMPORTANT?</h3>

<p>Most of the thinking so far done by these machines is with numbers.
They have already solved problems in airplane design, astronomy,
physics, mathematics, engineering, and many other sciences, that
previously could not be solved. To find the solutions of these
problems, mathematicians would have had to work for years and years,
using the best known methods and large staffs of human computers.
<span class="pagenum" id="Page_9">[Pg 9]</span></p>

<p>These mechanical brains not only calculate, however. They also remember
and reason, and thus they promise to solve some very important human
problems. For example, one of these problems is the application of what
mankind knows. It takes too long to find understandable information
on a subject. The libraries are full of books: most of them we can
never hope to read in our lifetime. The technical journals are full of
condensed scientific information: they can hardly be understood by you
and me. There is a big gap between somebody’s knowing something and
employment of that knowledge by you or me when we need it. But these
new mechanical brains handle information very swiftly. In a few years
machines will probably be made that will know what is in libraries and
that will tell very swiftly where to find certain information. Thus
we can see that mechanical brains are one of the great new tools for
finding out what we do not know and applying what we do know.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_10">[Pg 10]</span></p>
<h2 class="nobreak" id="CHAPTER_2">Chapter 2<br />
<span class="h_subtitle">LANGUAGES:<br />SYSTEMS FOR HANDLING INFORMATION</span></h2>
</div>

<p>As everyone knows, it is not always easy to think. By <i>thinking</i>,
we mean computing, reasoning, and other handling of information.
By <i>information</i> we mean collections of ideas—physically,
collections of marks that have meaning. By <i>handling</i>
information, we mean proceeding logically from some ideas to other
ideas—physically, changing from some marks to other marks in ways that
have meaning. For example, one of your hands can express an idea: it
can store the number 3 for a short while by turning 3 fingers up and
2 down. In the same way, a machine can express an idea: it can store
information by arranging some equipment. The Harvard mechanical brain
can store 132 numbers between 0 and 99,999,999,999,999,999,999,999
for days. When you want to change the number stored by your fingers,
you move them: perhaps you need a half second to change the number
stored by your fingers from 3 to 2, for example. In the same way, a
machine can change a stored number by changing the arrangement of some
equipment: the electronic brain Eniac can change a stored number in
¹/₅₀₀₀ of a second.</p>

<h3>LANGUAGES</h3>

<p>Since it is not always easy to think, men have given much attention
to devices for making thinking easier. They have worked out many
<i>systems for handling information</i>, which we often call
<i>languages</i>. Some languages are very complete and versatile and of
<span class="pagenum" id="Page_11">[Pg 11]</span>
great importance. Others cover only a narrow field—such as numbers
alone—but in this field they may be remarkably efficient. Just what is
a language?</p>

<p>Every language is both a <i>scheme for expressing meanings</i> and
<i>physical equipment</i> that can be handled. For example, let us
take <i>spoken English</i>. The scheme of spoken English consists
of more than 150,000 words expressing meanings, and some rules for
putting words together meaningfully. The physical equipment of spoken
English consists of (1) sounds in the air, and (2) the ears of millions
of people, and their mouths and voices, by which they can hear and
speak the sounds of English. For another example, let us take numbers
expressed in the <i>Arabic numerals</i> and the rules of arithmetic.
The scheme of this language contains only ten digits 0, 1, 2, 3, 4, 5,
6, 7, 8, 9 or their equivalents, and some rules for combining them.
Sufficient physical equipment for this language might very well be a
ten-column desk calculating machine with its counter wheels, gears,
keys, etc. If we tried to exchange the physical equipment of these two
languages, we would be blocked: the desk calculating machine cannot
possibly express the meaningful combinations of 150,000 words, and
sounds in the air are not permanent enough to express the steps of
division of one large number by another.</p>

<h3>SCHEMES FOR EXPRESSING MEANINGS</h3>

<p>If we examine languages that have existed, we can observe a number of
schemes for expressing meanings. In the table on <a href="#Page_12">pp. 12-13</a>
is a rough list of a dozen of them. From among these we can choose
the schemes that are likely to be useful in mechanical brains.
Schemes 11 and 12 are the schemes that have been predominantly used
in machinery for computing. Scheme 12 consisting of combinations of
just two marks, ✓, ✕, provides one of the best codes for mechanical
handling of information. This scheme, called <i>binary coding</i>
(<a href="#SUPPL_2">see Supplement 2</a>), is also useful for measuring
the quantity of information.</p>

<h3>QUANTITY OF INFORMATION</h3>

<p>How should we measure the quantity of information? The smallest unit
of information is a “yes” or a “no,” a check mark (✓) or a cross (✕),
an impulse in a nerve or no impulse, a 1 or a 0, black or white, good
or bad, etc. This twofold difference is called a <i>binary digit</i> of
information (<a href="#SUPPL_2">see Supplement 2</a>). It is the convenient
<i>unit of information</i>.
<span class="pagenum" id="Page_12">[Pg 12]</span></p>

<p class="f120 space-above2"><b>SCHEMES FOR EXPRESSING MEANINGS</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols">
  <thead><tr>
      <th class="tdc" colspan="6"><span class="smcap">Example:</span></th>
   </tr><tr>
      <th class="tdc" colspan="2">&nbsp;</th>
      <th class="tdc" colspan="3">/——————^—————————\</th>
      <th class="tdc">&nbsp;</th>
   </tr><tr>
      <th class="tdc"><span class="smcap">No.</span></th>
      <th class="tdc"><span class="smcap">Principle<br />of Scheme</span></th>
      <th class="tdc"><span class="smcap">Sign</span></th>
      <th class="tdc"><span class="smcap">Used in</span></th>
      <th class="tdc"><span class="smcap">Significance</span></th>
      <th class="tdc"><span class="smcap">Name of<br />Scheme</span></th>
   </tr><tr>
      <th class="tdc bb">(1)</th>
      <th class="tdc bb">(2)</th>
      <th class="tdc bb">(3)</th>
      <th class="tdc bb">(4)</th>
      <th class="tdc bb">(5)</th>
      <th class="tdc bb">(6)</th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc bb" colspan="6"><big><i>Sounds</i></big></td>
   </tr><tr>
      <td class="tdc_top">1.</td>
      <td class="tdc_top bb">Sound of new<br />word is like<br />sound of<br />referent</td>
      <td class="tdc_top bb">Bobwhite<a id="FNanchor_2" href="#Footnote_2" class="fnanchor">[2]</a></td>
      <td class="tdc_top bb">Spoken<br />English</td>
      <td class="tdc_top bb">kind of quail,<br />so called<br />from its note</td>
      <td class="tdc_top bb">Imitative;<br />bowwow<br />theory</td>
   </tr><tr>
      <td class="tdc_top">2.</td>
      <td class="tdc_top bb">An utterance<br />becomes a<br />new word</td>
      <td class="tdc_top bb">Pooh!<a id="FNanchor_3" href="#Footnote_3" class="fnanchor">[3]</a></td>
      <td class="tdc_top bb">Spoken<br />English</td>
      <td class="tdc_top bb">The speaker<br />expresses<br />disdain</td>
      <td class="tdc_top bb">Pooh-pooh<br />theory</td>
   </tr><tr>
      <td class="tdc_top">3.</td>
      <td class="tdc_top bb">New word is<br />like another<br />word</td>
      <td class="tdc_top bb">Chortle<a id="FNanchor_4" href="#Footnote_4" class="fnanchor">[4]</a></td>
      <td class="tdc_top bb">Spoken<br />English;<br />invented by<br />Lewis Carroll,<br />1896</td>
      <td class="tdc_top bb">“Chuckle”<br />and<br />“snort”<br />blended</td>
      <td class="tdc_top bb">Analogical</td>
   </tr><tr>
      <td class="tdc_top bb">4.</td>
      <td class="tdc_top bb">Word has<br />been used<br />through<br />the ages</td>
      <td class="tdc_top bb">Mother<a id="FNanchor_5" href="#Footnote_5" class="fnanchor">[5]</a></td>
      <td class="tdc_top bb">Spoken<br />English</td>
      <td class="tdc_top bb">Female<br />parent</td>
      <td class="tdc_top bb">Historical</td>
   </tr><tr>
      <td class="tdc bb" colspan="6"><big><i>Sights</i></big></td>
   </tr><tr>
      <td class="tdc_top">5.</td>
      <td class="tdc_top bb">Picture<br />is like<br />referent</td>
      <td class="tdc_top bb"><img src="images/i_012.jpg" alt="" width="100" height="103" /></td>
      <td class="tdc_top bb">Egyptian;<br />Ojibwa<br />(American<br />Indian)</td>
      <td class="tdc_top bb">Picture of<br />eye and<br />tears, to<br />mean grief</td>
      <td class="tdc_top bb">Imitative;<br />pictographic</td>
   </tr><tr>
      <td class="tdc_top bb">6.<span class="pagenum" id="Page_13">[Pg 13]</span></td>
      <td class="tdc_top bb">Pattern is<br />symbol of<br />an idea</td>
      <td class="tdc bb"><big>5</big></td>
      <td class="tdc_top bb">English;<br />French;<br />German;<br />etc.</td>
      <td class="tdc_top bb">Five;<br />cinq;<br />fünf;<br />etc.</td>
      <td class="tdc_top bb">Ideographic;<br />mathematical;<br />symbolic;<br />numeric</td>
   </tr><tr>
      <td class="tdc bb" colspan="6"><big><i>Mapping of Sounds</i></big></td>
   </tr><tr>
      <td class="tdc_top">7.</td>
      <td class="tdc_top bb">Object<br />pictured<br />as the<br />wanted<br />sound</td>
      <td class="tdc bb"><img src="images/i_013a.jpg" alt="" width="100" height="55" /></td>
      <td class="tdc_top bb">Possible<br />English</td>
      <td class="tdc_top bb">Picture of<br />a knot to<br />mean “not”</td>
      <td class="tdc_top bb">Rebus-<br />writing;<br />phonographic</td>
   </tr><tr>
      <td class="tdc_top">8.</td>
      <td class="tdc_top bb">Pattern is<br />symbol for<br />a large<br />ound unit</td>
      <td class="tdc bb"><img src="images/i_013b.jpg" alt="" width="100" height="50" /></td>
      <td class="tdc_top bb">Ancient<br />Cypriote<br />(island of<br />Cyprus)</td>
      <td class="tdc_top bb">Sign for<br />the<br />syllable<br /><i>mu</i></td>
      <td class="tdc_top bb">Syllable-<br />writing</td>
   </tr><tr>
      <td class="tdc_top bb">9.</td>
      <td class="tdc_top bb">Pattern is<br />symbol for<br />a small<br />sound unit</td>
      <td class="tdc bb"><big>Ʒ</big></td>
      <td class="tdc_top bb">International<br />Phonetic<br />Alphabet of<br />87 characters</td>
      <td class="tdc_top bb">The sound<br /><i>zh</i>, as<br /><i>s</i> in<br />“measure”</td>
      <td class="tdc_top bb">Phonetic<br />writing<br />alphabetic<br />writing;</td>
   </tr><tr>
      <td class="tdc bb" colspan="6"><big><i>Mapping of Sights or Symbols</i></big></td>
   </tr><tr>
      <td class="tdc_top">10.</td>
      <td class="tdc_top bb">Systematic<br />combinations<br />of 26<br />letters</td>
      <td class="tdc bb"><b> ENIAC</b></td>
      <td class="tdc_top bb">Abbreviations,<br />etc.</td>
      <td class="tdc_top bb">Initial<br />letters<br />of a<br />5-word<br />title</td>
      <td class="tdc_top bb">Alphabetic<br />coding</td>
   </tr><tr>
      <td class="tdc_top">11.</td>
      <td class="tdc_top bb">Systematic<br />combinations<br />of 10 digits</td>
      <td class="tdc bb">135-03-1228</td>
      <td class="tdc_top bb">Abbreviations,<br />nomenclature,<br />etc.</td>
      <td class="tdc_top bb">Social<br />Security<br />No. of<br />a person</td>
      <td class="tdc_top bb">Numeric<br />coding</td>
   </tr><tr>
      <td class="tdc_top bb">12.</td>
      <td class="tdc_top bb">Systematic<br />combinations<br />of 2 marks</td>
      <td class="tdc bb">✓,✕,✕,✓,✓</td>
      <td class="tdc_top bb">Checking<br />lists,<br />etc.</td>
      <td class="tdc_top bb">“yes,” “no,”<br />“no,” “yes,”<br />“yes,”<br />respectively</td>
      <td class="tdc_top bb">Binary<br />coding</td>
   </tr><tr>
      <td class="tdc" colspan="6">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_14">[Pg 14]</span>
With 2 units of information or 2 binary digits (1 or 0) we can
represent 4 pieces of information:</p>

<p class="f120">00, 01, 10, 11</p>

<p class="no-indent">With 3 units of information we can represent 8 pieces of information:</p>

<p class="f120">000, 001, 010, 011, 100, 101, 110, 111</p>

<p class="no-indent">With 4 units of information we can represent 16 pieces of information:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdl">0000</td>
      <td class="tdl_ws1">0001</td>
      <td class="tdl_ws1">0010</td>
      <td class="tdl_ws1">0011</td>
   </tr><tr>
      <td class="tdl">0100</td>
      <td class="tdl_ws1">0101</td>
      <td class="tdl_ws1">0110</td>
      <td class="tdl_ws1">0111</td>
   </tr><tr>
      <td class="tdl">1000</td>
      <td class="tdl_ws1">1001</td>
      <td class="tdl_ws1">1010</td>
      <td class="tdl_ws1">1011</td>
   </tr><tr>
      <td class="tdl">1100</td>
      <td class="tdl_ws1">1101</td>
      <td class="tdl_ws1">1110</td>
      <td class="tdl_ws1">1111</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Now 4 units of information are sufficient to
represent a <i>decimal digit</i> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 and
allow 6 possibilities to be left over; 3 units of information are not
sufficient. For example, we may have:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdc">0</td>
      <td class="tdl_ws1">0000</td>
      <td class="tdc_ws1">5</td>
      <td class="tdl">0101</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">0001</td>
      <td class="tdc">6</td>
      <td class="tdl">0110</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdl_ws1">0010</td>
      <td class="tdc">7</td>
      <td class="tdl">0111</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdl_ws1">0011</td>
      <td class="tdc">8</td>
      <td class="tdl">1000</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdl_ws1">0100</td>
      <td class="tdc">9</td>
      <td class="tdl">1001</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">We say, therefore, that a decimal digit 0, 1, 2,
3, 4, 5, 6, 7, 8, 9 is <i>equivalent</i> to 4 units of information.
Thus a table containing 10,000 numbers, each of 10 decimal digits, is
equivalent to 400,000 units of information.</p>

<p>One of the 26 letters of the alphabet is equivalent to 5 units
of information, for, 5 binary digits (1 or 0) have 32 possible
arrangements, and these are enough to provide for the 26 letters. Any
printed information in English can be expressed in about 80 characters
consisting of 10 numerals, 52 capital and small letters, and some 18
punctuation marks and other types of marks; 6 binary digits (1 or 0)
have 64 possible arrangements, and 7 binary digits (1 or 0) have 128
<span class="pagenum" id="Page_15">[Pg 15]</span>
possible arrangements. Each character in a printed book, therefore, is
roughly equivalent to 7 units of information.</p>

<p>It can be determined that a big telephone book or a big reference
dictionary stores printed information at the rate of about 1 billion
units of information per cubic foot. If the 10 billion nerves in the
human brain could independently be impulsed or not impulsed, then the
human brain could conceivably store 10 billion units of information.
The largest library in the world is the Library of Congress, containing
7 million volumes including pamphlets. It stores about 100 trillion
units of information.</p>

<p>We can thus see the significance of a <i>quantity of information</i>
from 1 unit to 100 trillion units. No distinction is here made
between information that reports facts and information that does not.
For example, a book of fiction about persons who never existed is
still counted as information, and, of course, much instruction and
entertainment may be found in such a source.</p>

<h3>PHYSICAL EQUIPMENT FOR<br />HANDLING INFORMATION</h3>

<p>The first thing we want to do with information is <i>store</i> it.
The second thing we want to do is <i>combine</i> it. We want equipment
that makes these two processes easy and efficient. We
want equipment for handling information that:</p>

<div class="blockquot">
<p class="neg-indent">1. Costs little.</p>

<p class="neg-indent">2. Holds much information in little space.</p>

<p class="neg-indent">3. Is <i>permanent</i>, when we want to keep the
information.</p>

<p class="neg-indent">4. Is <i>erasable</i>, when we want to remove
information.</p>

<p class="neg-indent">5. Is <i>versatile</i>, holds easily any kind of
information, and allows operations to be done easily.</p>
</div>

<p>The amount of human effort needed to handle information correctly
depends very much on the properties of the physical equipment
expressing the information, although the laws of correct reasoning are
independent of the equipment. For example, the great difficulty with
spoken sounds as physical equipment for handling information is the
trouble of storing them. The technique for doing so was mastered only
about 1877 when Thomas A. Edison made the first phonograph. Even with
this advance, no one can glance at a soundtrack and tell quickly what
sounds are stored there; only by turning back the machine and listening
to a groove can we determine this. It was not possible for the men of
2000 <span class="smcap">b.c.</span> to wait thousands of years for the storing
of spoken sounds. The problem of storing information was accordingly taken to
other types of physical equipment.
<span class="pagenum" id="Page_16">[Pg 16]</span></p>

<p class="f120 space-above2"><b>PHYSICAL EQUIPMENT FOR<br />HANDLING INFORMATION</b></p>

<table id="TABLE_PE" class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols">
  <thead><tr>
      <th class="tdc"><span class="smcap">No.</span></th>
      <th class="tdc"><span class="smcap">Physical<br />Objects</span></th>
      <th class="tdc"><span class="smcap">Arranged<br />in or on</span></th>
      <th class="tdc"><span class="smcap">Operated or<br />Produced by</span></th>
      <th class="tdc"><span class="smcap">Low<br />Cost?</span></th>
      <th class="tdc"><span class="smcap">Little<br />Space?</span></th>
      <th class="tdc"><span class="smcap">Perma-<br />nent?</span></th>
      <th class="tdc"><span class="smcap">Eras-<br />able?</span></th>
      <th class="tdc"><span class="smcap">Vers-<br />atile?</span></th>
   </tr><tr>
      <th class="tdc bb">(1)</th>
      <th class="tdc bb">(2)</th>
      <th class="tdc bb">(3)</th>
      <th class="tdc bb">(4)</th>
      <th class="tdc bb">(5)</th>
      <th class="tdc bb">(6)</th>
      <th class="tdc bb">(7)</th>
      <th class="tdc bb">(8)</th>
      <th class="tdc bb">(9)</th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc bb" colspan="9"><big><i>Mind</i></big></td>
   </tr><tr>
      <td class="tdc_top bb">1.</td>
      <td class="tdc_top bb">Nerve<br />cells</td>
      <td class="tdc_top bb">Human<br />brain</td>
      <td class="tdc bb">Body</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc bb" colspan="9"><big><i>Sounds</i></big></td>
   </tr><tr>
      <td class="tdc">2.</td>
      <td class="tdc bb">Sounds</td>
      <td class="tdc bb">Air</td>
      <td class="tdc bb">Voice</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top bb">3.</td>
      <td class="tdc_top bb">Sound-<br />tracks</td>
      <td class="tdc_top bb">Wax<br />cylinders,<br />phonograph<br />records</td>
      <td class="tdc_top bb">Machines<br />and<br />motors</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc bb" colspan="9"><big><i>Sights</i></big></td>
   </tr><tr>
      <td class="tdc_top">4.</td>
      <td class="tdc bb">Marks</td>
      <td class="tdc bb">Sand</td>
      <td class="tdc bb">Stick</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕</td>
   </tr><tr>
      <td class="tdc_top">5.</td>
      <td class="tdc_top bb">Colored<br />painting<br />canvases,<br />etc.</td>
      <td class="tdc_top bb">Cave<br />walls,</td>
      <td class="tdc_top bb">Paintbrush<br />and paints</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✕✕</td>
   </tr><tr>
      <td class="tdc_top">6.</td>
      <td class="tdc_top bb">Marks,<br />inscript-<br />ions</td>
      <td class="tdc_top bb">Clay,<br />stone</td>
      <td class="tdc_top bb">Stylus,<br />chisel</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✓</td>
   </tr><tr>
      <td class="tdc_top">7.</td>
      <td class="tdc bb">Marks</td>
      <td class="tdc bb">Slate</td>
      <td class="tdc bb">Chalk</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
   </tr><tr>
      <td class="tdc_top">8.</td>
      <td class="tdc_top bb">Marks<br />parchment,<br />etc.</td>
      <td class="tdc_top bb">Paper,<br />and ink,<br />pencil</td>
      <td class="tdc bb">Pen</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top">9.</td>
      <td class="tdc_top bb">Letters,<br />etc.</td>
      <td class="tdc_top bb">Paper<br />books<br />etc.</td>
      <td class="tdc_top bb">Printing<br />press,<br />movable<br />type,<br />motor,<br />and hands</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top">10.</td>
      <td class="tdc_top bb">Photo-<br />graphs</td>
      <td class="tdc_top bb">Film,<br />prints,<br />etc.</td>
      <td class="tdc_top bb">Camera</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top bb">11.</td>
      <td class="tdc_top bb">Letters,<br />etc.</td>
      <td class="tdc_top bb">Paper,<br />mimeograph<br />stencil,<br />etc.</td>
      <td class="tdc_top bb">Typewriter<br />and<br />fingers</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc bb" colspan="9"><big><i>Body</i></big>
                          <span class="pagenum" id="Page_17">[Pg 17]</span></td>
   </tr><tr>
      <td class="tdc_top">12.</td>
      <td class="tdc bb">Gestures</td>
      <td class="tdc bb">Space</td>
      <td class="tdc bb">Body</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕✕</td>
   </tr><tr>
      <td class="tdc_top bb">13.</td>
      <td class="tdc bb">Fingers</td>
      <td class="tdc bb">Hands</td>
      <td class="tdc bb">Body</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕✕</td>
   </tr><tr>
      <td class="tdc bb" colspan="9"><big><i>Objects</i></big></td>
   </tr><tr>
      <td class="tdc_top">14.</td>
      <td class="tdc bb">Pebbles</td>
      <td class="tdc bb">Slab</td>
      <td class="tdc bb">Hands</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕✕</td>
   </tr><tr>
      <td class="tdc_top">15.</td>
      <td class="tdc bb">Knots</td>
      <td class="tdc bb">String</td>
      <td class="tdc bb">Hands</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕✕</td>
   </tr><tr>
      <td class="tdc_top">16.</td>
      <td class="tdc_top bb">Tallies,<br />notches</td>
      <td class="tdc bb">Stick</td>
      <td class="tdc bb">Knife</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕✕</td>
      <td class="tdc bb">✕✕</td>
   </tr><tr>
      <td class="tdc_top">17.</td>
      <td class="tdc bb">Beads</td>
      <td class="tdc_top bb">Rods in<br />a frame,<br />abacus</td>
      <td class="tdc bb">Hands</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕✕</td>
   </tr><tr>
      <td class="tdc_top bb">18.</td>
      <td class="tdc_top bb">Ruled<br />lines,<br />pointers</td>
      <td class="tdc_top bb">Rulers,<br />scales,<br />dials</td>
      <td class="tdc_top bb">Hands,<br />pressure,<br />etc.</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
   </tr><tr>
      <td class="tdc bb" colspan="9"><big><i>Machines</i></big></td>
   </tr><tr>
      <td class="tdc_top">19.</td>
      <td class="tdc_top bb">Counter<br />wheels,<br />gears,<br />keys,<br />lights,<br />etc.</td>
      <td class="tdc_top bb">Desk<br />calculating<br />machines,<br />fire-control<br />instruments,<br />etc.</td>
      <td class="tdc_top bb">Motor<br />and<br />hands</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
   </tr><tr>
      <td class="tdc_top">20.</td>
      <td class="tdc_top bb">Punched<br />cards<br />and<br />paper<br />tape</td>
      <td class="tdc_top bb">Punch card<br />machinery,<br />teletype,<br />etc.</td>
      <td class="tdc_top bb">Motor<br />and<br />input<br />instructions</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top">21.</td>
      <td class="tdc bb">Relays</td>
      <td class="tdc_top bb">Dial<br />telephone,<br />other<br />machinery</td>
      <td class="tdc_top bb">Motor<br />and<br />input<br />instructions</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top">22.</td>
      <td class="tdc_top bb">Elect-<br />ronic<br />tubes</td>
      <td class="tdc bb">Machinery</td>
      <td class="tdc_top bb">Motor<br />and<br />input<br />instructions</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top">23.</td>
      <td class="tdc_top bb">Magnetic<br />surfaces:<br />wire,<br />tape,<br />discs</td>
      <td class="tdc bb">Machinery</td>
      <td class="tdc_top bb">Motor<br />and<br />input<br />instructions</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top">24.</td>
      <td class="tdc_top bb">Delay<br />lines:<br />electric,<br />acoustic</td>
      <td class="tdc bb">Machinery</td>
      <td class="tdc_top bb">Motor<br />and<br />input<br />instructions</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc_top bb">25.</td>
      <td class="tdc_top bb">Electro-<br />static<br />storage<br />tubes</td>
      <td class="tdc bb">Machinery</td>
      <td class="tdc_top bb">Motor<br />and<br />input<br />instructions</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✕</td>
      <td class="tdc bb">✓✓</td>
      <td class="tdc bb">✓✓</td>
   </tr><tr>
      <td class="tdc" colspan="9">&nbsp;</td>
   </tr>
 </tbody>
</table>

<ul class="index fontsize_120">
<li class="isub4">✓✓  &nbsp;yes, very.</li>
<li class="isub4">✓    &nbsp;yes, adequately.</li>
<li class="isub4">✕    &nbsp;not generally.</li>
<li class="isub4">✕✕  not at all.</li>
</ul>

<p><span class="pagenum" id="Page_18">[Pg 18]</span>
What are the types of physical equipment for handling information, and
which are the good ones? In the table on <a href="#Page_16">pp. 16-17</a>
is a rough list of 25 types of physical equipment for handling
information. ✓✓ means “yes, very;” ✓ means “yes, adequately;” ✕ means
“not generally;” ✕✕ means “not at all.”</p>

<p>For example, our <i>fingers</i> (<a href="#TABLE_PE">see No. 13</a>)
as a device for handling information are very expensive for most
cases. They take up a good deal of space. Certainly they are very
temporary storage; any information they may express is very erasable;
and what we can express with them alone is very limited. Yet, with
a <i>typewriter</i> (<a href="#TABLE_PE">see No. 11</a>), our fingers become
versatile and efficient. In fact, our fingers can make 4 strokes a second; we
can select any one of about 38 keys; and, since each key is equivalent to
5 or 6 units of information, the effective speed of our fingers may be
about 800 units of information a second.</p>

<h3>LANGUAGES OF PHYSICAL OBJECTS</h3>

<p>The use of pebbles (<a href="#TABLE_PE">see No. 14</a>) for keeping track
of numerical information is shown in the history of the words containing the
root <i>calc</i>-of the word <i>calculate</i>. The Latin word
<i>calcis</i> meant pertaining to lime or limestone, and the Latin
word <i>calculus</i> derived from it meant first a small piece of
limestone, and later any small stone, particularly a pebble used in
counting. All three of these meanings have left descendants: “chalk,”
“calcite,” “calcium,” relating in one way or another to lime; in
medicine, “calculus,” referring to stones in the kidneys or elsewhere
in the body; and in mathematics, “calculate,” “calculus,” referring to
computations, once done with pebbles.</p>

<p>The pebbles, and the slab (for which the ancient Greek word is
<i>abax</i>) on which they were arranged and counted, were later
replaced, for ease in handling, by groups of beads strung on rods and
<span class="pagenum" id="Page_19">[Pg 19]</span>
placed in a frame (<a href="#TABLE_PE">see No. 17</a>). These constituted the <i>abacus</i>
(<a href="#SUPPL_2">see Supplement 2</a> and the <a href="#FIG_1-S">figure</a> there).
This was the first calculating machine. It is still used all over Asia;
in fact, even today more people use the abacus for accounting than
use pencil and paper. The skill with which the abacus can be used was
shown in November 1946 in a well-publicized contest in Japan. Kiyoshi
Mastuzaki, a clerk in the Japanese communications department, using
the abacus, challenged Private Thomas Wood of the U. S. Army, using a
modern desk calculating machine, and defeated him in a speed contest
involving additions, subtractions, multiplications, and divisions.</p>

<p>The heaps of small pebbles, the notches in sticks, and the abacus had
the advantage of being visible and comparatively permanent. Storing
and reading were relatively easy. They were rather compact and easy
to manipulate, certainly much easier than spoken words. But they were
subject to disadvantages also. Moving correctly from one arrangement
to another was difficult, since there was no good way for storing
intermediate steps so that the process could be easily verified.
Furthermore, these devices applied to specified numbers only. Also,
there was no natural provision for recording what the several numbers
belonged to. This had to be recorded with the help of another language,
writing.</p>

<p>The language of physical objects was picked up from obscurity by
the invention of motors and the demands of commerce and business.
Commencing in the late 1800’s, <i>desk calculating machines</i>
(<a href="#TABLE_PE">see No. 19</a>) were constructed to meet mass
calculation requirements. They would add, subtract, multiply, and
divide specific numbers with great accuracy and speed. But until
recently they still were adjuncts to the other languages, for they
provided figures one at a time for insertion in the spaces on the
ledger pages or calculation sheets where figures were called for.</p>

<p>Beginning in the 1920’s, a remarkable change has taken place. Instead
of performing single operations, machines have been developed to
perform chains of operations with many kinds of information. One of
these machines is the <i>dial telephone</i>: it can select one of 7
million telephones by successive sorting according to the letters
and digits of a telephone number. Another of these machines is a
<span class="pagenum" id="Page_20">[Pg 20]</span>
<i>fire-control instrument</i>, a mechanism for controlling the firing
of a gun. For example, in a modern anti-aircraft gun the mechanism
will observe an enemy plane flying at several hundred miles an hour,
convert the observations into gun-aiming directions, and determine the
aiming directions fast enough to shoot down the plane. <i>Punch-card
machinery</i>, machines handling information expressed as punched holes
in cards, enable the fulfillment of social security legislation, the
production of the census, and countless operations of banks, insurance
companies, department stores, and factories. And, finally, in 1942 the
first <i>mechanical brain</i> was finished at Massachusetts Institute
of Technology.</p>

<h3>THE CRUCIAL DEVICES FOR<br />MECHANICAL BRAINS</h3>

<p>Let us consider the two modern physical devices for handling
information which make mechanical brains possible. These are
<i>relays</i> and <i>electronic tubes</i> (<a href="#TABLE_PE">Nos. 21 and 22</a>).
The last three kinds of equipment listed in the table (<i>magnetic
surfaces</i>, No. 23; <i>delay lines</i>, No. 24; and <i>electrostatic
storage tubes</i>, No. 25) were not included in any mechanical brains
functioning by the middle of 1948. The discussion of them is therefore
put off to <a href="#CHAPTER_10">Chapter 10</a>, where we talk about the
future design of mechanical brains.</p>

<div class="figcenter">
  <img id="FIG_1-2" src="images/i_020.jpg" alt="" width="600" height="394" />
  <p class="f120"><span class="smcap">Fig. 1.</span> Relay</p>
</div>

<p><span class="pagenum" id="Page_21">[Pg 21]</span>
<a href="#FIG_1-2">Figure 1</a> shows a simple relay. There are two electrical
circuits here. One has two terminals—Pickup and Ground. The other has three
terminals—Common, Normally Open, and Normally Closed. When current
flows through the coil of wire around the iron, it makes the iron
a magnet; the magnet pulls down the flap of iron above, overcoming
the force of the spring. When there is no current through the coil,
the iron is not a magnet, and the flap is held up by the spring. Now
suppose that there is current in Common. When there is no current in
Pickup, the current from Common will flow through the upper contact, to
the terminal marked Normally Closed. When there is current in Pickup,
the current from Common will flow through the lower contact, to the
terminal marked Normally Open. Thus we see that a relay expresses a
“yes” or a “no,” a 1 or 0, a binary digit, a unit of information. A
relay costs $5 to $10. It is rather expensive for storing a single unit
of information. The fastest it can be changed from 1 to 0, or vice
versa, is about <big>¹/₁₀₀</big> of a second.</p>

<div class="figcenter">
  <img id="FIG_2-2" src="images/i_021.jpg" alt="" width="500" height="285" />
  <p class="f120"><span class="smcap">Fig. 2.</span> Electronic tube.</p>
</div>

<p><a href="#FIG_2-2">Figure 2</a> shows a simple electronic tube.
It has three parts—the Cathode, the Grid, and the Plate. The Grid
actually is a coarse net of metal wires. Electrons can flow from the
Cathode to the Plate, provided the voltage on the Grid is such as to
permit them to flow. So we can see that an electronic tube is a very
simple on-off device and expresses a “yes” or a “no,” a 1 or 0, a
binary digit, a unit of information. A simple electronic tube suitable
for calculating purposes costs 50 cents to a $1, only ⅒ the cost of a
relay. It can be changed from 1 to 0, or back again, in 1 millionth of
a second.</p>

<p>Relays have been widely used in the mechanical brains so far built,
and electronic tubes are the essence of Eniac.</p>

<p>In the next chapter, we shall see how physical equipment for handling
information can be put together to make a simple mechanical brain.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_22">[Pg 22]</span></p>
<h2 class="nobreak" id="CHAPTER_3">Chapter 3<br />
<span class="h_subtitle">A MACHINE THAT WILL THINK:<br />
THE DESIGN OF A VERY SIMPLE<br /> MECHANICAL BRAIN</span></h2>
</div>

<p>We shall now consider how we can design a very simple machine that will
think. Let us call it Simon, because of its predecessor, Simple Simon.</p>

<h3>SIMON, THE VERY SIMPLE<br /> MECHANICAL BRAIN</h3>

<p>By designing Simon, we shall see how we can put together physical
equipment for handling information in such a way as to get a very
simple mechanical brain. At every point in the design of Simon, we
shall make the simplest possible choice that will still give us a
machine that: handles information, transfers information automatically
from one part of the machine to another, and has control over the
sequence of operations. Simon is so simple and so small, in fact, that
it could be built to fill up less space than a grocery-store box, about
4 cubic feet. If we know a little about electrical work, we will find
it rather easy to make Simon.</p>

<p>What do we do first to design the very simple mechanical brain, Simon?</p>

<h3>SIMON’S FLESH AND NERVES—<br />REPRESENTING INFORMATION</h3>

<p>The first thing we have to decide about Simon is how information will
be represented: as we put it into Simon, as it is moved around inside
<span class="pagenum" id="Page_23">[Pg 23]</span>
of Simon, and as it comes out of Simon. We need to decide what physical
equipment we shall use to make Simon’s flesh and nerves. Since we
are taking the simplest convenient solution to each problem, let us
decide to use: <i>punched paper tape</i> for putting information in,
<i>relays</i> (<a href="#CHAPTER_2">see Chapter 2</a>) and wires for storing
and transferring information, and <i>lights</i> for putting information out.</p>

<div class="figcenter">
  <img id="FIG_1-3" src="images/i_023.jpg" alt="" width="600" height="323" />
  <p class="f120"><span class="smcap">Fig. 1.</span> Simon, the very simple mechanical brain.</p>
</div>

<p>For the equipment inside Simon, we could choose either electronic tubes
or relays. We choose relays, although they are slower, because it is
easier to explain circuits using relays. We can look at a relay circuit
laid out on paper and tell how it works, just by seeing whether or not
current will flow. Examples will be given below. When we look at a
circuit using electronic tubes laid out on paper, we still need to know
a good deal in order to calculate just how it will work.</p>

<p>How will Simon perceive a number or other information by means of
punched tape, or relays, or lights? With punched paper tape having, for
example, 2 spaces where holes may be, Simon can be told 4 numbers—00,
01, 10, 11. Here the binary digit 1 means a hole punched; the binary
digit 0 means no hole punched. With 2 relays together in a register,
Simon can remember any one of the 4 numbers 00, 01, 10, and 11. Here
the binary digit 1 means the relay picked up or energized or closed; 0
means the relay not picked up or not energized or open. With 2 lights,
Simon can give as an answer any one of the 4 numbers 00, 01, 10, 11. In
this case the binary digit 1 means the light glowing; 0 means the light
off. (<a href="#FIG_1-3">See Fig. 1.</a>)
<span class="pagenum" id="Page_24">[Pg 24]</span></p>

<p>We can say that the two lights by which Simon puts out the answer are
his <i>eyes</i> and say that he tells his answer by <i>winking</i>. We
can say also that the two mechanisms for reading punched paper tape
are Simon’s <i>ears</i>. One tape, called the <i>input tape</i>, takes
in numbers or operations. The other tape takes in instructions and is
called the <i>program tape</i>.</p>

<h3>SIMON’S MENTALITY—POSSIBLE RANGE<br />OF INFORMATION</h3>

<p>We can say that Simon has a <i>mentality</i> of 4. We mean not age
4 but just the simple fact that Simon knows only 4 numbers and can
do only 4 operations with them. But Simon can keep on doing these
operations in all sorts of routines as long as Simon has instructions.
We decide that Simon will know just 4 numbers, 0, 1, 2, 3, in order to
keep our model mechanical brain very simple. Then, for any register, we
need only 2 relays; for any answer, we need only 2 lights.</p>

<p>Any calculating machine has a <i>mentality</i>, consisting of the
whole collection of different ideas that the machine can ever actually
express in one way or another. For example, a 10-place desk calculating
machine can handle numbers up to 10 decimal digits without additional
capacity. It cannot handle bigger numbers.</p>

<div class="figcenter">
  <img id="FIG_2-3" src="images/i_024.jpg" alt="" width="400" height="376" />
  <p class="f120"><span class="smcap">Fig. 2.</span> Four directions.</p>
</div>

<p>What are the 4 <i>operations with numbers</i> which Simon can carry
out? Let us consider some simple operations that we can perform with
just 4 numbers. Suppose that they stood for 4 directions in the order
east, north, west, south (<a href="#FIG_2-3">see Fig. 2</a>). Or suppose that
they stood for a turn counterclockwise through some right angles as follows:</p>

<ul class="index">
<li class="isub4">0:&emsp;Turn through&nbsp;  0°, or no right angles.</li>
<li class="isub4">1:&emsp;Turn through&nbsp; 90°, or&nbsp; 1 right angle.</li>
<li class="isub4">2:&emsp;Turn through 180°, or&nbsp; 2 right angles.</li>
<li class="isub4">3:&emsp;Turn through 270°, or&nbsp; 3 right angles.</li>
</ul>

<p>Then we could have the operations of <i>addition</i> and
<i>negation</i>, defined as follows:
<span class="pagenum" id="Page_25">[Pg 25]</span></p>

<table class="fontsize_120 no-wrap space-below1" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc" colspan="6"><span class="smcap">Addition</span></th>
      <th class="tdc"><span class="ws4">&nbsp;</span></th>
      <th class="tdc" colspan="2"><span class="smcap">Negation</span></th>
   </tr><tr>
      <th class="tdc" colspan="6"><i>c</i> = <i>a</i> + <i>b</i></th>
      <th class="tdc">&nbsp;</th>
      <th class="tdc" colspan="2"><i>c</i> = -<i>a</i></th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc" colspan="9">&nbsp;</td>
   </tr><tr>
      <td class="tdc bb"><i>b</i>:&nbsp;</td>
      <td class="tdc bl bb">&nbsp;&nbsp;&nbsp;</td>
      <td class="tdc bb">&nbsp;0&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdc bb">&nbsp;2&nbsp;</td>
      <td class="tdc bb">&nbsp;3&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>a</i>:&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc bb"><i>a</i></td>
      <td class="tdc bl bb"><i>c</i></td>
   </tr><tr>
      <td class="tdc">0&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">0</td>
      <td class="tdc bl">0</td>
   </tr><tr>
      <td class="tdc">1&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdc">0</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">1</td>
      <td class="tdc bl">3</td>
   </tr><tr>
      <td class="tdc">2&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">2</td>
      <td class="tdc bl">2</td>
   </tr><tr>
      <td class="tdc">3&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">3</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">3</td>
      <td class="tdc bl">1</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">For example, the first table says, “1
plus 3 equals 0.” This means that, if we turn 1 right angle and then
turn in the same direction 3 more right angles, we face in exactly the
same way as we did at the start. This statement is clearly true. For
another example, the second table says, “2 is the negative of 2.” This
means that, if we turn to the left 2 right angles, we face in exactly
the same way as if we turn to the right 2 right angles, and this
statement also is, of course, true.</p>

<p>With only these two operations in Simon, we should probably find him a
little too dull to tell us much. Let us, therefore, put into Simon two
more operations. Let us choose two operations involving both numbers
and logic: in particular, (1) finding which of two numbers is greater
and (2) selecting. In this way we shall make Simon a little cleverer.</p>

<p>It is easy to teach Simon how to find which of two numbers is the
greater when all the numbers that Simon has to know are 0, 1, 2, 3.
We put all possible cases of two numbers <i>a</i> and <i>b</i> into a table:</p>

<table class="fontsize_120 no-wrap space-below1" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc" colspan="9">&nbsp;</td>
   </tr><tr>
      <td class="tdc bb"><i>b</i>:&nbsp;</td>
      <td class="tdc bl bb">&nbsp;&nbsp;&nbsp;</td>
      <td class="tdc bb">&nbsp;0&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdc bb">&nbsp;2&nbsp;</td>
      <td class="tdc bb">&nbsp;3&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>a</i>:&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr><tr>
      <td class="tdc">0&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr><tr>
      <td class="tdc">1&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr><tr>
      <td class="tdc">2&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr><tr>
      <td class="tdc">3&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Then we tell Simon that we shall mark with 1 the cases where
<i>a</i> is greater than <i>b</i> and mark with 0 the cases where <i>a</i> is not
greater than <i>b</i>:</p>

<table class="fontsize_120 no-wrap space-below1" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc" colspan="6"><span class="smcap">Greater Than</span></th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc" colspan="6">&nbsp;</td>
   </tr><tr>
      <td class="tdc bb"><i>b</i>:&nbsp;</td>
      <td class="tdc bl bb">&nbsp;&nbsp;&nbsp;</td>
      <td class="tdc bb">&nbsp;0&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdc bb">&nbsp;2&nbsp;</td>
      <td class="tdc bb">&nbsp;3&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>a</i>:&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">0&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc">1&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc">2&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc">3&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_26">[Pg 26]</span>
For example, “2 is greater than 3” is false, so we put 0 in the table
on the 2 line in the 3 column. We see that, for the 16 possible cases,
<i>a</i> is greater than <i>b</i> in 6 cases and <i>a</i> is not
greater than <i>b</i> in 10 cases.</p>

<p>There is a neat way of saying what we have just said, using the
language of <i>mathematical logic</i> (see <a href="#CHAPTER_9">Chapter 9</a>
and <a href="#SUPPL_2">Supplement 2</a>). Suppose that we consider
the statement “<i>a</i> is greater than <i>b</i>” where <i>a</i> and
<i>b</i> may be any of the numbers 0, 1, 2, 3. We can say that the
<i>truth value p</i> of a <i>statement P</i> is 1 if the statement is
true and that it is 0 if the statement is false:</p>

<p class="f120"><i>p</i> = 1 if <i>P</i> is true,&emsp;0 if <i>P</i> is false</p>

<p class="no-indent">The truth value of a statement <i>P</i> is
conveniently denoted as <i>T</i>(<i>P</i>) (<a href="#SUPPL_2">see Supplement 2</a>):</p>

<p class="f120"><i>p</i> = <i>T</i>(<i>P</i>)</p>

<p class="no-indent">Now we can say that the table for the operation
<i>greater than</i> shows the truth value of the statement “<i>a</i> is
greater than <i>b</i>”:</p>

<p class="f120"><i>p</i> = <i>T</i>(<i>a</i> &gt; <i>b</i>)</p>

<p>Let us turn now to the operation <i>selection</i>. By <i>selecting</i>
we mean choosing one number <i>a</i> if some statement <i>P</i> is true
and choosing another number <i>b</i> if that statement is not true. As
before, let <i>p</i> be the truth value of that statement <i>P</i>, and
let it be equal to 1 if <i>P</i> is true and to 0 if <i>P</i> is false.
Then the operation of selection is fully expressed in the following
table and logical formula (<a href="#SUPPL_2">see Supplement 2</a>):</p>

<table class="fontsize_120 no-wrap space-below1" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc" colspan="10"><span class="smcap">Selection</span></th>
   </tr><tr>
      <th class="tdc" colspan="10"><i>c</i> = <i>a</i>·<i>p</i> + <i>b</i>·(1 - <i>p</i>)</th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc" colspan="6">&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>p</i>:&nbsp;</td>
      <td class="tdc">&nbsp;&nbsp;&nbsp;</td>
      <td class="tdc">&nbsp;0&nbsp;</td>
      <td class="tdc">&nbsp;0&nbsp;</td>
      <td class="tdc">&nbsp;0&nbsp;</td>
      <td class="tdc">&nbsp;0&nbsp;</td>
      <td class="tdl_ws1">&nbsp;1&nbsp;</td>
      <td class="tdc">&nbsp;1&nbsp;</td>
      <td class="tdc">&nbsp;1&nbsp;</td>
      <td class="tdc">&nbsp;1&nbsp;</td>
   </tr><tr>
      <td class="tdc bb"><i>b</i>:&nbsp;</td>
      <td class="tdc bb">&nbsp;&nbsp;&nbsp;</td>
      <td class="tdc bb">&nbsp;0&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdc bb">&nbsp;2&nbsp;</td>
      <td class="tdc bb">&nbsp;3&nbsp;</td>
      <td class="tdl_ws1 bb">&nbsp;0&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdc bb">&nbsp;2&nbsp;</td>
      <td class="tdc bb">&nbsp;3&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>a</i>:&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc" colspan="8">&nbsp;</td>
   </tr><tr>
      <td class="tdc">0&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdl_ws1">0</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc">1&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdl_ws1">1</td>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
   </tr><tr>
      <td class="tdc">2&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdl_ws1">2</td>
      <td class="tdc">2</td>
      <td class="tdc">2</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdc">3&nbsp;</td>
      <td class="tdc bl">&nbsp;</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdl_ws1">3</td>
      <td class="tdc">3</td>
      <td class="tdc">3</td>
      <td class="tdc">3</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">For example, suppose that <i>a</i> is 2 and
<i>b</i> is 3 and the statement <i>P</i> is the statement “2 is greater
than 0.” Since this statement is true, <i>p</i> is 1, and</p>

<p class="f120"><i>a</i>·<i>p</i> + <i>b</i>·(1 - <i>p</i>) = 2(1) + 3(0) = 2</p>

<p><span class="pagenum" id="Page_27">[Pg 27]</span>
This result is the same as selecting 2 if 2 is greater than 0 and
selecting 3 if 2 is not greater than 0.</p>

<p>Thus we have four operations for Simon that do not overstrain his
mentality; that is, they do not require him to go to any numbers other
than 0, 1, 2, and 3. These four operations are: addition, negation,
greater than, selection. We label these operations also with the
numbers 00 to 11 as follows: addition, 00; negation, 01; greater than,
10; selection, 11.</p>

<h3>SIMON’S MEMORY—<br />STORING INFORMATION</h3>

<p>The <i>memory</i> of a mechanical brain consists of physical equipment
in which information can be stored. Usually, each section of the
physical equipment which can store one piece of information is called
a <i>register.</i> Each register in Simon will consist of 2 relays.
Each register will hold any of 00, 01, 10, 11. The information stored
in a register 00, 01, 10, 11 may express a number or may express an operation.</p>

<div id="FIG_3-3" class="figcontainer">
  <div class="figsub">
   <img src="images/i_027a.jpg" alt="" width="300" height="191" />
   <p class="center">S1-2<br /> Relay energized</p>
  </div>
  <div class="figsub">
   <img src="images/i_027b.jpg" alt="" width="300" height="190" />
   <p class="center">S1-1<br /> Relay not energized</p>
   </div>
   <p class="f120 space-below1"><span class="smcap">Fig. 3.</span>
                  Register <i>S</i>1 storing 10.</p>
</div>

<p>How many registers will we need to put into Simon to store information?
We shall need one register to read the input tape and to store the
number or operation recorded on it. We shall call this register the
<i>input register I</i>. We shall need another register to store the
number or operation that Simon says is the answer and to give it to
the output lights. We shall call this register the <i>output register
O</i>. We shall need 5 registers for the part of Simon which does the
computing, which we shall call the <i>computer</i>: we shall need 3 to
store numbers put into the computer (<i>C</i>1, <i>C</i>2, <i>C</i>3),
1 to store the operation governing the computer (<i>C</i>4), and 1 to
<span class="pagenum" id="Page_28">[Pg 28]</span>
store the result (<i>C</i>5). Suppose that we decide to have 8
registers for storing information, so as to provide some flexibility
for doing problems. We shall call these registers <i>storage
registers</i> and name them <i>S</i>1, <i>S</i>2, <i>S</i>3, ···
<i>S</i>8. Then Simon will have 15 registers: a memory that at one time
can hold 15 pieces of information.</p>

<p>How will one of these registers hold information? For example, how
will register <i>S</i>1 hold the number 2 (<a href="#FIG_3-3">see Fig. 3</a>)?
The number 2 in machine language is 10. Register <i>S</i>1 consists
of two relays, <i>S</i>1-2 and <i>S</i>1-1. 10 stored in register
<i>S</i>1 means that relay <i>S</i>1-2 will be energized and that relay
<i>S</i>1-1 will not be energized.</p>

<h3>THE CONTROL OF SIMON</h3>

<p>So far we have said nothing about the control of Simon. Is he docile?
Is he stubborn? We know what his capacity is, but we do not know how to
tell him to do anything. How do we connect our desires to his behavior?
How do we tell him a problem? How do we get him to solve it and tell
us the answer? How do we arrange control over the sequence of his
operations? For example, how do we get Simon to add 1 and 2 and tell us
the answer 3?</p>

<p>On the outside of Simon, we have said, there are two ears: little
mechanisms for reading punched paper tape. Also there are two eyes
that can wink: light bulbs that by shining or not shining can put out
information (<a href="#FIG_1-3">see Fig. 1</a>). One of the ears—let us call it
the <i>left ear</i>—takes in information about a particular problem: numbers
and operations. Here the <i>problem tape</i> or <i>input tape</i> is
listened to. Each line on the input tape contains space for 2 punched
holes. So, the information on the input tape may be 00, 01, 10, or
11—either a number or an operation. The other ear—let us call it
the <i>right ear</i>—takes in information about the sequence of
operations, the program or routine to be followed. Here the <i>program
tape</i> or <i>routine tape</i> or <i>control tape</i> is listened
to. Each line on the program tape contains space for 4 punched holes.
We tell Simon by <i>instructions</i> on the program tape what he is
to do with the information that we give him on the input tape. The
<span class="pagenum" id="Page_29">[Pg 29]</span>
information on the program tape, therefore, may be 0000, 0001, 0010,
···, 1111, or any number from 0 to 15 expressed in binary notation
(<a href="#SUPPL_2">see Supplement 2</a>).</p>

<p>How is this accomplished? In the first place, Simon is a machine, and
he behaves during time. He does different things from time to time.
His behavior is organized in <i>cycles</i>. He repeats a cycle of
behavior every second or so. In each cycle of Simon, he listens to or
reads the input tape once and he listens to or reads the program tape
twice. Every complete instruction that goes on the program tape tells
Simon a register from which information is to be sent and a register
in which information is to be received. The first time that he reads
the program tape he gets the name of the register that is to receive
certain information, the <i>receiving register</i>. The second time
he reads the program tape he gets the name of the register from which
information is to be sent, the <i>sending register</i>. He finishes
each cycle of behavior by transferring information from the sending
register to the receiving register.</p>

<p>For example, suppose that we want to get an answer out of Simon’s
computer into Simon’s output lights. We put down the instruction</p>

<p class="center">Send information from <i>C</i>5 into <i>O</i></p>

<p class="no-indent">or, more briefly,</p>

<p class="f120"><i>C</i>5 → <i>O</i></p>

<p class="no-indent">But he does not understand this language. We must
translate into machine language, in this case punched holes in the
program tape. Naturally, the punched holes in the program tape must be
able to specify any sending register and any receiving register. There
are 15 registers, and so we give them punched hole <i>codes</i> as follows:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Register</span></th>
      <th class="tdc"><span class="smcap">&nbsp;Code&nbsp;</span></th>
      <th class="tdc"><span class="smcap">&nbsp;&nbsp;Register&nbsp;&nbsp;</span></th>
      <th class="tdc"><span class="smcap">&nbsp;Code&nbsp;</span></th>
  </tr>
  </thead>
  <tbody><tr>
      <td class="tdc"><i>I&nbsp;</i></td>
      <td class="tdc">0001</td>
      <td class="tdc"><i>C</i>1</td>
      <td class="tdc">1010</td>
   </tr><tr>
      <td class="tdc"><i>S</i>1</td>
      <td class="tdc">0010</td>
      <td class="tdc"><i>C</i>2</td>
      <td class="tdc">1011</td>
   </tr><tr>
      <td class="tdc"><i>S</i>2</td>
      <td class="tdc">0011</td>
      <td class="tdc"><i>C</i>3</td>
      <td class="tdc">1100</td>
   </tr><tr>
      <td class="tdc"><i>S</i>3</td>
      <td class="tdc">0100</td>
      <td class="tdc"><i>C</i>4</td>
      <td class="tdc">1101</td>
   </tr><tr>
      <td class="tdc"><i>S</i>4</td>
      <td class="tdc">0101</td>
      <td class="tdc"><i>C</i>5</td>
      <td class="tdc">1110</td>
   </tr><tr>
      <td class="tdc"><i>S</i>5</td>
      <td class="tdc">0110</td>
      <td class="tdc"><i>O</i></td>
      <td class="tdc">1111</td>
   </tr><tr>
      <td class="tdc"><i>S</i>6</td>
      <td class="tdc">0111</td>
      <td class="tdc" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>S</i>7</td>
      <td class="tdc">1000</td>
      <td class="tdc" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>S</i>8</td>
      <td class="tdc">1001</td>
      <td class="tdc" colspan="2">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_30">[Pg 30]</span>
To translate the direction of transfer of information, which we showed
as an arrow, we put on the program tape the code for the receiving
register first—in this case, output, <i>O</i>, 1111—and the code
for the sending register second—in this case, <i>C</i>5, 1110. The
instruction becomes 1111, 1110. The first time in any cycle that Simon
listens with his right ear, he knows that what he hears is the name of
the receiving register; and the second time that he listens, he knows
that what he hears is the name of the sending register. One reason
for this sequence is that any person or machine has to be prepared
beforehand to absorb or take in any information.</p>

<p>Now how do we tell Simon to add 1 and 2? On the input tape, we put:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdc">Add</td>
      <td class="tdc">00</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc">01</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc">10</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">On the program tape, we need to put:</p>

<p class="f120"><i>I</i>&nbsp; →&nbsp; <i>C</i>4<br />
<i>I</i>&nbsp; →&nbsp; <i>C</i>1<br />
<i>I</i>&nbsp; →&nbsp; <i>C</i>2<br />
<i>C</i>5  →  <i>O</i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p class="no-indent">which becomes:</p>

<p class="f120">1101, 0001;<br />1010, 0001;<br />
1011, 0001;<br />1111, 1110&nbsp;&nbsp;</p>

<h3>THE USEFULNESS OF SIMON</h3>

<p>Thus we can see that Simon can do such a problem as:</p>

<div class="blockquot">
<p class="no-indent fontsize_120">Add 0 and 3.<br />Add 2 and the negative of 1.<br />
Find which result is greater.<br />Select 3 if this result equals 2;<br />
otherwise select 2.</p>
</div>

<p>To work out the coding for this and like problems would be a good
exercise. Simon, in fact, is a rather clever little mechanical brain,
even if he has only a mentality of 4.
<span class="pagenum" id="Page_31">[Pg 31]</span></p>

<p>It may seem that a simple model of a mechanical brain like Simon
is of no great practical use. On the contrary, Simon has the same
use in instruction as a set of simple chemical experiments has: to
stimulate thinking and understanding and to produce training and skill.
A training course on mechanical brains could very well include the
construction of a simple model mechanical brain as an exercise. In
this book, the properties of Simon may be a good introduction to the various
types of more complicated mechanical brains described in later chapters.</p>

<p>The rest of this chapter is devoted to such questions as:</p>

<div class="blockquot">
<p class="neg-indent">How do transfers of information actually take place in Simon?</p>

<p class="neg-indent">How does the computer in Simon work so that calculation
actually occurs?</p>

<p class="neg-indent">How could Simon actually be constructed?</p>
</div>

<p>What follows should be skipped unless you are interested in these
questions and the burdensome details needed for answering them.</p>

<h3>SIMON’S THINKING—<br />TRANSFERRING INFORMATION</h3>

<p>The first basic thinking operation for any mechanical brain is
transferring information automatically. Let us see how this is done in Simon.</p>

<div class="figcenter">
  <img id="FIG_4-3" src="images/i_031.jpg" alt="" width="600" height="256" />
  <p class="f120"><span class="smcap">Fig. 4.</span> Scheme of Simon.</p>
</div>

<p>Let us first take a look at the scheme of Simon as a mechanical brain
<span class="pagenum" id="Page_32">[Pg 32]</span>
(<a href="#FIG_4-3">see Fig. 4</a>). We have 1 input, 8 storage, 5 computer,
and 1 output registers, which are connected by means of transfer wires
or a transfer line along which numbers or operations can travel as
electrical impulses. This transfer line is often called the <i>bus</i>,
perhaps because it is always busy carrying something. In Simon the bus
will consist of 2 wires, one for carrying the right-hand digit and one
for carrying the left-hand digit of any number 00, 01, 10, 11. Simon
also has a number of neat little devices that will do the following:</p>

<div class="blockquot">
<p class="neg-indent">When any number goes into a register, the coils
of the relays of the register will be connected with the bus.</p>

<p class="neg-indent">When any number goes out of a register, the
contacts of the relays of the register will be connected with the bus.</p>
</div>

<p>For example, suppose that in register <i>C</i>5 the number 2 is
stored. In machine language this is 10. That means the left-hand relay
(<i>C</i>5-2) is energized and the right-hand relay (<i>C</i>5-1) is
not energized. Suppose that we want to transfer this number 2 into the
output register <i>O</i>, which has been cleared. What do we do?</p>

<p>Let us take a look at a circuit that will transfer the number
(<a href="#FIG_5-3">see Fig. 5</a>). First we see two relays in this circuit.
They belong to the <i>C</i>5 register. The <i>C</i>5-2 relay is energized since
it holds 1; current is flowing through its coil, the iron core becomes a
magnet, and the contact above it is pulled down. The <i>C</i>5-1 relay
is not energized since it holds 0; its contact is not pulled down.
The next thing we see is two <i>rectifiers</i>. The sign for these
is a triangle. These are some modern electrical equipment that allow
electrical current to flow in only one direction. In the diagram, the
direction is shown by the pointing of the triangle along the wire.
Rectifiers are needed to prevent undesired circuits. Next, we see the
bus, consisting of two wires. One carries the impulses for left-hand
or 2 relays, and the other carries impulses for the right-hand or 1
relays. Next, we see two relays, called the <i>entrance relays</i> for
the <i>O</i> register. Current from Source 1 may flow to these relays,
energize them, and close their contacts. When the first line of the
program tape is read, specifying the receiving register, the code 1111
causes Source 1 to be energized. This fact is shown schematically by
the arrow running from the program tape code 1111 to Source 1. Finally,
<span class="pagenum" id="Page_33">[Pg 33]</span>
we see the coils of the two relays for the Output or <i>O</i> register.
We thus see that we have a circuit from the contacts of the <i>C</i>5
register through the bus to the coils of the <i>O</i> register.</p>

<div class="figcenter">
  <img id="FIG_5-3" src="images/i_033.jpg" alt="" width="600" height="416" />
  <p class="f120"><span class="smcap">Fig. 5.</span> Transfer circuit.</p>
</div>

<p>We are now ready to transfer information when the second line of the
program tape is read. This line holds 1110 and designates <i>C</i>5 as
the sending register and causes Source 2 to be energized. This fact is
shown schematically by the arrow running from the second line of the
program tape to Source 2. When the second line is read, current flows:</p>

<div class="blockquot">
<p class="neg-indent">1. From Source 2.</p>
<p class="neg-indent">2. Through the contacts of the <i>C</i>5 register if closed.</p>
<p class="neg-indent">3. Through the rectifiers.</p>
<p class="neg-indent">4. Through the bus.</p>
<p class="neg-indent">5. Through the entrance relay contacts of the <i>O</i> register.</p>
<p class="neg-indent">6. Through the coils of the <i>O</i> register relays, energizing
       such of them as match with the <i>C</i>5 closed contacts; and finally</p>
<p class="neg-indent">7. Into the ground.</p>
</div>

<p class="no-indent"><span class="pagenum" id="Page_34">[Pg 34]</span>
Thus relay <i>O</i>-2 is energized; it receives current because
contact <i>C</i>5-2 is closed. And relay <i>O</i>-1 is not energized;
it receives no current since contact <i>C</i>5-1 is open. So we have
actually transferred information from the <i>C</i>5 register to the
<i>O</i> register.</p>

<p>The same process in principle applies to all transfers:</p>

<p class="blockquot">The pattern of electrical impulses, formed by the
positioning of one register, is produced in the positioning of another
register.</p>

<h3>SIMON’S COMPUTING AND REASONING</h3>

<p>Now so far the computing registers in Simon are a mystery. We have
said that <i>C</i>1, <i>C</i>2, and <i>C</i>3 take in numbers 00, 01,
10, 11, that <i>C</i>4 takes in an operation 00, 01, 10, 11, and that
<i>C</i>5 holds the result. What process does Simon use so that he has
the correct result in register <i>C</i>5?</p>

<p>Let us take the simplest computing operation first and see what sort
of a circuit using relays will give us the result. The simplest
computing operation is <i>negation</i>. In negation, a number 00, 01,
10, 11 goes into the <i>C</i>1 register, and the operation 01 meaning
negation goes into the <i>C</i>4 register, and the correct result must
be in the <i>C</i>5 register. So, first, we note the fact that the
<i>C</i>4-2 relay must not be energized, since it contains 0, and that
the <i>C</i>4-1 relay must be energized, since it contains 1.</p>

<p>Now the table for negation, with <span class="fontsize_120"><b><i>c</i> = -<i>a</i></b></span>, is:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols" >
  <tbody><tr>
      <td class="tdc bb"><big><b><i>a</i></b></big></td>
      <td class="tdc bb"><big><b><i>c</i></b></big></td>
   </tr><tr>
      <td class="tdc">&nbsp;0&nbsp;</td>
      <td class="tdc">&nbsp;0&nbsp;</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc">3</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdc">1</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Negation in machine language will be:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols" >
  <tbody><tr>
      <td class="tdc bb"><big><b><i>a</i></b></big></td>
      <td class="tdc bb"><big><b><i>c</i></b></big></td>
   </tr><tr>
      <td class="tdc">&nbsp;00&nbsp;</td>
      <td class="tdc">&nbsp;00&nbsp;</td>
   </tr><tr>
      <td class="tdc">01</td>
      <td class="tdc">11</td>
   </tr><tr>
      <td class="tdc">10</td>
      <td class="tdc">10</td>
   </tr><tr>
      <td class="tdc">11</td>
      <td class="tdc">01</td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_35">[Pg 35]</span>
Now if <i>a</i> is in the <i>C</i>1 register and if <i>c</i> is in the
<i>C</i>5 register, then negation will be:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols" >
  <tbody><tr>
      <td class="tdc bb"><big><b><i>C</i>1</b></big></td>
      <td class="tdc bb"><big><b><i>C</i>5</b></big></td>
   </tr><tr>
      <td class="tdc">&nbsp;00&nbsp;</td>
      <td class="tdc">&nbsp;00&nbsp;</td>
   </tr><tr>
      <td class="tdc">01</td>
      <td class="tdc">11</td>
   </tr><tr>
      <td class="tdc">10</td>
      <td class="tdc">10</td>
   </tr><tr>
      <td class="tdc">11</td>
      <td class="tdc">01</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">But each of these registers <i>C</i>1, <i>C</i>5
will be made up of two relays, the left-hand or 2 relay and the
right-hand or 1 relay. So, in terms of these relays, negation will be:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdc bb">&nbsp;<big><b><i>C</i>1-2</b></big>&nbsp;</td>
      <td class="tdc bb br">&nbsp;<big><b><i>C</i>1-1</b></big>&nbsp;</td>
      <td class="tdc bb">&nbsp;<big><b><i>C</i>5-2</b></big>&nbsp;</td>
      <td class="tdc bb">&nbsp;<big><b><i>C</i>5-1</b></big>&nbsp;</td>
   </tr><tr>
      <td class="tdc">0</td>
      <td class="tdc br">0</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc">0</td>
      <td class="tdc br">1</td>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc br">0</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc br">1</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Now, on examining the table, we see that the
<i>C</i>5-1 relay is energized if and only if the <i>C</i>1-1 relay is
energized. So, in order to energize the <i>C</i>5-1 relay, all we have
to do is transfer the information from <i>C</i>1-1 to <i>C</i>5-1. This
we can do by the circuit shown in <a href="#FIG_6-3">Fig. 6</a>.
(In this and later diagrams, we have taken one more step in
streamlining the drawing of relay contacts: the contacts are drawn, but
the coils that energize them are represented only by their names.)</p>

<div class="figcontainer">
  <div id="FIG_6-3" class="figsub">
   <img src="images/i_035a.jpg" alt="" width="300" height="294" />
   <p class="center"><span class="smcap">Fig. 6.</span> Negation—<br />right-hand digit.</p>
  </div>
  <div id="FIG_7-3" class="figsub">
   <img src="images/i_035b.jpg" alt="" width="300" height="271" />
   <p class="center"><br /><span class="smcap">Fig. 7.</span> Negation—<br />left-hand digit.</p>
   </div>
</div>

<p>Taking another look at the table, we see also that the <i>C</i>5-2
relay must be energized if and only if:
<span class="pagenum" id="Page_36">[Pg 36]</span></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdc"><b><i>C</i>1-2<br />HOLDS:</b></td>
      <td class="tdc">&nbsp;&nbsp;<b>AND</b>&nbsp;&nbsp;</td>
      <td class="tdc"><b><i>C</i>1-1<br />HOLDS:</b></td>
   </tr><tr>
      <td class="tdc">0</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">1</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">0</td>
   </tr>
 </tbody>
</table>

<p>A circuit that will do this is the one shown in <a href="#FIG_7-3">Fig. 7</a>.
In <a href="#FIG_8-3">Fig. 8</a> is a circuit that will do all the desired things
together: give the right information to the <i>C</i>5 relay coils if and only if
the <i>C</i>4 relays hold 01.</p>

<div class="figcenter">
  <img id="FIG_8-3" src="images/i_036.jpg" alt="" width="500" height="573" />
  <p class="f120"><span class="smcap">Fig. 8.</span> Negation circuit.</p>
</div>

<p>Let us check this circuit. First, if there is any operation other than
01 stored in the <i>C</i>4 relays, then no current will be able to
get through the <i>C</i>4 contacts shown and into the <i>C</i>5 relay
coils, and the result is blank. Second, if we have the operation 01
stored in the <i>C</i>4 relays, then the <i>C</i>4-2 contacts will not
be energized—a condition which passes current—and the <i>C</i>4-1
contacts will be energized—another condition which passes current—and:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdc bb"><b><span class="smcap">If the number in</span> <i>C</i>1 <span class="smcap">is</span>:</b></td>
      <td class="tdc_bott bb"><b><span class="smcap">then</span> <i>C</i>1-1:</b></td>
      <td class="tdc_bott bb"><b><span class="smcap">and</span> <i>C</i>1-2:</b></td>
      <td class="tdc bb"><b><span class="smcap">and the</span> <i>C</i>5 <span class="smcap">relays energized are</span>:</b></td>
   </tr><tr>
      <td class="tdc">0</td>
      <td class="tdl_ws1">does not close</td>
      <td class="tdl_ws1">does not close</td>
      <td class="tdl_ws1">neither</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">closes</td>
      <td class="tdl_ws1">does not close</td>
      <td class="tdl_ws1"><i>C</i>5-2, <i>C</i>5-1</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdl_ws1">does not close</td>
      <td class="tdl_ws1">closes</td>
      <td class="tdl_ws1"><i>C</i>5-2 only</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdl_ws1">closes</td>
      <td class="tdl_ws1">closes</td>
      <td class="tdl_ws1"><i>C</i>5-1 only</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Thus we have shown that this circuit is correct.</p>

<p>We see that this circuit uses more than one set of contacts for several
relays (<i>C</i>1-2, <i>C</i>4-1, <i>C</i>4-2); relays are regularly
made with 4, 6, or 12 sets of contacts arranged side by side, all
<span class="pagenum" id="Page_37">[Pg 37]</span>
controlled by the same pickup coil. These are called 4-, 6-, or
12-<i>pole</i> relays.</p>

<div class="figcenter">
  <img id="FIG_9-3" src="images/i_037a.jpg" alt="" width="500" height="419" />
  <p class="f120 space-below2"><span class="smcap">Fig. 9.</span> Addition circuit.</p>
  <img id="FIG_10-3" src="images/i_037b.jpg" alt="" width="500" height="462" />
  <p class="f120"><span class="smcap">Fig. 10.</span> Greater-than circuit.</p>
</div>

<p>Circuits for <i>addition</i>, <i>greater than</i>, and <i>selection</i>
can also be determined rather easily (see Figs. <a href="#FIG_9-3">9</a>,
<a href="#FIG_10-3">10</a>, <a href="#FIG_11-3">11</a>).
(<i>Note</i>: By means of the <i>algebra of logic</i>, referred to in
<a href="#CHAPTER_9">Chapter 9</a> and <a href="#SUPPL_2">Supplement 2</a>, the conditions
for many relay circuits, as well as the circuit itself, may be expressed algebraically,
and the two expressions may be checked by a mathematical process.) For example, let
<span class="pagenum" id="Page_38">[Pg 38]</span>
us check that the addition circuit in <a href="#FIG_9-3">Fig. 9</a>
will enable us to add 1 and 2 and obtain 3. We take a colored pencil
and draw closed the contacts for <i>C</i>1-1 (since <i>C</i>1 holds 01)
and for <i>C</i>2-2 (since <i>C</i>2 holds 10). Then, when we trace
through the circuit, remembering that addition is stored as 00 in the
<i>C</i>4 relays, we find that both the <i>C</i>5 relays are energized.
Hence <i>C</i>5 holds 11, which is 3. Thus Simon can add 1 and 2 and
make 3!</p>

<div class="figcenter">
  <img id="FIG_11-3" src="images/i_038.jpg" alt="" width="600" height="461" />
  <p class="f120"><span class="smcap">Fig. 11.</span> Selection Circuit.</p>
</div>

<h3>PUTTING SIMON TOGETHER</h3>

<p>In order to put Simon together and make him work, not very much is
needed. On the outside of Simon we shall need two small mechanisms
for reading punched paper tape. Inside Simon, there will be about 50
relays and perhaps 100 feet of wire for connecting them. In addition
to the 15 registers (<i>I</i>, <i>S</i>1 to <i>S</i>8, <i>C</i>1 to
<i>C</i>5, and <i>O</i>), we shall need a register of 4 relays, which
we shall call the <i>program register</i>. This register will store
the successive instructions read off the program tape. We can call the
4 relays of this register <i>P</i>8, <i>P</i>4, <i>P</i>2, <i>P</i>1.
For example, if the <i>P</i>8 and <i>P</i>2 relays are energized, the
register holds 1010, and this is the program instruction that calls for
the 8th plus 2nd, or 10th, register, which is <i>C</i>1.
<span class="pagenum" id="Page_39">[Pg 39]</span></p>

<p>For connecting receiving registers to the bus, we shall need a relay
with 2 poles, one for the 2-line and one for the 1-line, for each
register that can receive a number from the bus. For example, for
entering the output register, we actually need only one 2-pole relay
instead of the two 1-pole relays drawn for simplicity in <a href="#FIG_5-3">Fig. 5</a>.
There will be 13 2-pole relays for this purpose, since only 13 registers
receive numbers from the bus; registers <i>I</i> and <i>C</i>5 do not
receive numbers from the bus. We call these 13 relays the <i>entrance
relays</i> or <i>E relays</i>, since <i>E</i> is the initial letter of
the word entrance.</p>

<div class="figcenter">
  <img id="FIG_12-3" src="images/i_039.jpg" alt="" width="600" height="294" />
  <p class="f120"><span class="smcap">Fig. 12.</span> Select-Receiving-Register circuit.</p>
</div>

<p>The circuit for selecting and energizing the <i>E</i> relays is shown
in <a href="#FIG_12-3">Fig. 12</a>. We call this circuit the
<i>Select-Receiving-Register</i> circuit. For example, suppose that
the <i>P</i>8 and <i>P</i>2 relays are energized. Then this circuit
energizes the <i>E</i>10 relay. The <i>E</i>10 relay closes the
contacts between the <i>C</i>1 relay coils and the bus; and so it
connects the <i>C</i>1 register to receive the next number that is sent
into the bus. This kind of circuit expresses a classification and is
sometimes called a <i>pyramid circuit</i> since it spreads out like
a pyramid. A similar pyramid circuit is used to select the sending
register.</p>

<p>We shall need a relay for moving the input tape a step at a time.
We shall call this relay the <i>MI relay</i>, for <i>m</i>oving
<i>i</i>nput tape. We also need a relay for moving the program tape
a step at a time. We shall call this relay the <i>MP relay</i> for
<i>m</i>oving <i>p</i>rogram tape. Here then is approximately the total
number of relays required:
<span class="pagenum" id="Page_40">[Pg 40]</span></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary="TOC" cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Relays</span></th>
      <th class="tdc"><span class="smcap">Name</span></th>
      <th class="tdr"><span class="smcap">Number</span></th>
  </tr>
  </thead>
  <tbody><tr>
      <td class="tdl"><i>I</i>, <i>S</i>, <i>C</i>, <i>O</i></td>
      <td class="tdl_ws1">Input, Storage, Computer, Output</td>
      <td class="tdr">30</td>
   </tr><tr>
      <td class="tdl"><i>P</i></td>
      <td class="tdl_ws1">Program</td>
      <td class="tdr">4</td>
   </tr><tr>
      <td class="tdl"><i>E</i></td>
      <td class="tdl_ws1">Entrance</td>
      <td class="tdr">13</td>
   </tr><tr>
      <td class="tdl"><i>MI</i></td>
      <td class="tdl_ws1">Move Input Tape</td>
      <td class="tdr">1</td>
   </tr><tr>
      <td class="tdl"><i>MP</i></td>
      <td class="tdl_ws1">Move Program Tape</td>
      <td class="tdr">1</td>
   </tr><tr>
      <td class="tdl">&nbsp;</td>
      <td class="tdc">Total</td>
      <td class="tdr bt">49</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">A few more relays may be needed to provide more
contacts or poles. For example, a single <i>P</i>1 relay will probably
not have enough poles to meet all the need for its contacts.</p>

<div class="figcenter">
  <img id="FIG_13-3" src="images/i_040.jpg" alt="" width="400" height="550" />
  <p class="f120"><span class="smcap">Fig. 13.</span> Latch relay.</p>
</div>

<p>Each cycle of the machine will be divided into 5 equal <i>time
intervals</i> or <i>times</i> 1 to 5. The timing of the machine will be
about as follows:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdl"><span class="smcap">Time</span></th>
      <th class="tdl"><span class="ws8"><span class="smcap">Action</span></span></th>
   </tr>
  </thead>
  <tbody><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Move program tape.</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">Move input tape if read out of in last cycle.</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdl_ws1">Read program tape, determining the receiving register.</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">Read through the computing circuit setting up the <i>C</i>5 register.</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdl_ws1">Move program tape.</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">Energize the <i>E</i> relay belonging to the receiving register.</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdl_ws1">Read program tape again, determining the sending register.</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdl_ws1">Transfer information by reading through the</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">Select-Sending-Register circuit and the</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">Select-Receiving-Register circuit.</td>
   </tr>
 </tbody>
</table>

<p><span class="pagenum" id="Page_41">[Pg 41]</span>
In order that information may remain in storage until wanted, register
relays should hold their information until just before the next
information is received. This can be accomplished by keeping current
in their coils or in other ways. There is a type of relay called a
<i>latch relay</i>, which is made with two coils and a latch. This type
of relay has the property of staying or latching in either position
until the opposite coil is impulsed (<a href="#FIG_13-3">see Fig. 13</a>).
This type of relay would be especially good for the registers of Simon.</p>

<p>If any reader sets to work to construct Simon, and if questions arise,
the author will be glad to try to answer them.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_42">[Pg 42]</span></p>
<h2 class="nobreak" id="CHAPTER_4">Chapter 4<br />
<span class="h_subtitle">COUNTING HOLES:<br />
PUNCH-CARD CALCULATING MACHINES</span></h2>
</div>

<p>When we think of counting, we usually think of saying softly to
ourselves “one, two, three, four, ···.” This is a good way to find
the total of a small group of objects. But when we have a large group
of objects or a great many groups of objects to be counted, a much
faster way of counting is needed. A very fast way of sorting and
counting is <i>punch-card calculating machinery</i>. This is machinery which
handles information expressed as holes in cards. <i>Punch-card machines</i> can:</p>

<ul class="index no-wrap fontsize_120">
<li class="isub2">Sort, count, file, select, and copy information,</li>
<li class="isub2">Make comparisons, and choose according to instructions,</li>
<li class="isub2">Add, subtract, multiply, and divide,</li>
<li class="isub2">List information, and print totals.</li>
</ul>

<p class="no-indent">For example, in a life insurance company, much routine handling of
information about insurance policies is necessary:</p>

<div class="blockquot">
<p class="neg-indent">Writing information on newly issued policies.</p>

<p class="neg-indent">Setting up policy-history cards.</p>

<p class="neg-indent">Making out notices of premiums due.</p>

<p class="neg-indent">Making registers of policies in force, lapsed,
died, etc., for purposes of valuation as required by law or good
management.</p>

<p class="neg-indent">Calculating and tabulating premium rates,
dividend rates, reserve factors, etc.</p>

<p class="neg-indent">Computing and tabulating expected and actual
death rates; and much more.</p>
</div>

<p class="no-indent">All these operations can be done almost automatically
by punch-card machines.
<span class="pagenum" id="Page_43">[Pg 43]</span></p>

<h3>ORIGIN AND DEVELOPMENT</h3>

<p>When a census of the people of a country is taken, a great quantity of
sorting and counting is needed: by village, county, city, and state;
by sex; by age; by occupation; etc. In 1886, the census of the people
of the United States which had been taken in 1880 was still being
sorted and counted. Among the men then studying census problems was
a statistician and inventor, Herman Hollerith. He saw that existing
methods were so slow that the next census (1890) would not be finished
before the following census (1900) would have to be begun. He knew
that cards with patterns of holes had been used in weaving patterns
in cloth. He realized that the presence or absence of a property, for
example employed or unemployed, could be represented by the presence
or absence of a hole in a piece of paper. An electrical device could
detect the hole, he believed, since it would allow current to flow
through, whereas the absence of the hole would stop the current. He
experimented with sorting and counting, using punched holes in cards,
and with electrical devices to detect the holes and count them. A
definite meaning was given to each place in the card where a hole might
be punched. Then electrical devices handled the particular information
that the punches represented. These devices either counted or added,
singly or in various combinations, as might be desired.</p>

<p>More than 50 years of development of punch-card calculating machinery
have since then taken place. Several large companies have made
quantities of punch-card machines. A great degree of development has
taken place in the punch-card machines of International Business
Machines Corporation (IBM), and for this reason these machines will
be the ones described in this chapter. What is said here, however,
may also in many ways apply to punch-card machines made by other
manufacturers—Remington-Rand, Powers, Control Instrument, etc.</p>

<h3>GENERAL PRINCIPLES</h3>

<p>To use punch-card machines, we first convert the original information
<span class="pagenum" id="Page_44">[Pg 44]</span>
into patterns of holes in cards. Then we feed the cards into the
machines. Electrical impulses read the pattern of holes and convert
them into a pattern of timed electrical currents. Actually, the
reading of a hole in a column of a punch card is done by a brush of
several strands of copper wire pressed against a metal roller (<a href="#FIG_1-4">Fig. 1</a>).
The machine feeds the card (the bottom edge first, where the 9’s
are printed) with very careful timing over the roller; and, when the
punched hole is between the brush and the roller, an electrical circuit
belonging to that column of the card is completed. The machine responds
according to its general design and its wiring for the particular
problem: it punches new cards, or it prints new marks, or it puts
information into new storage places. Clerks, however, move the cards
from one machine to another. They wait on the machines, keep the card
feeds full, and empty the card hoppers as they fill up. A human error
of putting the wrong block of cards into a machine may from time to
time cause a little trouble, especially in sorting. Actually, in a
year, billions of punch cards are handled precisely.</p>

<div class="figcenter">
  <img id="FIG_1-4" src="images/i_044.jpg" alt="" width="600" height="395" />
  <p class="f120"><span class="smcap">Fig. 1.</span> Reading of punch cards.</p>
</div>

<p>The <i>punch card</i> is a masterpiece of engineering and
standardization. Its exact thickness matches the knife-blade edges that
feed the cards into slots in the machines, and matches the channels
whereby these cards travel through the machines. The standard card is
7⅜ inches long and 3¼ inches wide, and it has a standard thickness of
0.0065 inch and other standard properties with respect to stiffness, finish, etc.
<span class="pagenum" id="Page_45">[Pg 45]</span></p>

<div class="figcenter">
  <img id="FIG_2-4" src="images/i_045.jpg" alt="" width="600" height="496" />
  <p class="f120"><span class="smcap">Fig. 2.</span> Scheme of standard punch card.</p>
  <p class="f90">(Note: Positions 11 and 12 are not usually marked by printed numbers or letters.)</p>
</div>

<p>The standard IBM punch card of today has 80 <i>columns</i> and 12
<i>positions</i> for punching in each column (<a href="#FIG_2-4">Fig. 2</a>).
A single punched hole in each of the positions known as 0 to 9 stands
for each of the digits 0 to 9 respectively. The remaining 2 single
punch positions available in any column are usually called the
<i>11 position</i> and <i>12 position</i> (though sometimes called
the numerical <i>X position</i> and <i>Y position</i>). These two
positions do not behave arithmetically as 11 and 12. Actually, in the
space between one card and the next card as they are fed through the
machines, more positions occur. For example, there may be 4 more: a 10
position preceding the 9, and a 13, a 14, and a 15 position following
the 12. The 16 positions in total correspond to a full turn, 360°,
of the roller under the brush, and to a complete <i>cycle</i> in the
machine; and a single position corresponds to ¹/₁₆ of 360°, or 22½°.
In some machines, the total <span class="pagenum" id="Page_46">[Pg
46]</span> number of positions may be 20. A pair of punches stands for
each of the letters of the alphabet, according to the scheme shown.</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl"><b><big>A</big></b></td>
      <td class="tdl_ws1">12-1</td>
      <td class="tdl_ws1"><b><big>J</big></b></td>
      <td class="tdl_ws1">11-1</td>
      <td class="tdc">&nbsp;&nbsp;<b>Unused</b></td>
      <td class="tdl_ws1">0-1</td>
   </tr><tr>
      <td class="tdl"><b><big>B</big></b></td>
      <td class="tdl_ws1">12-2</td>
      <td class="tdl_ws1"><b><big>K</big></b></td>
      <td class="tdl_ws1">11-2</td>
      <td class="tdc"><b><big>S</big></b></td>
      <td class="tdl_ws1">0-2</td>
   </tr><tr>
      <td class="tdl"><b><big>C</big></b></td>
      <td class="tdl_ws1">12-3</td>
      <td class="tdl_ws1"><b><big>L</big></b></td>
      <td class="tdl_ws1">11-3</td>
      <td class="tdc"><b><big>T</big></b></td>
      <td class="tdl_ws1">0-3</td>
   </tr><tr>
      <td class="tdl"><b><big>D</big></b></td>
      <td class="tdl_ws1">12-4</td>
      <td class="tdl_ws1"><b><big>M</big></b></td>
      <td class="tdl_ws1">11-4</td>
      <td class="tdc"><b><big>U</big></b></td>
      <td class="tdl_ws1">0-4</td>
   </tr><tr>
      <td class="tdl"><b><big>E</big></b></td>
      <td class="tdl_ws1">12-5</td>
      <td class="tdl_ws1"><b><big>N</big></b></td>
      <td class="tdl_ws1">11-5</td>
      <td class="tdc"><b><big>V</big></b></td>
      <td class="tdl_ws1">0-5</td>
   </tr><tr>
      <td class="tdl"><b><big>F</big></b></td>
      <td class="tdl_ws1">12-6</td>
      <td class="tdl_ws1"><b><big>O</big></b></td>
      <td class="tdl_ws1">11-6</td>
      <td class="tdc"><b><big>W</big></b></td>
      <td class="tdl_ws1">0-6</td>
   </tr><tr>
      <td class="tdl"><b><big>G</big></b></td>
      <td class="tdl_ws1">12-7</td>
      <td class="tdl_ws1"><b><big>P</big></b></td>
      <td class="tdl_ws1">11-7</td>
      <td class="tdc"><b><big>X</big></b></td>
      <td class="tdl_ws1">0-7</td>
   </tr><tr>
      <td class="tdl"><b><big>H</big></b></td>
      <td class="tdl_ws1">12-8</td>
      <td class="tdl_ws1"><b><big>Q</big></b></td>
      <td class="tdl_ws1">11-8</td>
      <td class="tdc"><b><big>Y</big></b></td>
      <td class="tdl_ws1">0-8</td>
   </tr><tr>
      <td class="tdl"><b><big>I</big></b></td>
      <td class="tdl_ws1">12-9</td>
      <td class="tdl_ws1"><b><big>R</big></b></td>
      <td class="tdl_ws1">11-9</td>
      <td class="tdc"><b><big>Z</big></b></td>
      <td class="tdl_ws1">0-9</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">For example, the word MASON is shown punched in
<a href="#FIG_3-4">Fig. 3</a>.</p>

<div class="figcontainer">
  <div id="FIG_3-4" class="figsub">
   <img src="images/i_046a.jpg" alt="" width="150" height="413" />
   <p class="center"><span class="smcap">Fig. 3.</span> Alphabetic punching.</p>
  </div>
  <div id="FIG_4-4" class="figsub">
   <img src="images/i_046b.jpg" alt="" width="230" height="412" />
   <p class="center"><span class="smcap">Fig. 4.</span> Single-panel plugboard.</p>
   </div>
</div>

<p>To increase the versatility of the machines and provide them with
instructions, many of them have <i>plugboards</i> (<a href="#FIG_4-4">Fig. 4</a>).
These are standard interchangeable boards filled with prongs on one side and
<span class="pagenum" id="Page_47">[Pg 47]</span>
holes or terminals called <i>hubs</i> on the other side. The side
with the prongs connects to the ends of electrical circuits in the
punch-card machine, which are brought together in one place for the
purpose. On the other side of the board, using plugwires, we can
connect the hubs to each other in different ways to produce different
results. The single-panel plugboard is 10 inches long and 5¾ inches
wide. It contains 660 hubs in front and 660 corresponding prongs in
the back. A double-panel plugboard or a triple-panel plugboard applies
to some machines. In less time than it takes to describe it, we can
take one wired-up plugboard out of a machine and put in a new wired-up
plugboard and thus change completely the instructions under which the
machine operates. Many of the machines have a number of different
switches that we must also change, when going from one kind of problem
to another.</p>

<p>The numbers that are stored or sorted in punch-card machines may be
of any size up to 80 digits, one in each column of the punch card. In
doing arithmetic (adding, subtracting, multiplying, and dividing),
however, the largest number of digits is usually 10. Beyond 10 digits,
we can work out tricks in many cases.</p>

<h3>TYPES OF PUNCH-CARD MACHINES</h3>

<p>The chief IBM punch-card machines are: the <i>key punch</i>, the
<i>verifier</i>, the <i>sorter</i>, the <i>interpreter</i>, the
<i>reproducer</i>, the <i>collator</i>, the <i>multiplying punch</i>,
the <i>calculating punch</i>, and the <i>tabulator</i>. Of these
9 machines, the last 6 have plugboards and can do many different
operations as a result.</p>

<p>There is a flow of punch cards through each of these machines. The
machines differ from each other in the number and relation of the paths
of flow, or <i>card channels</i>, and in the number and relation of the
momentary stopping places, or <i>card stations</i>, at which cards are
read, punched, or otherwise acted on. We can get a good idea of what a
machine is from a picture of these card channels.</p>

<h4>Key Punch</h4>

<p>We use a key punch (<a href="#FIG_5-4">Fig. 5</a>) to punch original information
into blank cards. In the key punch there is one card channel; it has one entrance,
<span class="pagenum" id="Page_48">[Pg 48]</span>
one station, and one exit. At the card station, there are 12
<i>punching dies</i>, one for each position in the card column, and
each card column is presented one by one for punching. The numeric
<i>keyboard</i> (<a href="#FIG_6-4">Fig. 6</a>) for the key punch has 14 keys:</p>

<div class="blockquot">
<p class="neg-indent">One key for each of the punches 0 to 9, 11,
and 12,</p>

<p class="neg-indent">A <i>space key</i>, which allows a column of the
punch card to go by with no punch in it,</p>

<p class="neg-indent">A <i>release key</i>, which ejects the card and
feeds another card.</p>
</div>

<div class="figcenter">
  <img id="FIG_5-4" src="images/i_048a.jpg" alt="" width="600" height="266" />
  <p class="f120"><span class="smcap">Fig. 5.</span> Key punch.</p>
  <img id="FIG_6-4" src="images/i_048b.jpg" alt="" width="400" height="392" />
  <p class="f120"><span class="smcap">Fig. 6.</span> Keyboard of key punch.</p>
</div>

<p>Of course, in using a key punch, we must punch the same kind of
information in the same group of columns. For example, if these cards
are to contain employees’ social security numbers, we must punch that
number always in the same card columns, numbered, say, 15 to 23, or 70
to 78, etc.</p>

<h4>Verifier</h4>

<p>The verifier is really the same machine as the key punch, but it has
dull punching dies moving gently instead of sharp ones moving with
force. It turns on a red light and stops when there is no punched hole
in the right spot to match with a pressed key.</p>

<h4>Sorter</h4>

<p>The sorter is a machine for sorting cards, one column at a time (<a href="#FIG_7-4">Fig. 7</a>).
The sorter has a card channel that forks; it has one entrance, one
<span class="pagenum" id="Page_49">[Pg 49]</span>
station, and 13 exits. Each exit corresponds to: one of the 12 punch
positions 0 to 9, 11, and 12; or <i>reject</i>, which applies when the
column is nowhere punched. It has one card station where a brush reads
a single column of the card. We can turn a handle and move the brush to
any column.</p>

<div class="figcenter">
  <img id="FIG_7-4" src="images/i_049a.jpg" alt="" width="600" height="251" />
  <p class="f120"><span class="smcap">Fig. 7.</span> Sorter.</p>
</div>

<h4>Interpreter</h4>

<p>The interpreter takes in a card, reads its punches, prints on the
card the marks indicated by the punches, and stacks the card. We call
this process <i>interpreting</i> the card, since it translates the
punched holes into printed marks. The interpreter (<a href="#FIG_8-4">Fig. 8</a>)
has one card channel, with one entrance, 2 card stations, and one exit. What the
machine does at the second card station depends on what the machine
reads at the first card station and on what we have told the machine by
switches and plugboard wiring to do.</p>

<div class="figcenter">
  <img id="FIG_8-4" src="images/i_049b.jpg" alt="" width="600" height="246" />
  <p class="f120"><span class="smcap">Fig. 8.</span> Interpreter.</p>
</div>

<h4>Reproducer</h4>

<p>The reproducer or reproducing punch can:
<span class="pagenum" id="Page_50">[Pg 50]</span></p>

<div class="blockquot">
<p class="neg-indent"><i>Reproduce</i>, or copy the punches in one
group of cards into another group of cards (in the same or different columns).</p>

<p class="neg-indent"><i>Compare</i>, or make sure that the punches in
two groups of cards agree (and shine a red light if they do not).</p>

<p class="neg-indent"><i>Gang punch</i>, or copy the punches in a
<i>master card</i> into a group of <i>detail cards</i>.</p>

<p class="neg-indent"><i>Summary punch</i>, or copy totals or summaries
obtained in the tabulator into blank cards in the reproducer.</p>
</div>

<div class="figcenter">
  <img id="FIG_9-4" src="images/i_050.jpg" alt="" width="600" height="376" />
  <p class="f120"><span class="smcap">Fig. 9.</span> Reproducer.</p>
</div>

<p>The reproducer (<a href="#FIG_9-4">Fig. 9</a>) has 2 independent
card channels, the cards not mingling in any way, called the <i>reading
channel</i> and the <i>punching channel</i>. We can run the machine
with only the punching channel working; in fact, IBM equips some
models only with the punching channel, particularly for “summary
punch” operation. The machine is timed so that, when any card is at
the middle station in either channel, then the next preceding card is
at the latest station, and the next following card is at the earliest
station. At 5 stations, the machine reads a card. At the middle station
of the punching channel, the machine punches a card. Using a many-wire
cable, we can connect the tabulator to the reproducer and so cause
the tabulator to give information electrically to the reproducer.
This connection makes possible the “summary punch” operation. Here
is an instance with punch-card machines where, in order to transfer
information from one machine to another, we are not required to move
cards physically from one machine to another.
<span class="pagenum" id="Page_51">[Pg 51]</span></p>

<h4>Collator</h4>

<p>The collator is a machine that arranges or <i>collates</i> cards. It
is particularly useful in selecting, matching, and merging cards. The
collator (<a href="#FIG_10-4">Fig. 10</a>) has 2 card channels which join
and then fork into 4 channels ending in pockets called <i>Hoppers</i>
1, 2, 3, and 4. The 2 card feeds are called the <i>Primary Feed</i> and
the <i>Secondary Feed</i>. Cards from the Primary Feed may fall only
into the first and second hoppers. Cards from the Secondary Feed may
fall only into the second, third, and fourth hoppers. The collator has
3 stations at which cards may be read.</p>

<div class="figcenter">
  <img id="FIG_10-4" src="images/i_051.jpg" alt="" width="600" height="236" />
  <p class="no-indent"><b><big>No.1—Selected primaries<br />
                       No.2—Merged cards and unselected primaries<br />
                       No.3—Separate secondaries not selected<br />
                       No.4—Selected secondaries</big></b></p>
  <p class="f120"><span class="smcap">Fig. 10.</span> Collator.</p>
</div>

<p>IBM can supply additional wiring called the <i>collator counting
device</i>. With this we can make the collator count cards as well
as compare them. For example, we could put 12 blank cards from the
Secondary Feed behind each punched-card from the Primary Feed in order
to prepare for some other operation.</p>

<h4>Calculating Punch</h4>

<p>The calculating punch was introduced in 1946. It is a versatile machine
of considerable capacity. It adds, subtracts, multiplies, and divides.
It also has a control over a sequence of operations, in some cases up
to half a dozen steps.</p>

<p>This machine (<a href="#FIG_11-4">Fig. 11</a>) has one card channel
with 4 stations called, respectively, <i>control brushes</i>,
<i>reading brushes</i>, <i>punch feed</i>, and <i>punching dies</i>. At
station 1, there are 20 brushes; we can set these by hand to read any
20 of the 80 card columns. At station 2 there are 80 regular reading
<span class="pagenum" id="Page_52">[Pg 52]</span>
brushes. At station 3 the card waits for a part of a second while
the machine calculates, and, when that is done, the card is fed into
station 4, where it is punched or verified. The multiplying punch is
an earlier model of the calculating punch, without the capacity for
division.</p>

<div class="figcenter">
  <img id="FIG_11-4" src="images/i_052a.jpg" alt="" width="600" height="236" />
  <p class="f120"><span class="smcap">Fig. 11.</span> Calculating punch.</p>
</div>

<h4>Tabulator</h4>

<p>The tabulator can select and list information from cards. Also, it
can total information from groups of cards in <i>counters</i> of the
tabulator and can print the totals.</p>

<div class="figcenter">
  <img id="FIG_12-4" src="images/i_052b.jpg" alt="" width="600" height="448" />
  <p class="f120"><span class="smcap">Fig. 12.</span> Tabulator.</p>
</div>

<p>The tabulator (<a href="#FIG_12-4">Fig. 12</a>) has one card channel with
two stations where cards may be read, called the <i>Upper Brushes</i> and
<span class="pagenum" id="Page_53">[Pg 53]</span>
<i>Lower Brushes</i>. When the Lower Brush station is reading one card, the
Upper Brush station is reading the next card. The tabulator also has
another channel, which is for endless paper (and sometimes separate
sheets or cards). This channel has one station; here printing takes
place. Unlike the typewriter, the tabulator prints a whole row at a
time. It can print up to 88 numerals or letters across the sheet in
one stroke. The cards flowing through the card channel and the paper
flowing through the paper channel do not have to move in step; in fact,
we need many different time relations between them, and the number of
rows printed on the paper may have almost any relation to the number of
punch cards flowing through the card channel.</p>

<p>At the station where paper is printed, we can put on the machine
a mechanism called the <i>automatic carriage</i>. This is like a
typewriter carriage, which holds the paper for a typewriter, but we
can control the movement of paper through the automatic carriage by
plugboard wiring, switch settings, and holes in punch cards. Thus we
can arrange for headings, spacing, and feeding of new sheets to be
controlled by the information and the instructions, with a great deal
of versatility.</p>

<h3>HANDLING INFORMATION</h3>

<p>We have now described briefly the chief available punch-card machines
as of the middle of 1948. The next question is: How do we actually get
something done by means of punch cards? Let us go back to the census
example, even though it may not be a very typical example, and see what
would be done if we wished to compile a census by punch cards.</p>

<p>The first thing we do is plan which columns of the punch card will
contain what information about the people being counted. For example,
the following might be part of the plan:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdl"><span class="smcap">Information</span></th>
      <th class="tdl"><span class="smcap">No. of Possibilities</span></th>
      <th class="tdl"><span class="smcap">&nbsp;&nbsp;Columns</span></th>
  </tr>
  </thead>
  <tbody><tr>
      <td class="tdl">State</td>
      <td class="tdr">60<span class="ws2">&nbsp;</span></td>
      <td class="tdc">1-2</td>
   </tr><tr>
      <td class="tdl">County</td>
      <td class="tdr">1,000<span class="ws2">&nbsp;</span></td>
      <td class="tdc">3-5</td>
   </tr><tr>
      <td class="tdl">Township</td>
      <td class="tdr">10,000<span class="ws2">&nbsp;</span></td>
      <td class="tdc">6-9</td>
   </tr><tr>
      <td class="tdl">City or village</td>
      <td class="tdr">10,000<span class="ws2">&nbsp;</span></td>
      <td class="tdc">10-13</td>
   </tr><tr>
      <td class="tdl">Sex</td>
      <td class="tdr">2<span class="ws2">&nbsp;</span></td>
      <td class="tdc">14</td>
   </tr><tr>
      <td class="tdl">Age last birthday</td>
      <td class="tdr">100<span class="ws2">&nbsp;</span></td>
      <td class="tdc">15-16</td>
   </tr><tr>
      <td class="tdl">Occupation</td>
      <td class="tdr">100,000<span class="ws2">&nbsp;</span></td>
      <td class="tdc">17-21</td>
   </tr><tr>
      <td class="tdl">...</td>
      <td class="tdr">...<span class="ws3">&nbsp;</span></td>
      <td class="tdc">...</td>
   </tr>
 </tbody>
</table>

<p><span class="pagenum" id="Page_54">[Pg 54]</span>
Under the heading state, we know that there are 48 states, the District
of Columbia, and several territories and possessions—all told, perhaps
60 possibilities. So, 2 punch-card columns are enough: they will allow
100 different sets of punches from 00 to 99 to be put in them. We then
assign the <i>code</i> 00 to Maine, 01 to New Hampshire, 02 to Vermont,
etc., or we might assign the code 00 to Alabama, 01 to Arizona, 02
to Arkansas, etc.—whichever would be more useful. Under the other
headings, we do the same thing: count the possibilities; assign codes.
In this case, it will be reasonable to use numeric codes 0 to 9 in each
column in all places because we shall have millions of cards to deal
with and numeric codes can be sorted faster than alphabetic codes.
Alphabetic codes require 2 punched holes in each column, and sorting
any column takes 2 operations.</p>

<p>The punch cards are printed with the chosen headings. We set up
the codes in charts and give them to clerks. Using key punches and
verifiers, they punch up the cards and check them. They work from the
original information collected by the census-taker in the field. Since
the original information will come in geographically, probably only one
geographic code at a time will be needed, and it will be simple to keep
track of. As to occupation, however, it may be useful to assign other
clerks full-time to examining the original information and specifying
the right code for the occupation. Then the clerks who do the punching
will have only copying to do.</p>

<p>The great bulk of the work with the census will be sorting, counting,
and totaling. The original punch cards will be summarized into larger
and larger groups. For example, the cards for all males age 23 last
birthday living in the state of Massachusetts are sorted together. This
group of cards may be put into a tabulator wired to a summary punch.
When the tabulator has counted the last card of this group, the summary
punch punches one card, showing the total number in this group. Some
time later a card like this will be ready for every state. Then the
whole group of state cards may be fed into the tabulator wired to the
reproducer acting as summary punch. When totaled, the number of males
age 23 last birthday in the United States will be punched into a single
card. After more compiling, a card like this will be ready for all
<span class="pagenum" id="Page_55">[Pg 55]</span>
males in the United States at each age. Then this group of cards may
be fed into the tabulator wired to the summary punch. Each card may
be listed by the tabulator on the paper flowing through it, showing
the age and the number of males living at that age. At the end of the
listing, the tabulator will print the total number of all males in the
list, and the summary punch will punch a card containing this total.</p>

<h3>ARITHMETICAL OPERATIONS</h3>

<p>Punch-card machines can perform the arithmetical operations of
counting, adding, subtracting, multiplying, dividing, and rounding off.</p>

<h4>Counting</h4>

<p>Counting can be done by the sorter, the tabulator, and the collator.
The tabulator can print the total count. The tabulator and summary
punch wired together can put the total count automatically into another
punch card. The sorter shows the count in dials.</p>

<h4>Adding and Subtracting</h4>

<p>Adding and subtracting can be done by the tabulator, the calculating
punch, and the multiplying punch. In the calculating and multiplying
punches, the sum or difference is usually punched into the same card
from which the numbers were first obtained. The tabulator, however,
obtains the result first in a counter; from the counter, it can be
printed on paper or punched into a blank card with the aid of the
summary punch.</p>

<p>Numbers are handled as groups of decimal digits, and the machines
mirror the properties of digits in the decimal system. Negative numbers
are usually handled as <i>complements</i> (<a href="#SUPPL_2">see Supplement 2</a>).
For example, if we have in the tabulator a counter with a capacity of six
digits, the number-000013 is stored in the counter as the complement
999987. We cannot store in the counter the number +999987, since we
cannot distinguish it from-000013. In other words, if a counter is
to be used for both positive and negative numbers, its capacity is
actually one digit less, since in the last decimal place on the left 0
will mean positive and 9 will mean negative.
<span class="pagenum" id="Page_56">[Pg 56]</span></p>

<h4>Multiplying and Dividing</h4>

<p>Multiplying is done in the calculating and multiplying punches. In
both cases, the multiplication table is built into the circuits
of the machine, and the system of <i>left-hand components</i> and
<i>right-hand components</i> is used (<a href="#SUPPL_2">see Supplement 2</a>).</p>

<p>Dividing is done in the calculating punch and is carried out in that
machine much as in ordinary arithmetic. By means of an estimating
circuit the calculating punch guesses what multiple of the divisor will
go into the dividend. Then it determines that multiple and tries it.</p>

<h4>Rounding Off</h4>

<p>Rounding off may be done in 3 punch-card machines, the calculating
and multiplying punches, and the tabulator. For example, suppose we
have the numbers 49.1476, 68.5327, and we wish to round them off to
2 decimal places. The results will be 49.15 and 68.53. For the first
number, we raise the .0076, turning .1476 into .15, since .0076 is more
than .005. For the second number, we drop the .0027 since it is less
than .005.</p>

<p>Each of these punch-card machines provides what is called a <i>5
impulse</i> in each machine cycle. When the number is to be rounded
off, the 5 impulse is plugged into the first decimal place that is to
be dropped, and it is there added. If the figure in the decimal place
to be dropped is 0 to 4, the added 5 makes no difference in the last
decimal place that is to be kept. But, if the figure in the decimal
place to be dropped is 5 to 9, then the added 5 makes a carry into the
last decimal place that is to be kept, increasing it by 1, and this is
just what is wanted for rounding off.</p>

<h3>LOGICAL OPERATIONS</h3>

<p>Punch-card machines do many operations of reasoning or logic that do
not involve addition, subtraction, multiplication, or division. Just
as we can write equations for arithmetical operations, so we can write
equations for these logical operations using mathematical logic (see <a href="#CHAPTER_9">Chapter 9</a>
and <a href="#SUPPL_2">Supplement 2</a>). If any reader, however, is
not interested in these logical equations, he should skip each paragraph that
begins with “in the language of logic,” or a similar phrase.
<span class="pagenum" id="Page_57">[Pg 57]</span></p>

<h4>Translating</h4>

<p>Reading and writing are operations perhaps not strictly of reasoning
but of <i>translating</i> from one language to another. Basically these
operations take in a mark in one language and give out a mark with the
same meaning in another language. For example, the interpreter takes in
punched holes and gives out printed marks, but the holes and the marks
have the same meaning.</p>

<p>The major part of sorting is done by a punch-card sorting machine and
can be considered an operation of translating. In sorting a card, the
machine takes in a mark in the form of a punched hole on a punch card
and specifies a place bearing the same mark where the card is put. The
remaining part of sorting is done by human beings. This part consists
of picking up blocks of cards from the pockets of the sorter and
putting the blocks together in the right sequence.</p>

<h4>Comparing</h4>

<div class="figcenter">
  <img id="FIG_13-4" src="images/i_057.jpg" alt="" width="600" height="176" />
  <p class="f120"><span class="smcap">Fig. 13.</span> Comparer.</p>
</div>

<p>The first operation of reasoning done by punch-card machines is
<i>comparing</i>. For an example of comparing in the operation of the
tabulator, let us take instructing the machine when to pick up a total
and print it. As an illustration, suppose that we are making a table
by state, county, and township of the number of persons counted in a
census. Suppose that for each township we have one punch card telling
the total number of persons. If all the cards are in sequence, then,
whenever the county changes, we want a minor total, and, whenever the
state changes, we want a major total. What does the machine do?</p>

<p>The tabulator has a mechanism that we shall call a <i>comparer</i>
(<a href="#FIG_13-4">Fig. 13</a>). A comparer has 2 inputs that may be
called <i>Previous</i> and <i>Current</i> and one output that may be
called <i>Unequal</i>. The comparer has the property of giving out an
impulse if and only if there is a difference between the 2 inputs.
<span class="pagenum" id="Page_58">[Pg 58]</span></p>

<p>In the language of the algebra of logic (<a href="#SUPPL_2">see Supplement 2</a>
and <a href="#CHAPTER_9">Chapter 9</a>), let the pieces of information coming into
the comparer be <i>a</i> and <i>b</i>, and let the information coming out of the
comparer be <i>p</i>. Then the equation of the comparer is:</p>

<p class="f120"><i>p</i> = <i>T</i>(<i>a</i> ≠ <i>b</i>)</p>

<p class="no-indent">where “<i>T</i> (···)” is “the truth value of ···”
and “···” is a statement, and where the truth value is 1 if true and 0
if false.</p>

<p>In wiring the tabulator so that it can tell when to total, we use the
comparer. We feed into it the county from the current card and the
county from the previous card. Out of the comparer we get an impulse if
and only if these two pieces of information are different. This is just
what happens when the county changes. The impulse from the comparer is
then used in further wiring of the tabulator: it makes the counter that
is busy totaling the number of persons in the county print its total
and then clear. In the same way, another comparer, which watches state
instead of county, takes care of major totals when the state changes.</p>

<h4>Selecting</h4>

<p>The next operation of reasoning which punch-card machines can do is
<i>selecting</i>. The tabulator, collator, interpreter, reproducer,
and calculating punch all may contain mechanisms that can select
information. These mechanisms are called <i>selectors</i>.</p>

<p>For example, suppose that we are using the tabulator to make a table
showing for each city the number of males and the number of females.
In the table we shall have three columns: first, city; second, males;
third, females. Suppose that each punch card in columns 30 to 36 shows
the total of males or females in a city. Suppose that, if and only if
the card is for females, it has an X punch (or 11 punch) in column 79.
What do we want to have happen? We want the number in columns 30 to 36
to go into the second column of the table if there is no X in column
79, and we want it to go into the third column of the table if there is
an X in column 79. This is just another way of saying that we want the
number to go into the males column if it is a number of males, and into
the females column if it is a number of females. We make this happen by
using a selector.
<span class="pagenum" id="Page_59">[Pg 59]</span></p>

<p>A selector (<a href="#FIG_14-4">Fig. 14</a>) is a mechanism with 2 inputs
and 2 outputs. The 2 inputs are called <i>X Pickup</i> and
<i>Common</i>. The 2 outputs are called <i>X</i> and <i>No X</i>.
The X Pickup, as its name implies, watches for X’s. The Common takes
in information. What comes out of X is what goes into Common if and
only if an X punch is picked up; otherwise nothing comes out. What
comes out of No X is what goes into Common if and only if an X punch
is not picked up; otherwise nothing comes out. From the point of view
of ordering punch-card equipment, we should note that there are two
types of selectors: <i>X selectors</i> or <i>X distributors</i>, which
have a selecting capacity of one column—that is, one decimal digit—and
<i>class selectors</i>, which ordinarily have a selecting capacity of
10 columns or 10 decimal digits. But we shall disregard this difference
here, as we have disregarded most other questions of capacity in
multiplication, division, etc.</p>

<div class="figcenter">
  <img id="FIG_14-4" src="images/i_059.jpg" alt="" width="600" height="182" />
  <p class="f120"><span class="smcap">Fig. 14.</span> Selector.</p>
</div>

<p>In the language of logic (see <a href="#CHAPTER_9">Chapter 9</a> and
<a href="#SUPPL_2">Supplement 2</a>), if <i>p</i>, <i>a</i>, <i>b</i>,
<i>c</i> are the information in X Pickup, Common, X, and No X,
respectively, then the equations for a selector are:</p>

<p class="f120"><i>b</i> = <i>a</i>·<i>p</i></p>

<p class="f120"><i>c</i> = <i>a</i>·(1 - <i>p</i>)</p>

<p>Returning now to the table we wish to make, we connect columns 30 to
36 of the punch card to Common. We connect column 79 of the punch card
to the X Pickup. We connect the output No X to the males column of the
table. We connect the output X to the females column of the table. In
this way we make the number in the punch card appear in either one of
two places in the table according to whether the number counts males or
females.</p>

<p>We might mention several more properties of selectors. A selector can
be used in the reverse way, with X Pickup, X, and No X as inputs and
<span class="pagenum" id="Page_60">[Pg 60]</span>
Common as output (<a href="#FIG_15-4">Fig. 15</a>). What will come out
of Common is (1) what goes into input No X if there is no X punch in
the column to which input X Pickup is wired, and (2) what goes into
input X if there is an X punch in the column to which input X Pickup is
wired.</p>

<p>In this case the logical equation for the selector is:</p>

<p class="f120"><i>a</i> = <i>bp</i> + <i>c</i>(1 - <i>p</i>)</p>

<p class="no-indent">Also, selectors can be used one after another,
so that selecting based on 2 or 3 X punches can be made.</p>

<div class="figcenter">
  <img id="FIG_15-4" src="images/i_060a.jpg" alt="" width="600" height="214" />
  <p class="f120"><span class="smcap">Fig. 15.</span> Selector.</p>
</div>

<p>In the language of logic, if <i>p</i>, <i>q</i>, <i>r</i> are the truth
values of “there is an X punch in column <i>i</i>, <i>j</i>, <i>k</i>,”
respectively, then by means of selectors we can get such a function as:</p>

<p class="f120"><i>c</i> = <i>apq</i> + <i>b</i>(1 - <i>q</i>)(1 - <i>r</i>)</p>

<p>Also, a selector may often be energized not only by an X punch but
also by a punch 0, 1, 2, ···, 9 and 12. In this case, the selector is
equipped with an additional input that can respond to any digit. This
input is called the Digit Pickup.</p>

<h4>Digit Selector</h4>

<p>Something like an ordinary selector is another mechanism called a
<i>digit selector</i> (<a href="#FIG_16-4">Fig. 16</a>). This has one input,
Common, and 12 outputs, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12. This
mechanism is often included in the tabulator and may be included in
other punch-card machines. For example, suppose that we want to do
something if and only if column 62 of a punch card contains a 3 or a 4
or a 9. Then we connect a brush that reads column 62 of the punch card
to the Common input of the digit selector. And we connect out from the
digit selector jointly from outputs 3, 4, and 9.</p>

<div class="figcenter">
  <img id="FIG_16-4" src="images/i_060b.jpg" alt="" width="600" height="332" />
  <p class="f120"><span class="smcap">Fig. 16.</span> Digit selector.</p>
</div>

<p><span class="pagenum" id="Page_61">[Pg 61]</span>
In the language of logic, if <i>a</i> is the digit going into Common,
and if <i>p</i> is the impulse coming out of the digit selector, then
the equation of the mechanism in this case is:</p>

<p class="f120"><i>p</i> = <i>T</i>(<i>a</i> = 3, 4, 9)</p>

<h4>Sequencer</h4>

<p>A fourth operation of reasoning done by punch-card machines is
finding that one number is greater than, or equal to, or less than
another. This operation is done in the collator and may be called
<i>sequencing</i>. For example, suppose that we have a file of punch
cards for cities, showing in columns 41 to 48 the number of people.
Suppose that we wish to pick out the cards for cities over 125,000 in
population. Now the collator has a mechanism that has 2 inputs and
3 outputs (<a href="#FIG_17-4">Fig. 17</a>). We may call this mechanism
a <i>sequencer</i>, since it can tell the sequence of two numbers.
What goes into the <i>Primary</i> input is a number: let us call it
<i>a</i>. What goes into <i>Secondary</i> is another number: let
us call it <i>b</i>. An impulse comes out of <i>Low Primary</i> if
<i>a</i> is less than <i>b</i>. An impulse comes out of <i>Equal</i> if
<i>a</i> equals <i>b</i>. An impulse comes out of <i>Low Secondary</i>
if <i>a</i> is greater than <i>b</i>.</p>

<div class="figcenter">
  <img id="FIG_17-4" src="images/i_061.jpg" alt="" width="600" height="187" />
  <p class="f120"><span class="smcap">Fig. 17.</span> Sequencer.</p>
</div>

<p>In the language of logic, if <i>p</i>, <i>q</i>, <i>r</i> are the three
indications in Low Primary, Equal, and Low Secondary, then:</p>

<p class="f120"><i>p</i> = <i>T</i>(<i>a</i> &lt; <i>b</i>)</p>

<p class="f120"><i>q</i> = <i>T</i>(<i>a</i> = <i>b</i>)</p>

<p class="f120"><i>r</i> = <i>T</i>(<i>a</i> &gt; <i>b</i>)</p>

<p>Returning to our example, we punch up a card with 125,000 in columns 43
to 48, and we put this card into the Secondary Feed. We take the punch
cards for cities and put them into the Primary Feed. In the plugboard,
<span class="pagenum" id="Page_62">[Pg 62]</span>
we connect the hubs of the Secondary Brushes (that read the card in
the Secondary Feed), columns 43 to 48, to the Secondary input of the
Sequencer. We connect the hubs of the Primary Brushes (that read the
card in the Primary Feed), columns 41 to 48, to the Primary input of
the Sequencer. Then we connect the Low Primary output of the Sequencer
to a device that causes the city card being examined to fall into
pocket 1. We connect Equal output and Low Secondary output to a device
that causes the city card being examined to fall into pocket 2. Then,
when the card for any city comes along, the machine compares the number
of people in the city with 125,000. If the number is greater than
125,000, the card will fall into pocket 1; otherwise the card will fall
into pocket 2. At the end of the run, we shall find in pocket 1 all the
cards we want.</p>

<h3>NEW DEVELOPMENTS</h3>

<p>We may expect to see over the next few years major developments in
punch-card machinery. It would seem likely that types of punch-card
machines like the following might be constructed:</p>

<div class="blockquot">
<p class="neg-indent">A punch-card machine that performs any
arithmetical or logical operation at high speed and may perform a dozen
such operations in sequence during the time that a punch card passes
through the machine.</p>

<p class="neg-indent">A punch-card machine that uses loops of punched
paper tape, which express either a sequence of values in a table that
the machine can consult or a sequence of instructions that govern the
operations of the machine.</p>

<p class="neg-indent">Punch-card machinery that uses a larger card than
the 80-column card.</p>

<p class="neg-indent">A punch-card machine that may have a fairly large
amount of internal memory, perhaps 30 or 40 registers where numbers or
words may be stored and referred to.</p>
</div>

<h4>SPEED</h4>

<p>The speed of various operations with present IBM punch-card machines is
about as shown in the table.
<span class="pagenum" id="Page_63">[Pg 63]</span></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdl bb"><span class="smcap">Machine</span></th>
      <th class="tdl_ws1 bb"><span class="smcap">&nbsp;&emsp;Operation</span></th>
      <th class="tdl bb"><span class="smcap">Time in Seconds</span></th>
  </tr>
  </thead>
  <tbody><tr>
      <td class="tdl">Key punch</td>
      <td class="tdl_ws1">Punch 80 columns</td>
      <td class="tdc">About 20 to 40</td>
   </tr><tr>
      <td class="tdl">Verifier</td>
      <td class="tdl_ws1">Check 80 columns</td>
      <td class="tdc">About 20 to 40</td>
   </tr><tr>
      <td class="tdl">Sorter</td>
      <td class="tdl_ws1">Sort 1 card on 1 column</td>
      <td class="tdc">&#8199;0.15</td>
   </tr><tr>
      <td class="tdl">Interpreter</td>
      <td class="tdl_ws1">Print 1 line</td>
      <td class="tdc">0.8</td>
   </tr><tr>
      <td class="tdl">Reproducer</td>
      <td class="tdl_ws1">Reproduce a card, all 80 columns</td>
      <td class="tdc">0.6</td>
   </tr><tr>
      <td class="tdl">Collator</td>
      <td class="tdl_ws1">Merge 2 cards</td>
      <td class="tdc">&#8199;0.25</td>
   </tr><tr>
      <td class="tdl">Multiplying punch</td>
      <td class="tdl_ws1">Multiply by 8 digits</td>
      <td class="tdc">5.6</td>
   </tr><tr>
      <td class="tdl">Calculating punch</td>
      <td class="tdl_ws1">Add</td>
      <td class="tdc">0.3</td>
   </tr><tr>
      <td class="tdl">Calculating punch</td>
      <td class="tdl_ws1">Multiply by 8 digits</td>
      <td class="tdc">3.6</td>
   </tr><tr>
      <td class="tdl">Calculating punch</td>
      <td class="tdl_ws1">Divide, obtaining 8 quotient digits</td>
      <td class="tdc">9.0</td>
   </tr><tr>
      <td class="tdl">Tabulator</td>
      <td class="tdl_ws1">Print 1 line, numbers only</td>
      <td class="tdc">0.4</td>
   </tr><tr>
      <td class="tdl">Tabulator</td>
      <td class="tdl_ws1">Print 1 line, letters included</td>
      <td class="tdc">&#8199;0.75</td>
   </tr><tr>
      <td class="tdl">Tabulator</td>
      <td class="tdl_ws1">Add numbers from 1 card</td>
      <td class="tdc">0.4</td>
   </tr>
 </tbody>
</table>

<h4>COST</h4>

<p>Punch-card machines may be either rented or purchased from some
manufacturers but only rented from others. If we take the cost of a
clerk as $120 to $150 a month, the monthly rent of most punch-card
machines ranges from ⅒ of the cost of a clerk for the simplest type
of machine, such as a key punch, to 3 times the cost of a clerk for a
complicated and versatile type of machine, such as a tabulator with
many attachments. The rental basis is naturally convenient for many
kinds of jobs.</p>

<h4>RELIABILITY</h4>

<p>The reliability of work with punch cards and punch-card machines is
often much better than 99 per cent: in 10,000 operations, failures
should be less than 2 or 3. This is, of course, much better than with
clerical operations.</p>

<p>There are a number of causes for machine or card failures. Sometimes
cards may be warped and may not feed into the machines properly. Or,
the air in the room may be very dry, and static electricity may make
the cards stick together. Or, the air may be too humid; the cards may
swell slightly and may jam in the machine. A punch may get slightly
out of true alignment, and punches in the cards may be slightly off. A
relay may get dust on its contact points and, from time to time, fail
to perform in the right way. Considerable engineering effort has been
<span class="pagenum" id="Page_64">[Pg 64]</span>
put into remedying these and other troubles, with much success.</p>

<p>To make sure that we have correct results from human beings working
with punch-card machines, we may verify each process. Information
that is punched on the key punch may be verified on the verifier.
Multiplications done with multiplicand <i>a</i> and multiplier
<i>b</i> may be repeated and compared with multiplications done with
multiplicand <i>b</i> and multiplier <i>a</i>. Cards that are sorted
on the sorter may be put through the collator to make sure that their
sequence is correct. It is often good to plan every operation so that
we have a proof that the result is right.</p>

<p>It is standard practice to have the machines inspected regularly in
order to keep them operating properly. On the average, for every 50 to
75 machines, there will be one full-time service man maintaining them
and taking care of calls for repairs. Of course, as with any machinery,
some service calls will be a result of the human element; for example,
a problem may have been set up wrongly on a machine.</p>

<h4>GENERAL USEFULNESS</h4>

<p>Punch-card calculations are much faster and more accurate than hand
calculations. With punch cards, work is organized so that all cases
are handled at the same time in the same way. This process is very
different from handling each case separately from start to finish. As
soon as the number of cases to be handled is more than a hundred and
each item of information is to be used five or more times, punch cards
are likely to be advantageous, provided other factors are favorable.
Vast quantities of information have been handled very successfully by
punch-card machines. Over 30 scientific and engineering laboratories in
the United States are doing computation by punch cards. Over a billion
punch cards, in fact, are used annually in this country.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_65">[Pg 65]</span></p>
<h2 class="nobreak" id="CHAPTER_5">Chapter 5<br />
<span class="h_subtitle">MEASURING:<br />
MASSACHUSETTS INSTITUTE OF TECHNOLOGY’S<br />
DIFFERENTIAL ANALYZER NO. 2</span></h2>
</div>

<p>In the previous chapter we talked about machines that move information
expressed as holes in cards. In this chapter we shall talk about
machines that move information expressed as measurements.</p>

<h3>ANALOGUE MACHINES</h3>

<p>A simple example of a device that uses a measurement to handle
information is a doorpost. Here the height of a child may be marked
from year to year as he grows (<a href="#FIG_1-5">Fig. 1</a>). Or,
suppose that we have a globe of the world and wish to find the shortest
path between Chicago and Moscow. We may lay a piece of string on the
globe, pull it tight between those points, and then measure the string
on a scale to see about what distance it shows (<a href="#FIG_2-5">Fig. 2</a>).</p>

<p>Machines that handle information as measurements of physical quantities
are called <i>analogue</i> machines, because the measurement is
<i>analogous</i> to, or like, the information. A common example of
analogue machine is the <i>slide rule</i>. With this we calculate by
noting the positions of ruled lines on strips that slide by each other.
These strips are made of fine wood, or of plastic, or of steel, in such
fashion that the ruled lines will hold true positions and not warp. If
we space the rulings so that 1, 2, 3, 4, 5, 6 ··· are equally spaced,
then the slide rule is useful for addition (<a href="#FIG_3-5">Fig. 3</a>).
But if we space the rulings so that <i>powers</i> (for example,
powers of two—1, 2, 4, 8, 16, 32 ···) (<a href="#FIG_4-5">Fig. 4</a>)
are equally spaced, we can do multiplication. The spacings are then
according to the <i>logarithms</i> of numbers (<a href="#SUPPL_2">see Supplement 2</a>).
Multiplication is more troublesome than addition, and so more slide
rules are made for multiplication than for addition.
<span class="pagenum" id="Page_66">[Pg 66]</span></p>

<div class="figcenter">
  <img id="FIG_1-5" src="images/i_066a.jpg" alt="" width="400" height="473" />
  <p class="f120 space-below2"><span class="smcap">Fig. 1.</span> Measurement by doorpost.</p>
  <img id="FIG_2-5" src="images/i_066b.jpg" alt="" width="400" height="365" />
  <p class="f120 space-below2"><span class="smcap">Fig. 2.</span> Measurement by string.</p>
</div>

<p><span class="pagenum" id="Page_67">[Pg 67]</span></p>

<div class="figcenter">
  <img id="FIG_3-5" src="images/i_067a.jpg" alt="" width="600" height="267" />
  <p class="f120 space-below2"><span class="smcap">Fig. 3.</span> Slide Rule for adding.</p>
  <img id="FIG_4-5" src="images/i_067b.jpg" alt="" width="600" height="288" />
  <p class="f120"><span class="smcap">Fig. 4.</span> Slide Rule for multiplying.</p>
</div>

<p>During World War II, the aiming and firing of guns against hostile
planes was done by machine. After sighting a plane, these machines
automatically calculated how to direct fire against it. They were much
better and faster than any man. These <i>fire-control instruments</i>
were analogue machines with steel and electrical parts built to fine
tolerances. With care we can get accuracy of 1 part in 10,000 with
analogue machines, but greater accuracy is very hard to get.</p>

<h3>PHYSICAL QUANTITIES</h3>

<p>Suppose that we wish to make an analogue machine. We need to represent
information by a measurement of something. What should we select? What
<span class="pagenum" id="Page_68">[Pg 68]</span>
physical thing to be measured should we choose to put into the machine?
Different amounts of this <i>physical quantity</i> will match with
different amounts of the measurement being expressed. In the case of
the doorpost, the string, and the slide rule, the physical quantity is
distance. In many fire-control instruments, the physical quantity is
the <i>amount of turning of a shaft</i> (<a href="#FIG_5-5">Fig. 5</a>).
Many other physical quantities have from time to time been used in
analogue machines, such as electrical measurements. The speedometer
of an automobile tells distance traveled and speed. It is an analogue
machine. It uses the amount of turning of a wheel, and some electrical
properties. It handles information by means of measurements. The basic
physical quantity that it measures is the amount of turning of a
shaft.</p>

<div class="figcenter">
  <img id="FIG_5-5" src="images/i_068.jpg" alt="" width="400" height="196" />
  <p class="f120"><span class="smcap">Fig. 5.</span> Measurement by amount
                  of turning of a shaft.</p>
</div>

<h3>DIFFERENTIAL ANALYZER</h3>

<p>The biggest and cleverest mechanical brain of the analogue type which
has yet been built is the <i>differential analyzer</i> finished in
1942 at Massachusetts Institute of Technology in Cambridge, Mass. The
fundamental physical quantity used in this machine is the amount of
turning of a shaft. The name <i>analyzer</i> means an apparatus or
machine for analyzing or solving problems. It happens that the word
“analyzer” has been used rather more often in connection with analogue
machines, and so in many cases the word “analyzer” carries the meaning
“analogue” as well. The word “differential” in the phrase “differential
analyzer” refers to the main purpose of the machine: it is specially
adapted for solving problems involving <i>differential equations</i>.
Now what is a differential equation?</p>

<h3>DIFFERENTIAL EQUATIONS</h3>

<p>In order to explain what a differential equation is, we need to use
certain ideas. These ideas are: <i>equation</i>; <i>formula</i>;
<i>function</i>; <i>rate of change</i>; <i>interval</i>;
<span class="pagenum" id="Page_69">[Pg 69]</span>
<i>derivative</i>; and <i>integral</i>. In the next few paragraphs,
we shall introduce these ideas briefly, with some explanation and
examples. It is entirely possible for anyone to understand these ideas
rather easily, by collecting true statements about them; no one should
feel that because these ideas may be new they cannot be understood readily.</p>

<h3>PHYSICAL PROBLEMS</h3>

<p>In physics, chemistry, mechanics, and other sciences there are many
problems in which the behavior of distance, of time, of speed, heat,
volume, electrical current, weight, acceleration, pressure, and many
other <i>physical quantities</i> are related to each other. Examples of
such problems are:</p>

<div class="figcenter">
  <img id="FIG_6-5" src="images/i_069.jpg" alt="" width="600" height="366" />
  <p class="f120"><span class="smcap">Fig. 6.</span> Paths of a shot from a gun, trajectories.</p>
</div>

<div class="blockquot">
<p>What are the various angles to which a gun should be raised in order
that it may shoot various distances? (<a href="#FIG_6-5">See Fig. 6.</a>)
(The paths of a shot from a gun are called <i>trajectories</i>.)</p>

<p>If a plane flies in a direction always at the same angle from the
north, how much farther will it travel than if it flew along the
shortest path? (<a href="#FIG_7-5">See Fig. 7.</a>) (A path always at
the same angle from the north is called a <i>loxodrome</i>, and a
shortest path on a globe is called a <i>great circle</i>.)</p>

<p>How should an engine be designed so that it will have the least
vibration when it moves fast?</p>
</div>

<p><span class="pagenum" id="Page_70">[Pg 70]</span>
In <i>physical problems</i> like these, the answer is not a single
number but a <i>formula</i>. What we want to do in any one of these
problems is find a formula so that any one of the quantities may be
calculated, given the behavior of the others. For example, here is a
familiar problem in which the answer is a formula and not a number:</p>

<div class="figcontainer">
  <div class="figsub">
   <img id="FIG_7-5" src="images/i_070a.jpg" alt="" width="300" height="359" />
   <p class="center"><span class="smcap">Fig. 7.</span> Paths of a flight.</p>
  </div>
  <div class="figsub">
   <p class="space-below3">&nbsp;</p>
   <img id="FIG_8-5" src="images/i_070b.jpg" alt="" width="300" height="195" />
   <p class="center space-above2"><span class="smcap">Fig. 8.</span> Room formulas.</p>
   </div>
</div>

<p>How are the floor area of a room, its length,
and its width related to each other? (<a href="#FIG_8-5">See Fig. 8.</a>)</p>

<p>The answer is told in any one of three <i>equations</i>:</p>

<div class="blockquot">
<p>(<i>floor area</i>) <span class="smcap">equals</span> (<i>length</i>)
<span class="smcap">times</span> (<i>width</i>)</p>

<p>(<i>length</i>) <span class="smcap">equals</span> (<i>floor area</i>)
<span class="smcap">divided by</span> (<i>width</i>)</p>

<p>(<i>width</i>) <span class="smcap">equals</span> (<i>floor area</i>)
<span class="smcap">divided by</span> (<i>length</i>)</p>
</div>

<p>The first equation shows that the floor area depends on the length of
the room and also on the width of the room. So we say floor area is a
<i>function</i> of length and width. This particular function happens
to be <i>product</i>, the result of multiplication. In other words,
floor area is equal to the product of length and width.</p>

<p>Now there is another kind of function called a <i>differential
function</i> or <i>derivative</i>. A <i>differential function</i>
or <i>derivative</i> is an <i>instantaneous rate of change</i>. An
instantaneous rate of change is the result of two steps: (1) finding
a rate of change over an <i>interval</i> and then (2) letting the
interval become smaller and smaller indefinitely. For example, suppose
that we have the problem:</p>

<p class="blockquot">How are speed, distance, and time related to each other?</p>

<p><span class="pagenum" id="Page_71">[Pg 71]</span>
One of the answers is:</p>

<p class="blockquot">(<i>speed</i>) <span class="smcap">equals the instantaneous
rate of change of</span> (<i>distance</i>) <span class="smcap">with respect
to</span> (<i>time</i>)</p>

<p>Or we can say, and it is just the same thing in other words:</p>

<p class="blockquot">(<i>speed</i>) <span class="smcap">equals the derivative
of</span> (<i>distance</i>) <span class="smcap">with respect to</span>
(<i>time</i>)</p>

<p>Now we can tell what a differential equation is. It is simply an
equation in which a derivative occurs, such as the last example.
Perhaps the commonest kind of equation in physical problems is the
differential equation.</p>

<h3>SOLVING PHYSICAL PROBLEMS</h3>

<p>Now we were able to change the equation about floor area into other
forms, if we wanted to find length or width instead of floor area.
When we did this, we ran into the <i>inverse</i> or opposite of
multiplication: division.</p>

<p>In the same way, we can change the equation about speed into other
forms, if we want to find distance or time instead of speed. If we
do this, we run into a new idea, the inverse or opposite of the
derivative, called <i>integral</i>. The two new equations are:</p>

<div class="blockquot">
<p>(<i>distance</i>) <span class="smcap">equals the integral of</span> (<i>speed</i>)
<span class="smcap">with respect to</span> (<i>time</i>)</p>

<p>(<i>time</i>) <span class="smcap">equals the integral of [one divided by</span>
(<i>speed</i>)<span class="smcap">] with respect to</span> (<i>distance</i>)</p>
</div>

<p class="no-indent">These equations may also be called differential equations.</p>

<p>An integral is the result of a process called <i>integrating</i>. To
integrate speed and get distance is the result of three steps: (1)
breaking up an interval of time into a large number of small
bits, (2) adding up all the small distances that we get by taking
each bit of time and multiplying by the speed which applied in
that bit of time, and (3) letting the bits of time get smaller and
smaller, and letting the number of them get larger and larger, indefinitely.
<span class="pagenum" id="Page_72">[Pg 72]</span></p>

<p class="no-indent">In other words,</p>

<p class="blockquot">(<i>total distance</i>) <span class="smcap">equals
the sum of all the small</span> (<i>distances</i>),
<span class="smcap">each equal to: a bit of</span> (<i>time</i>)
<span class="smcap">multiplied by the</span> (<i>speed</i>)
<span class="smcap">applying to that bit</span></p>

<p class="no-indent">This is another way of saying as before,</p>

<p class="blockquot">(<i>distance</i>) <span class="smcap">equals the
integral of</span> (<i>speed</i>) <span class="smcap">with respect
to</span> (<i>time</i>)</p>

<p class="no-indent">To solve a differential equation, we almost always
need to integrate one or more quantities.</p>

<h3>ORIGIN AND DEVELOPMENT OF THE<br /> DIFFERENTIAL ANALYZER</h3>

<p>For at least two centuries, solving differential equations to answer
physical problems has been a main job for mathematicians. Mathematics
is supposed to be logical, and perhaps you would think this would
be easy. But mathematicians have been unable to solve a great many
differential equations; only here and there, as if by accident, could
they solve one. So they often wished for better methods in order to
make the job easier.</p>

<p>A British mathematician and physicist, William Thomson (Lord Kelvin),
in 1879 suggested solving differential equations by a machine. He went
further: he described mechanisms for integrating and other mathematical
processes, and how these mechanisms could be connected together in a
machine. No such machine was then built; engineering in those years
was not equal to it. In 1923, a machine of this type for solving the
differential equations of trajectories was proposed by L. Wainwright.</p>

<p>In 1925, at Massachusetts Institute of Technology, the problem of a
machine to solve differential equations was again being studied by Dr.
Vannevar Bush and his associates. Dr. Bush experimented with mechanisms
that would integrate, add, multiply, etc., and methods of connecting
them together in a machine. A major part of the success of the machine
depended on a device whereby a very small turning force would do a
rather large amount of work. He developed a way in which the small
<span class="pagenum" id="Page_73">[Pg 73]</span>
turning force, about as small as a puff of breath, could be used to
tighten a string around a drum already turning with a considerable
force, and thus clutch the drum, bring in that force, and do the work
that needed to be done. You may have watched a ship being loaded,
seen a man coil a rope around a <i>winch</i>, and watched him swing
a heavy load into the air by a slight pull on the rope (<a href="#FIG_9-5">Fig. 9</a>).
If so, you have seen this same principle at work. The turning force
(or <i>torque</i>) that pulls on the rope is greatly increased (or
<i>amplified</i>) by such a mechanism, and so we call it a
<i>torque amplifier</i>.</p>

<div class="figcenter">
  <img id="FIG_9-5" src="images/i_073.jpg" alt="" width="600" height="274" />
  <p class="f120"><span class="smcap">Fig. 9.</span> Increasing turning force;<br />
                    winch, or torque amplifier.</p>
</div>

<p>By 1930, Dr. Bush and his group had finished the first differential
analyzer. It was entirely mechanical, having no electrical parts except
the motors. It was so successful that a number of engineering schools
and manufacturing businesses have since then built other machines of
the Bush type. Each time, some improvements were made in accuracy and
capacity for solving problems. But, if you changed from one problem
to another on this type of machine, you had to do a lot of work with
screwdrivers and wrenches. You had to undo old mechanical connections
between shafts and set up new ones. Accordingly, in 1935, the men at
MIT started designing a second differential analyzer. In this one you
could make all the connections electrically.</p>

<p>MIT finished its second differential analyzer in 1942, but the fact
was not published during World War II, for the machine was put to work
on important military problems. In fact, a rumor spread and was never
denied that the machine was a white elephant and would not work. The
machine was officially announced in October 1945. It was the most
advanced and efficient differential analyzer ever built. We shall
talk chiefly about it for the rest of this chapter. A good technical
<span class="pagenum" id="Page_74">[Pg 74]</span>
description of this machine is in a paper, “A New Type of Differential
Analyzer,” by Vannevar Bush and Samuel H. Caldwell, published in the
<i>Journal of the Franklin Institute</i> for October 1945.</p>

<h3>GENERAL ORGANIZATION OF<br /> MIT DIFFERENTIAL ANALYZER NO. 2</h3>

<p>A differential analyzer is basically made up of shafts that turn.
When we set up the machine to solve a differential equation, we
assign one shaft in the machine to each quantity referred to in the
equation. It is the job of that shaft to keep track of that quantity.
The total amount of turning of that shaft at any time while the
problem is running measures the size of that quantity at that time.
If the quantity decreases, the shaft turns in the opposite direction.
For example, if we have speed, time, and distance in a differential
equation, we label one shaft “speed,” another shaft “time,” and another
shaft “distance.” If we wish, we may assign 10 turns of the “time”
shaft to mean “one second,” 2 turns of the “distance” shaft to mean
“one foot,” and 4 turns of the “speed” shaft to mean “one foot per
second.” These are called <i>scale factors</i>. We could, however, use
any other convenient units that we wished.</p>

<p>By just looking at a shaft or a wheel, we can tell what part of a full
turn it has made—a half, or a quarter, or some other part—but we
cannot tell by looking how many full turns it has made. In the machine,
therefore, there are mechanisms that record not only full turns but
also tenths of turns. These are called <i>counters</i>. We can connect
a counter to any shaft. When we want to know some quantity that a shaft
and counter are keeping track of, we read the counting mechanism.</p>

<p>The second differential analyzer, which MIT finished in 1942, went a
step further than any previous one. In this machine, a varying number
can be expressed either (1) mechanically as the amount of turning of a
shaft, or (2) electrically as the amount of two <i>voltages</i> in a
pair of wires. The MIT men did this by means of a mechanism called an
<i>angle-indicator</i>.</p>

<p>Angle indicators have essentially three parts: a <i>transmitter</i>,
a <i>receiver</i>, and switches. The transmitter (<a href="#FIG_10-5">Fig. 10</a>)
can sense the exact amount that a shaft has turned and give out a voltage in each of
<span class="pagenum" id="Page_75">[Pg 75]</span>
two wires which tells exactly how much the shaft has turned (<a href="#FIG_11-5">Fig. 11</a>).
The receiving device (<a href="#FIG_12-5">Fig. 12</a>), which has a motor, can take in the
voltages in the two wires and drive a second shaft, making it turn in
step with the first shaft. By means of the switchboard (<a href="#FIG_13-5">Fig. 13</a>),
the two wires from the transmitter of any angle-indicator can lead anywhere
in the machine and be connected to the receiver of any other angle indicator.</p>

<div class="figcenter">
  <img id="FIG_10-5" src="images/i_075a.jpg" alt="" width="600" height="312" />
  <p class="f120 space-below2"><span class="smcap">Fig. 10.</span> Scheme of angle-indicator transmitter.</p>
  <img id="FIG_11-5" src="images/i_075b.jpg" alt="" width="600" height="295" />
  <p class="f120 space-below2"><span class="smcap">Fig. 11.</span> Indication of angle.</p>
  <img id="FIG_12-5" src="images/i_075c.jpg" alt="" width="600" height="211" />
  <p class="f120 space-below2"><span class="smcap">Fig. 12.</span> Scheme
                            of angle-indicator receiver.</p>
</div>

<p>In a differential analyzer, we can connect the shafts together in many
different ways. For example, suppose that we want one shaft <i>b</i>
to turn twice as much as another shaft <i>a</i>. For this to happen
we must have a mechanism that will connect shaft <i>a</i> to shaft
<i>b</i> and make shaft <i>b</i> turn twice as much as shaft <i>a</i>.
We can draw the scheme of this mechanism in <a href="#FIG_14-5">Fig. 14</a>:
a box, standing for any kind of simple or complicated mechanism; a line
going into it, standing for input of the quantity <i>a</i>; a line
going out of it, standing for output of the quantity <i>b</i>; and a
statement saying that <i>b</i> equals 2<i>a</i>.
<span class="pagenum" id="Page_76">[Pg 76]</span></p>

<div class="figcenter">
  <img id="FIG_13-5" src="images/i_076a.jpg" alt="" width="600" height="291" />
  <p class="f120"><span class="smcap">Fig. 13.</span> Switchboard.</p>
</div>

<p>One mechanism that will make shaft <i>b</i> turn twice as much as shaft
<i>a</i> is a <i>pair of gears</i> such that: (1) they mesh together
and (2) the gear on shaft <i>a</i> has twice as many teeth as the gear
on shaft <i>b</i> (<a href="#FIG_15-5">Fig. 15</a>). On the mechanical
differential analyzer that MIT finished in 1930, a pair of gears was
the mechanism actually used for doubling. To make one shaft turn twice
as much as another by this device, we would: go over to the machine
with a screwdriver; pick out from a box two gears, one with twice as
many teeth as the other; slide them onto the shafts that are to be
connected; make the gears mesh together; and screw them tight on their
shafts.</p>

<div class="figcontainer">
  <div class="figsub">
   <p class="space-below3">&nbsp;</p>
   <img id="FIG_14-5" src="images/i_076b.jpg" alt="" width="300" height="109" />
   <p class="center space-above2"><span class="smcap">Fig. 14.</span> Scheme of a doubling<br /> mechanism.</p>
  </div>
  <div class="figsub">
   <img id="FIG_15-5" src="images/i_076c.jpg" alt="" width="300" height="268" />
   <p class="center"><span class="smcap">Fig. 15.</span> Example of a doubling<br /> mechanism.</p>
   </div>
</div>

<p>On the MIT differential analyzer No. 2, however, we are better off. A
much more convenient device for doubling is used. We make use of: a
<span class="pagenum" id="Page_77">[Pg 77]</span>
<i>gearbox</i> in whichthere are two shafts that may be geared so
that one turns twice as much as the other, and two angle-indicator
transmitters and receivers. Looking at the drawing (<a href="#FIG_16-5">Fig. 16</a>),
we can see that: shaft <i>a</i> drives shaft <i>c</i> to turn in step,
shaft <i>c</i> drives shaft <i>d</i> to turn twice as much, and shaft
<i>d</i> drives shaft <i>b</i> to turn in step. Here we can accomplish
doubling by closing the pairs of switches that connect to the gearbox shafts.</p>

<div class="figcenter">
  <p class="f120"><b>Angle indicators: T, transmitters, and R, receivers</b></p>
  <img id="FIG_16-5" src="images/i_077a.jpg" alt="" width="600" height="149" />
  <p class="f120"><span class="smcap">Fig. 16.</span> Another example
                                     of a doubling mechanism.</p>
</div>

<p>Above, we have talked about a mechanism with gears that would multiply
the amount of turning by the <i>constant ratio</i> 2. But, of course,
in a calculation, any ratio, say 7.65, 3.142, ···, might be needed,
not only 2. In order to handle various constant ratios, gearboxes of
two kinds are in differential analyzer No. 2. The first kind is a
<i>one-digit gearbox</i>. It can be set to give any of 10 ratios, 0.1,
0.2, 0.3, ···, 1.0. The second kind is a <i>four-digit gearbox</i>. It
can be set to give any one of more than 11 thousand ratios, 0.0000,
0.0001, 0.0002, ···, 1.1109, 1.1110. We can thus multiply by constant ratios.</p>

<h4>Adders</h4>

<p>We come now to a new mechanism, whose purpose is to add or subtract
the amount of turning of two shafts. It is called an <i>adder</i>. The
scheme of it is shown in <a href="#FIG_17-5">Fig. 17</a>: an input shaft
<span class="pagenum" id="Page_78">[Pg 78]</span>
with amount of turning <i>a</i>, another input shaft with amount of
turning <i>b</i>, and an output shaft with amount of turning <i>a</i>
+ <i>b</i>. The adder essentially is another kind of gearbox, called
a <i>differential gear assembly</i>. This name is confusing: the word
“differential” here has nothing to do with the word “differential” in
“differential analyzer.” This mechanism is very closely related to the
“differential” in the rear axle of a motor car, which distributes a
driving thrust from the motor to the two rear wheels of the car.</p>

<div class="figcontainer">
  <div class="figsub">
   <p class="space-below3">&nbsp;</p>
   <img id="FIG_17-5" src="images/i_077b.jpg" alt="" width="300" height="125" />
   <p class="center space-above2"><span class="smcap">Fig. 17.</span> Scheme of an adder mechanism.</p>
  </div>
  <div class="figsub">
   <img id="FIG_18-5" src="images/i_078.jpg" alt="" width="300" height="356" />
   <p class="center"><span class="smcap">Fig. 18.</span> Example of an adding mechanism<br />
                        (differential gear assembly).</p>
   </div>
</div>

<p>A type of differential gear assembly that will add is shown in <a href="#FIG_18-5">Fig. 18</a>.
This is a set of 5 gears <i>A</i> to <i>E</i>. The 2 gears <i>A</i> and
<i>B</i> are input gears. The amount of their turning is <i>a</i> and
<i>b</i>, respectively. They both mesh with a third gear, <i>C</i>,
free to turn, but the axis of <i>C</i> is fastened to the inside rim
of a fourth, larger gear, <i>D</i>. Thus <i>D</i> is driven, and the
amount of its turning is (<i>a</i> + <i>b</i>)/2. This gear meshes with
a gear <i>E</i> with half the number of teeth, and so the amount of
turning of <i>E</i> is <i>a</i> + <i>b</i>.</p>

<p>We can subtract the turning of one shaft from the turning of another
simply by turning one of the input shafts in the opposite direction.</p>

<h4>Integrators</h4>

<p>Another mechanism in a differential analyzer, and the one that makes
it worth while to build the machine, is called an <i>integrator</i>.
This mechanism carries out the process of integrating, of adding up a
very large number of small changing quantities. <a href="#FIG_19-5">Figure 19</a>
shows what an integrator is. It has three chief parts: a <i>disc</i>,
a little <i>wheel</i>, and a <i>screw</i>. The round disc turns
horizontally on its vertical shaft. The wheel rests on the disc and
turns vertically on its horizontal shaft. The screw goes through the
<span class="pagenum" id="Page_79">[Pg 79]</span>
support of the disc; when the screw turns, it changes the distance
between the edge of the wheel and the center of the disc.</p>

<div class="figcenter">
  <img id="FIG_19-5" src="images/i_079.jpg" alt="" width="600" height="350" />
  <p class="f120"><span class="smcap">Fig. 19.</span> Mechanism of integrator.</p>
</div>

<p>Now let us watch this mechanism move. If the disc turns a little bit,
the wheel pressing on it must turn a little bit. If the screw turns a
small amount, the distance between the edge of the wheel and the center
of the disc changes. The amount that the wheel turns is doubled if its
distance from the center of the disc is doubled, and halved if that
distance is halved. So we see that:</p>

<div class="blockquot">
<p class="neg-indent">(<i>the total amount that the wheel turns</i>)
<span class="smcap">equals the sum of all the small</span> (<i>amounts
of turning</i>), <span class="smcap">each equal to: a bit of</span>
(<i>disc turning</i>) <span class="smcap">multiplied by the</span>
(<i>distance from the center of the disc to the edge of the
wheel</i>) <span class="smcap">applying to that bit</span></p>
</div>

<p class="no-indent">If we look back at our discussion of integrating
(<a href="#Page_72">p. 72</a>), we see that the capital words here
are just the same as those used there. Thus we have a mechanism that
expresses integration:</p>

<div class="blockquot">
<p class="neg-indent">(<i>the total amount that the wheel turns</i>)
<span class="smcap">equals the integral of</span> (<i>the distance
from the center of the disc to the wheel</i>) <span class="smcap">with
respect to</span> (<i>the amount that the disc turns</i>)</p>
</div>

<p class="no-indent">The scheme of this mechanism is shown in <a href="#FIG_20-5">Fig. 20</a>.</p>

<p>For example, suppose that the screw measures the speed at which a car
<span class="pagenum" id="Page_80">[Pg 80]</span>
travels and that the disc measures time. The wheel, consequently, will
measure distance traveled by the car. The mechanism <span class="smcap">integrates</span>
speed with respect to time and gives distance.</p>

<div class="figcenter">
  <img id="FIG_20-5" src="images/i_080a.jpg" alt="" width="600" height="237" />
  <p class="f120"><span class="smcap">Fig. 20.</span> Scheme of integrator.</p>
</div>

<p>This mechanism is the device that Lord Kelvin talked about in 1879 and
that Dr. Bush made practical in 1925. The mechanical difficulty is to
make the friction between the disc and the wheel turn the wheel with
enough force to do other work. In the second differential analyzer, the
angle indicator set on the shaft of the wheel solves the problem very neatly.</p>

<div class="figcenter">
  <img id="FIG_21-5" src="images/i_080b.jpg" alt="" width="600" height="279" />
  <p class="f120"><span class="smcap">Fig. 21.</span> Graph of air resistance coefficient.</p>
</div>

<h4>Function Tables</h4>

<p>The behavior of some physical quantities can be described only
by a series of numbers or a graphic curve. For example, the
<i>resistance</i> or <i>drag</i> of the air against a passing object is
related to the speed of the object in a rather complicated way. Part
of the relation is called the <i>drag coefficient</i> or <i>resistance
coefficient</i>; a rough graph of this is shown in <a href="#FIG_21-5">Fig. 21</a>.
This graph shows several interesting facts: (1) when the object is
still, there is no air resistance; (2) as it travels faster and faster,
air resistance rapidly increases; (3) when the object travels with the
<span class="pagenum" id="Page_81">[Pg 81]</span>
speed of sound, resistance is very great and increases enormously;
(4) but, when the object starts traveling with a speed about 20 per
cent faster than sound, the drag coefficient begins to decrease. This
drawing or <i>graph</i> shows in part how air resistance depends on
speed of object; in other words, it shows the drag coefficient as a
<i>function</i> of speed (<a href="#SUPPL_2">see Supplement 2</a>).</p>

<div class="figcenter">
  <img id="FIG_22-5" src="images/i_081.jpg" alt="" width="600" height="299" />
  <p class="f120"><span class="smcap">Fig. 22.</span> Pointer following graph.</p>
</div>

<p>Now we need a way of putting any function we wish into a differential
analyzer. To do this, we use a mechanism called a <i>function
table</i>. We draw a careful graph of the function according to the
scale we wish to use, and we set the graph on the outside of a large
drum (<a href="#FIG_22-5">Fig. 22</a>). For example, we can put the
resistance coefficient graph on the drum; the speed (or <i>independent
variable</i>) goes around the drum, and the resistance coefficient (or
<i>dependent variable</i>) goes along the drum. The machine slowly
turns the drum, as may be called for by the problem. A girl sits at the
function table and watches, turning a handwheel that keeps the sighting
circle of a pointer right over the graph. The turning of the handwheel
puts the graphed function into the machine. Instead of employing a
person, we can make one side of the graph black, leaving the other side
white, and put in a <i>phototube</i> (an electronic tube sensitive to
amount of light) that will steer from pure black or pure white to half
and half (<a href="#FIG_23-5">see Fig. 23</a>).</p>

<p>We do not need many function tables to put in information, because we
can often use integrators in neat combinations to avoid them. We shall
say more about this possibility later.</p>

<p>We can also use a function table to put out information and to draw a
graph. To do so, we disconnect the handwheel; we connect the shaft of
<span class="pagenum" id="Page_82">[Pg 82]</span>
the handwheel to the shaft that records the function we are interested
in; we take out the pointer and put in a pen; and we put a blank sheet
of graph paper around the drum.</p>

<div class="figcenter">
  <img id="FIG_23-5" src="images/i_082.jpg" alt="" width="600" height="298" />
  <p class="f120"><span class="smcap">Fig. 23.</span> Phototube following graph.</p>
</div>

<p>We have now described the main parts of the second MIT differential
analyzer. They are the parts that handle numbers. We can now tell the
capacity of the differential analyzer by telling the number of main
parts that it holds:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl">Shafts</td>
      <td class="tdr">&nbsp;&emsp;About 130</td>
   </tr><tr>
      <td class="tdl">One-digit gearboxes</td>
      <td class="tdr">12</td>
   </tr><tr>
      <td class="tdl">Four-digit gearboxes</td>
      <td class="tdr">16</td>
   </tr><tr>
      <td class="tdl">Adders</td>
      <td class="tdr">About  16</td>
   </tr><tr>
      <td class="tdl">Integrators</td>
      <td class="tdr">18</td>
   </tr><tr>
      <td class="tdl">Function tables</td>
      <td class="tdr">3</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">On a simpler level, we can say that the machine holds
these physical parts:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl">Miles of wire</td>
      <td class="tdr">About  200</td>
   </tr><tr>
      <td class="tdl">Relays</td>
      <td class="tdr">About  3000</td>
   </tr><tr>
      <td class="tdl">Motors</td>
      <td class="tdr">About  150</td>
   </tr><tr>
      <td class="tdl">Electronic tubes</td>
      <td class="tdr">&nbsp;&emsp;About  2000</td>
   </tr>
 </tbody>
</table>

<h3>INSTRUCTING THE MIT<br />DIFFERENTIAL ANALYZER NO. 2</h3>

<p>Besides the function tables for putting information into the machine,
there are three mechanisms that read punched paper tape. The three
tapes are called the <i>A tape</i>, the <i>B tape</i>, and the <i>C
tape</i>. From these tapes the machine is set up to solve a problem.</p>

<p>Suppose that we have decided how the machine is to solve a problem.
Suppose that we know the number of integrators, adders, gearboxes,
<span class="pagenum" id="Page_83">[Pg 83]</span>
etc., that must be used, and know how their inputs and outputs are
to be connected. To carry out the solution, we now have to put the
instructions and numbers into the machine.</p>

<p>The <i>A</i> tape contains instructions for connecting shafts in
the machine. Each instruction connects a certain output of one type
of mechanism (adder, etc.) to a certain input of another type of
mechanism. When the machine reads an instruction on this tape, it
connects electrically the transmitting angle-indicator of an output
shaft to the receiving angle-indicator of another input shaft.</p>

<p>Now the connecting part of the differential analyzer behaves as if
it were very intelligent: it assigns an adder or an integrator or a
gearbox, etc., to a new problem only if that mechanism is not busy. For
example, if a problem tape calls for adder 3 (in the list belonging to
the problem), the machine will assign the first adder that is not busy,
perhaps adder 14 (in the machine), to do the work. Each time that adder
3 (in the problem list) is called for in the <i>A</i> tape, the machine
remembers that adder 14 was chosen and assigns it over again. This
ability, of course, is very useful.</p>

<p>The <i>B</i> tape contains the ratios at which the gearboxes are to be
set. For example, suppose that we want gearbox 4 (in the problem list)
to change its input by the ratio of 0.2573. The machine, after reading
the <i>A</i> tape, has assigned gearbox 11 (in the machine list). Then,
when the machine reads the <i>B</i> tape, it sets the ratio in gearbox
11 to 0.2573.</p>

<p>The answer to a differential equation is different for different
starting conditions. For example, when we know speed and time and wish
to find distance traveled and where we have arrived, we must know the
point at which we started. We therefore need to arrange the machine
so that we can put in different starting conditions (or different
<i>initial conditions</i>, as the mathematician calls them).</p>

<p>The <i>C</i> tape puts the initial conditions into the machine. For
example, reading the <i>C</i> tape for the problem, the machine finds
that 3000 should, at the start of the problem, stand in counter 4. The
machine then reads the number at which counter 4 actually stands, say
6728.3. It subtracts the two numbers and remembers the difference,
<span class="pagenum" id="Page_84">[Pg 84]</span>
-3728.3. And whenever the machine reads that counter later, finding,
say, 9468.4 in it, first the 3728.3 is subtracted, and then the answer
5740.1 is printed.</p>

<h3>ANSWERS</h3>

<p>Information may come out of the machine in either one of two ways: in
printed numbers or in a graph. In fact, the same quantity may come out
of the machine in both ways at the same time. To obtain a graph, we
change a function table from input to output, put a pen on it, and have
it draw the graph.</p>

<p>The machine has 3 electric typewriters. The machine will take numerical
information out of the counters at high speed even while they are
turning, and it will put the information into relays. Then it will read
from the relays into the typewriter keys one by one while they type
from left to right across the page.</p>

<h3>HOW THE DIFFERENTIAL ANALYZER CALCULATES</h3>

<p>Up to this point in this chapter, the author has tried to tell the
story of the differential analyzer in plain words. But for reading
this section, a little knowledge of calculus is necessary.
(<a href="#SUPPL_2">See also Supplement 2</a>.) If you wish,
skip this section, and go on to the next one.</p>

<p>We have described how varying quantities, or <i>variables</i>, are
operated on in the machine in one way or another: adding, subtracting,
multiplying by a constant, referring to a table, and integrating. What
do we do if we wish to multiply 2 variables together? A neat trick is
to use the formula:</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr"><i>xy</i> =</td>
      <td class="tdl"><big>∫</big> <i>x dy</i> +</td>
      <td class="tdl"><big>∫</big> <i>y dx</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">To multiply in this way requires 2 integrators
and 1 adder. The connections that are made between them are as follows:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl">Shaft <i>x</i></td>
      <td class="tdl">To Integrator 1, Screw</td>
   </tr><tr>
      <td class="tdl">Shaft <i>x</i></td>
      <td class="tdl">To Integrator 2, Disc</td>
   </tr><tr>
      <td class="tdl">Shaft <i>y</i></td>
      <td class="tdl">To Integrator 1, Disc</td>
   </tr><tr>
      <td class="tdl">Shaft <i>y</i></td>
      <td class="tdl">To Integrator 2, Screw</td>
   </tr><tr>
      <td class="tdl">Integrator 1, Wheel</td>
      <td class="tdl">To Adder 1, Input 1</td>
   </tr><tr>
      <td class="tdl">Integrator 2, Wheel&emsp;&nbsp;</td>
      <td class="tdl">To Adder 1, Input 2</td>
   </tr><tr>
      <td class="tdl">Adder 1, Output</td>
      <td class="tdl">To Shaft expressing <i>xy</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_85">[Pg 85]</span>
A product of 2 variables <i>under the integral sign</i> can be obtained
a little more easily, because of the curious powers of the differential
analyzer. Thus, if it is desired to obtain <big><b>∫ <i>xy dt</i></b></big>,
we can use the formula:</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc"><img src="images/integral_single.jpg" alt="" width="40" height="81" /></td>
      <td class="tdl"><i>xy</i> <i>dt</i> =</td>
      <td class="tdc"><img src="images/integral_single.jpg" alt="" width="40" height="81" /></td>
      <td class="tdl"><i>x</i> <i>d</i>&nbsp;</td>
      <td class="tdc"><img src="images/cbl-4.jpg" alt="" width="23" height="82" /></td>
      <td class="tdc"><img src="images/integral_single.jpg" alt="" width="40" height="81" /></td>
      <td class="tdl"><i>y</i> <i>dt</i></td>
      <td class="tdc"><img src="images/cbr-4.jpg" alt="" width="23" height="82" /></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">and this operation does not require an adder.
The connections are as follows:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl">Shaft <i>t</i></td>
      <td class="tdl">To Integrator 1, Disc</td>
   </tr><tr>
      <td class="tdl">Shaft <i>y</i></td>
      <td class="tdl">To Integrator 1, Screw</td>
   </tr><tr>
      <td class="tdl">Integrator 1, Wheel</td>
      <td class="tdl">To Integrator 2, Disc</td>
   </tr><tr>
      <td class="tdl">Shaft <i>x</i></td>
      <td class="tdl">To Integrator 2, Screw</td>
   </tr><tr>
      <td class="tdl">Integrator 2, Wheel&emsp;&nbsp;</td>
      <td class="tdl">To Shaft expressing <big><b>∫<i>xy dt</i></b></big></td>
   </tr>
 </tbody>
</table>

<p>In order to get the quotient of 2 variables, <i>x</i>/<i>y</i>, we can
use some more tricks. First, the <i>reciprocal</i> 1/<i>y</i> can be
obtained by using the two <i>simultaneous equations</i>:</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc" rowspan="2"><img src="images/integral_single.jpg" alt="" width="40" height="81" /></td>
      <td class="tdl" rowspan="2">&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdl" rowspan="2">&nbsp;<i>dy</i> = log <i>y</i>,</td>
   </tr><tr>
      <td class="tdc"><i>y</i></td>
   </tr><tr>
      <td class="tdc" rowspan="2"><img src="images/integral_single.jpg" alt="" width="40" height="81" /></td>
      <td class="tdl" rowspan="2">&nbsp;-&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdl" rowspan="2">&nbsp;<i>d</i>(log <i>y</i>) = <i>y</i></td>
   </tr><tr>
      <td class="tdc"><i>y</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The connections are as follows:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl">Shaft <i>y</i></td>
      <td class="tdl">To Integrator 1, Disc <span class="smcap">and to</span> Integrator 2, Wheel</td>
   </tr><tr>
      <td class="tdl">Shaft log <i>y</i>&nbsp;</td>
      <td class="tdl">To Integrator 1, Wheel <span class="smcap">and to</span> Integrator 2, Disc</td>
   </tr><tr>
      <td class="tdl">Shaft 1/<i>y</i></td>
      <td class="tdl">To Integrator 1, Screw, <span class="smcap">and negatively to</span> Integrator 2, Screw</td>
   </tr>
 </tbody>
</table>

<p>In order to get <i>x</i>/<i>y</i>, we can then multiply <i>x</i> by
1/<i>y</i>. We see that this setup gives us log <i>y</i> for nothing,
that is, without needing more integrators or other equipment. Clearly,
other tricks like this will give sin <i>x</i>, cos <i>x</i>, <i>eˣ</i>,
<i>x²</i>, and other functions that satisfy simple differential equations.</p>

<p>An integral of a reciprocal can be obtained even more directly. Suppose
that</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc" rowspan="2"><i>y</i> =</td>
      <td class="tdc" rowspan="2"><img src="images/integral_single.jpg" alt="" width="40" height="81" /></td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdl" rowspan="2">&nbsp;<i>dt</i></td>
   </tr><tr>
      <td class="tdc"><i>x</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Then</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc" rowspan="2"><i>Dₜ y</i> =&nbsp;</td>
      <td class="tdc bb">&nbsp;1&nbsp;</td>
      <td class="tdl" rowspan="2">&nbsp;,&emsp;<i>D<sub>y</sub></i> <i>t</i> = <i>x</i>,</td>
   </tr><tr>
      <td class="tdc"><i>x</i></td>
   </tr>
 </tbody>
</table>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl">&nbsp;<i>t</i> =&nbsp;</td>
      <td class="tdc"><img src="images/integral_single.jpg" alt="" width="40" height="81" /></td>
      <td class="tdc">&nbsp;<i>x</i> <i>dy</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The connections therefore are:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdl">Shaft <i>t</i>&emsp;&nbsp;</td>
      <td class="tdl">To Integrator, Wheel</td>
   </tr><tr>
      <td class="tdl">Shaft <i>x</i></td>
      <td class="tdl">To Integrator, Screw</td>
   </tr><tr>
      <td class="tdl">Shaft <i>y</i></td>
      <td class="tdl">To Integrator, Disc</td>
   </tr>
 </tbody>
</table>

<p><span class="pagenum" id="Page_86">[Pg 86]</span>
The light wheel then drives the heavy disc. Clearly only the
angle-indicator device makes this possible at all. Naturally, the
closer the wheel gets to the center of the disc, that is, <i>x</i>
approaching zero, the greater the strain on the mechanism, and the more
likely the result is to be off. Mathematically, of course, the limit of
1/<i>x</i> as <i>x</i> approaches zero equals infinity, and this gives
trouble in the machine.</p>

<p>There is no standard mathematical method for solving any differential
equation. But the machine provides a standard direct method for solving
all differential equations with only one independent variable. First:
assign a shaft for each <i>term</i> that appears in the equation.
For example, the highest derivative that appears and the independent
variable are both assigned shafts. The integral of the highest
derivative is easily obtained, and the integral of that integral, etc.
Second: connect the shafts so that all the mathematical relations are
expressed. Both <i>explicit</i> and <i>implicit</i> equations may be
expressed. Third: for any shaft there must be just one <i>drive</i>,
or source of torque. A shaft may, however, drive more than one other
shaft. Fourth: choose <i>scale factors</i> so that the limits of the
machine are not exceeded yet at the same time are well used. For
example, the most that an integrator or a function table can move
is 1 or 2 feet. Also, the number of full turns made by a shaft in
representing its variable should be large, often between 1000 and
10,000.</p>

<p>Of course, as with all these large machines, anyone would need some
months of actual practice before he could put on a problem and get an
answer efficiently.</p>

<h3>AN APPRAISAL OF THE MACHINE</h3>

<p>The second MIT differential analyzer is probably the best machine
ever built for solving most differential equations. It regularly has
an accuracy of 1 part in 10,000. This is enough for most engineering
problems. If greater accuracy is needed, the second differential
analyzer cannot provide it. Once in a while the machine can reach an
accuracy of 1 part in 50,000; but, to balance this, it is sometimes
less accurate than 1 part in 10,000.
<span class="pagenum" id="Page_87">[Pg 87]</span></p>

<p>The MIT differential analyzer No. 2 can find answers to problems very
quickly. The time for setting up a problem to be run on the machine
ranges from 5 to 15 minutes. The time for preparing the tapes that
set up the problem is, of course, longer; but the punch for preparing
the tape is a separate machine and does not delay the differential
analyzer. The time for the machine to produce a single solution to a
problem ranges usually from 3 minutes to a half-hour. It is easy to
put on a problem, run a few solutions, take the problem off, study the
results, change a few numbers, and then put the problem back on again.
This virtue is a great help in a search in a new field. While the study
is going on, time is not wasted, for the machine can be busy with a
different problem.</p>

<p>Running a problem a second time is a good check on the reliability of
an answer. For, when the problem is run the second time, we can arrange
that the machine will route the problem to other mechanisms.</p>

<p>The machine has a control panel. Here the operator watching the machine
can tell what units are doing what parts of what problems. If a unit
gives trouble or needs to be inspected, the clerk can throw a “busy”
switch. Then the machine cannot choose that unit for work to be done.
The machine contains many protecting signals and alarms. It is idle for
repairs less than 5 per cent of the time.</p>

<p>It is not easy to determine the total cost of the machine, for it was
partially financed by several large gifts. Also, much of the labor
was done by graduate students in return for the instruction that they
gained. The actual out-of-pocket cost was about $125,000. If the
machine were to be built by industry, the cost would likely be more
than 4 times as much. A simple differential analyzer, however, can be
cheap. Small scale differential analyzers have been built for less than
$1000; their accuracy has been about 1 part in 100.</p>

<p>There are many things that this machine cannot do; it was not built
to do them. (1) It cannot choose methods of solution. (2) It cannot
perform steps in solving a problem that depend on results as they
are found. (3) It cannot solve differential equations containing two
or more independent variables. Such equations are called <i>partial
<span class="pagenum" id="Page_88">[Pg 88]</span>
differential equations</i>; they appear in connection with the flow of
heat or air or electricity in 2 or 3 dimensions, and elsewhere. (4)
It cannot solve problems requiring 6 or more digits of accuracy. (5)
The machine, while running, can store numbers only for an instant,
since it operates on the principle of smoothly changing quantities;
however, when the machine stops, the number last held by each device is
permanently stored.</p>

<p>None of these comments, however, are criticisms of the machine.
Instead they show avenues of development for future machines. As was
said before, for solving most differential equations, this machine
has no equal to date. The range of problems which any differential
analyzer can do depends mostly on the number of its integrators. The
second differential analyzer has 18 and provides for expansion to 30.
The machine is constructed, also, so that it can be operated in 3
independent sections, each working to solve a different problem. The
differential analyzer can operate unattended. After it has been set up
and the first few results examined, it can be left alone to grind out
large blocks of answers.</p>

<p>An interesting example of the experimental use of a differential
analyzer in a commercial business is the following: In Great Britain,
R. E. Beard of the Pearl Assurance Company built a differential
analyzer with 6 integrators. He applied this machine to compute to 3
figures certain insurance values known as <i>continuous annuities</i>
and <i>continuous contingent insurances</i>. He has described the
machine and the application he made in a paper published in the
<i>Journal of the Institute of Actuaries</i>, Vol. 71, 1942, pp. 193-227.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_89">[Pg 89]</span></p>
<h2 class="nobreak" id="CHAPTER_6">Chapter 6<br />
<span class="h_subtitle">ACCURACY TO 23 DIGITS:<br />
HARVARD’S IBM AUTOMATIC<br />
SEQUENCE-CONTROLLED CALCULATOR</span></h2>
</div>

<p>One of the first giant brains to be finished was the machine in
the Computation Laboratory at Harvard University called the <i>IBM
Automatic Sequence-Controlled Calculator</i>. This great mechanical
brain started work in April 1944 and has been running 24 hours a
day almost all the time ever since. It has produced quantities of
information for the United States Navy. Although many problems
that have been placed on it have been classified by the Navy as
confidential, the machine itself is fully public. The way it was
working on Sept. 1, 1945, has been thoroughly described in a 540-page
book published in 1946, Volume I of the Annals of the Harvard
Computation Laboratory, entitled <i>Manual of Operation of the
Automatic Sequence-Controlled Calculator</i>. Since then the machine
has been improved in many ways.</p>

<p>This machine does thousands of calculating steps, one after another,
according to a scheme fixed ahead of time. This property is what gives
the machine its name: <i>automatic</i>, since the individual operations
are automatic, once the punched tape fixing the chain of operations has
been put on the machine, and <i>sequence-controlled</i>, since control
over the sequence of its operations has been built into the machine.</p>

<h3>ORIGIN AND DEVELOPMENT</h3>

<p>More than a hundred years ago, an English mathematician and actuary,
<span class="pagenum" id="Page_90">[Pg 90]</span>
Charles Babbage (1792-1871), designed a machine—or <i>engine</i>
as he called it—that would carry out the sequences of mathematical
operations. In the 1830’s he received a government grant to build an
<i>analytical engine</i> whereby long chains of calculations could
be performed. But he was unsuccessful, because the refined physical
devices necessary for quantities of digital calculation were not
yet developed. Only in the 1930’s did these physical devices become
sufficiently versatile and reliable for a calculator of hundreds of
thousands of parts to be successful.</p>

<p>The Automatic Sequence-Controlled Calculator at Harvard was largely the
concept of Professor Howard H. Aiken of Harvard. It was built through
a partnership of efforts, ideas, and engineering between him and the
International Business Machines Corporation, in the years 1937 to
1944. The calculator was a gift from IBM to Harvard University. Some
very useful additional control units, named the <i>Subsidiary Sequence
Mechanism</i>, were built at the Harvard Computation Laboratory in 1947
and joined to the machine.</p>

<div class="figcenter">
  <img id="FIG_1-6" src="images/i_090.jpg" alt="" width="600" height="282" />
  <p class="f120"><span class="smcap">Fig. 1.</span> Scheme of Harvard IBM Automatic<br />
                               Sequence-Controlled Calculator.</p>
</div>

<h3>GENERAL ORGANIZATION</h3>

<p>The machine (<a href="#FIG_1-6">see Fig. 1</a>) is about 50 feet long,
8 feet high, and about 2 feet wide. It consists of 22 panels; 17 of
them are set in a straight line, and the last 5 are at the rear of the
machine. In the scheme of the machine shown in <a href="#FIG_1-6">Fig. 1</a>, the details you
<span class="pagenum" id="Page_91">[Pg 91]</span>
would see in a photograph have been left out. Instead you see the
sections of the machine that are important because of what they do:
<i>input</i>, <i>memory</i>, <i>control</i>, and <i>output</i>. Why do
we not see a section labeled “computer”? Because in this mechanical
brain the computing part of the machine is closely joined to the
memory: every storage register can add and subtract. We shall soon
discuss these sections of the machine more fully.</p>

<h3>PHYSICAL DEVICES</h3>

<p>Now in order for any brain to work, <i>physical devices</i> must be
used. For example, in the human body, a nerve is the physical device
that carries information from one part of the body to another. In the
Harvard machine, an insulated <i>wire</i> is the physical device that
carries information from one part of the machine to another. One side
of every panel in the Harvard machine is heavily laden with a great
network of wires. Between the panels, you can see in many places cables
as thick as your arm and containing hundreds of wires. More than 500
miles of wire are used.</p>

<p>The physical devices in the Harvard machine are numerous, as we would
expect. It is perhaps not surprising that this machine has more than
760,000 parts. But, curiously enough, there are only 7 main kinds
of physical devices in the major part of the machine. They are:
wire, <i>two-position switches</i>, <i>two-position relays</i> (<a href="#CHAPTER_2">see Chapter 2</a>),
<i>ten-position switches</i>, <i>ten-position relays</i>,
<i>buttons</i>, and <i>cam contacts</i> (<a href="#FIG_4-6">see below</a>).
These are the devices that handle information in the form of electrical
impulses. They can be combined by electrical circuits in a great
variety of ways. There are, of course, other kinds of physical devices
that are important, but they are not numerous, and they have rather
simple duties. Looking at the machine, you can see three examples
easily. Physical devices of the first kind convert punched holes into
electrical impulses: 2 <i>card feeds</i>, 4 <i>tape feeds</i>. Those
of the second kind convert electrical impulses into punched holes:
1 <i>card punch</i>, 1 <i>tape punch</i>. Those of the third kind
convert electrical impulses into printed characters: 2 <i>electric
typewriters</i>. We can think of a fourth kind of physical device that
<span class="pagenum" id="Page_92">[Pg 92]</span>
would be a help, but, at present writing, it does not yet exist: a
device that converts printed characters into electrical impulses.</p>

<p>The Harvard machine, of course, is complicated. But it is complicated
because of the variety of ways in which relatively simple devices have
been connected together to make a machine that thinks.</p>

<h4>Switches</h4>

<p>A <i>two-position switch</i> (<a href="#FIG_2-6">see Fig. 2</a>)
turned by hand connects a wire to either one of 2 others. These 2
positions may stand for “yes” and “no,” 0 and 1, etc. There are many
two-position switches in the machine. A <i>ten-position switch</i>
or <i>dial switch</i> (<a href="#FIG_3-6">see Fig. 3</a>) turned by
hand connects the wire running into the center of the switch with a
wire at any one of ten positions 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 around
the edge. There are over 1400 dial switches in the machine. How does
turning the pointer on the top of the dial make connection between the
center wire and the edge wire? Under the face of the dial is the part
that works, a short rod of metal fastened to the pointer (shown with
dashes in <a href="#FIG_3-6">Fig. 3</a>). When the pointer turns,
this rod also turns, making the desired connection.</p>

<div class="figcontainer">
  <div class="figsub">
   <p class="space-below3">&nbsp;</p>
   <img id="FIG_2-6" src="images/i_092a.jpg" alt="" width="300" height="153" />
   <p class="center space-above2"><span class="smcap">Fig. 2.</span>Two-position switch.</p>
  </div>
  <div class="figsub">
   <img id="FIG_3-6" src="images/i_092b.jpg" alt="" width="300" height="349" />
   <p class="center"><span class="smcap">Fig. 3.</span> Dial switch.</p>
   </div>
</div>

<h4>Relays</h4>

<p><i>Two-position relays</i>—more often called just <i>relays</i>
(<a href="#CHAPTER_2">see Chapter 2</a>)—do the automatic routing of the
electrical impulses that cause computing to take place. Each relay may
take 2 positions, open or closed, and these positions may stand for 0
and 1. There are more than 3000 relays in the Harvard machine.</p>

<p>A magnet pulling one way and a spring pulling the other way are
sufficient in an ordinary relay to give 2 positions, “on” and “off,”
“yes” and “no,” 0 and 1. But how do we make a relay that can hold any
<span class="pagenum" id="Page_93">[Pg 93]</span>
one of 10 positions? <a href="#FIG_4-6">Figure 4</a> shows one scheme
for a <i>ten-position relay</i>. The <i>arm</i> can take any one of
10 positions, connecting the contact <i>Common</i> to any one of the
contacts O, 1, 2, 3, 4, 5, 6, 7, 8, and 9 so that current can flow.
The <i>gear</i> turns all the time. When an impulse comes in on the
<i>Pickup</i> line, the <i>clutch</i> connects the arm to the gear.
When an impulse comes in on the <i>Drop-out</i> line, the clutch
disconnects the arm from the gear. For example, suppose that the
ten-position relay is stopped at contact 2, as shown. Suppose that we
now pick up the relay, hold it just long enough to turn 3 steps, and
then drop it out. The relay will now rest at contact 5.</p>

<div class="figcenter">
  <img id="FIG_4-6" src="images/i_093a.jpg" alt="" width="600" height="282" />
  <p class="f120"><span class="smcap">Fig. 4.</span> Scheme of a ten-position relay,<br />
           or counter position.</p>
</div>

<div class="figleft">
  <img id="FIG_5-6" src="images/i_093b.jpg" alt="" width="200" height="285" />
  <p class="f120"><span class="smcap">Fig. 5.</span> Scheme of a<br /> counter wheel.</p>
</div>

<p>In the Harvard machine, the ten-position relays, much like the scheme
shown, do the same work as <i>counter wheels</i> (<a href="#FIG_5-6">Fig. 5</a>)
in an ordinary desk calculating machine, and so they are often spoken of as
<i>counter positions</i> in the Harvard machine. They are very useful
in the machine not only because they express the 10 decimal digits
0, 1, 2, 3, 4, 5, 6, 7, 8, 9 but also because adding and subtracting
numbers is accomplished by turning them through the proper number of
steps. In fact, an additional impulse is provided when the counter
position turns from 9 to 0, for purposes of carry. A group of 24
counter positions makes up each <i>storage counter</i>—or <i>storage
register</i>—in the machine. There are 2200 of these counter
positions. Each is connected to a continuously running gear on a small
shaft (<a href="#FIG_6-6">Fig. 6</a>). All these shafts are connected by other
gears and shafts to a main drive shaft, and they are driven by a 5-horsepower
motor at the back of the machine. When a counter position is supposed
<span class="pagenum" id="Page_94">[Pg 94]</span>
to step, a clutch connects the drive to the running gear, and the
counter position steps. When the counter position is supposed to
stay unchanged, the clutch is disconnected and the driving gear runs
free. In fact, when you first approach the Harvard machine, about the
first thing you are aware of is the running of these gears and the
intermittent whirring and clicking of the counter positions as they
step. The machine gives a fine impression of being busy!</p>

<div class="figcenter">
  <img id="FIG_6-6" src="images/i_094a.jpg" alt="" width="600" height="240" />
  <p class="f120"><span class="smcap">Fig. 6.</span> Scheme of counter 16.</p>
</div>

<h4>Timing Contacts</h4>

<p>A <i>button</i> (<a href="#FIG_7-6">see Fig. 7</a>) is a device for
closing an electric circuit when and only when you push it. A simple
example is the button for ringing a bell: you push the button, a
circuit is closed, and something happens. When you let go, the circuit
is opened. The Harvard machine has a button for starting, a button for
stopping, and many others.</p>

<div class="figcontainer">
  <div class="figsub">
   <img id="FIG_7-6" src="images/i_094b.jpg" alt="" width="225" height="327" />
   <p class="center"><span class="smcap">Fig. 7.</span> Button.</p>
  </div>
  <div class="figsub">
   <img id="FIG_8-6" src="images/i_094c.jpg" alt="" width="350" height="333" />
   <p class="center"><span class="smcap">Fig. 8.</span> Cam, with 5 lobes and contact.</p>
   </div>
</div>

<p><span class="pagenum" id="Page_95">[Pg 95]</span>
A <i>cam contact</i> (<a href="#FIG_8-6">see Fig. 8</a>) is an automatic
device for closing an electric circuit for just a short interval of
time. When the lobes on the cam strike the contact, it closes and
current flows. When the lobes have gone by, the spring pushes open the
contact, and no current flows. Just as a two-position relay is the
automatic equivalent of a two-position switch, and a ten-position relay
is the automatic equivalent of a ten-position switch, so a cam contact
is the automatic equivalent of a button.</p>

<p>All the cams in the machine have 20 pockets where small round metal
lobes may or may not be inserted. Each cam makes a full turn once in
³/₁₀ of a second and is in time with all the others. Thus we can time
all the electrical circuits in the machine in units of ³/₂₀₀ of a second.</p>

<h3>NUMBERS</h3>

<p>Numbers in the machine regularly consist of 23 decimal digits. The
24th numerical position at the left in any register contains only
0 for a positive number and only 9 for a negative number. <i>Nines
complements</i> (<a href="#SUPPL_2">see Supplement 2</a>) are used for negative
numbers. For example,-00284 is represented as 999715, supposing that we
had 5-digit numbers instead of 23-digit numbers. The sum of two
nines complements is automatically corrected so that it is still a
correct nines complement. The device that accomplishes this is called
<i>end-around-carry</i> (<a href="#SUPPL_2">see Supplement 2</a>). The decimal
point is fixed for each problem; in other words, in any problem, the decimal point
is consistently kept in one place, usually between the 15th and 16th
decimal columns from the right.</p>

<h3>HOW INFORMATION GOES<br />INTO THE MACHINE</h3>

<p>Numerical information may go into the machine in any one of 3 ways: (1)
by regular IBM punch cards, using standard IBM card feeds (panel 16);
(2) by hand-set dial switches (panels 1, 2); and (3) by long loops of
punched tape placed on the value tape feeds (panels 12 to 14). Three
sets of 24 columns each punched on a regular IBM punch card can be used
to send 3 numbers and their signs into the machine in one machine cycle.
<span class="pagenum" id="Page_96">[Pg 96]</span>
This is the fastest way for giving numbers to the machine, but the most
limited; for the cards must be referred to in order and can be referred
to automatically only once. Also, there is the risk that they may be
out of order. A card may be passed through the machine without reading;
this saves some sorting in preparing cards for the machine. Machines
for preparing the cards are regular IBM key punches, and machines for
sorting them after preparation are regular IBM card sorters.</p>

<p>In panels 1 and 2 there are 60 registers by which unchanging numbers
like 1, or 3.14159265···, or 7.65 may be put into the machine. These
are called the <i>constant registers</i>. Each constant register
consists of 24 dial switches and contains 23 digits and a sign, 0 if
positive and 9 if negative. Whenever the mathematician says a certain
constant is needed for a problem, the operator of the machine walks
over to these panels, and, while the machine is turned off, sets the
dial switches for the number, one by one, by hand. If we need 40
constants of 10 digits each for a problem, then the operator sets 400
dial switches by hand and makes certain that the remaining 14 switches
in each of the 40 constant registers used are either at 0 or 9,
depending on the sign of the number. Only then can he return to start
the machine.</p>

<div class="figcenter">
  <img id="FIG_9-6" src="images/i_096.jpg" alt="" width="500" height="215" />
  <p class="f120"><span class="smcap">Fig. 9.</span> Value tape code.</p>
</div>

<p>The third means by which numerical information can be put into the
machine is the <i>value tape feeds</i>, in panels 12, 13, and 14. Here
the machine can consult tables of numbers. The numbers are punched
on paper tape 24 holes wide, made of punch-card stock. Tapes for the
value tape feeds may be prepared by hand or by the machine itself
using punch cards or machine calculation. The tapes use equally spaced
<i>arguments</i> (<a href="#SUPPL_2">see Supplement 2</a>). The tape punch
changes the decimal digits in its keyboard into the following punching
code (<a href="#FIG_9-6">see Fig. 9</a>):</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdc">&nbsp;0&nbsp;</td>
      <td class="tdl">0000</td>
      <td class="tdc" rowspan="5"><span class="ws2">&nbsp;</span></td>
      <td class="tdc">&nbsp;5&nbsp;</td>
      <td class="tdl">1100</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl">1000</td>
      <td class="tdc">6</td>
      <td class="tdl">1010</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdl">0010</td>
      <td class="tdc">7</td>
      <td class="tdl">1001</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdl">0010</td>
      <td class="tdc">8</td>
      <td class="tdl">0110</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdl">0001</td>
      <td class="tdc">9</td>
      <td class="tdl">0101</td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_97">[Pg 97]</span>
Here the 1 denotes a punched hole and 0 no punched hole, and the 4
columns from left to right of the code correspond to 4 rows of the
paper tape from bottom to top. To make sure the value tape is correct,
the machine itself can read the value tape and check it mathematically
or compare it with punch-card values.</p>

<h3>HOW INFORMATION COMES<br />OUT OF THE MACHINE</h3>

<p>Information comes out of the machine in any one of three ways: (1) by
punching on IBM cards with a regular IBM card punch that is built into
the machine (panel 17), (2) by typing on paper sheets with electric
typewriters (panels 16 and 17), and (3) by punching paper tape 24 holes
wide of the same kind as is fed into the machine.</p>

<p>Usually, one of the electric typewriters is used to print a result for
a visual check and to print it before the machine makes a specified
check of the value. Then, about 10 seconds later, after the result has
been checked as specified in the machine, the checked result is printed
by the second typewriter. In the second typewriter, a special one-use
carbon ribbon of paper is used to produce copy for publication by a
photographic process.</p>

<p>The card punch writes a number more rapidly than an electric
typewriter. This extra speed is sometimes very useful. However, the
punch’s chief purpose is to record intermediate results on punch cards.
Then, if there is a machine failure, and if the problem has been well
organized, the problem may be run over from these intermediate results,
instead of requiring a return to the original starting information.
The tape punch used for preparing tape by hand can also be operated by
cable from the machine.</p>

<h3>HOW INFORMATION IS HANDLED<br />IN THE MACHINE</h3>

<p>The machine is a mechanical brain. So, between taking in information
and putting out information, the machine does some “thinking.” It
does this thinking according to instructions. The instructions go
into the machine as: (1) the setting of switches, or (2) the pressing
of buttons, or (3) the wiring of plugboards, or (4) feeding in tape
<span class="pagenum" id="Page_98">[Pg 98]</span>
punched with holes. The instructions are remembered in the machine in
these 4 ways, and we can call these sets of devices the control of the
machine.</p>

<p>To illustrate: One of the buttons pressed for every problem is the
Start Key: when you press it, the machine starts to work on the
problem. One of the switches with which you give instructions is
a switch that turns electric typewriter 1 on or off. One of the
plugboards contains some hubs by which you can tell the machine how
many figures to choose in the quotient when dividing, for clearly you
do not need a quotient of 23 figures every time the machine divides.
You can have 5 choices in any one problem; you can specify them by
plugging, and you can call for any one of 5 choices of quotient size
from time to time during the problem. In many cases, when we wish
the machine to do the same thing for all of a single problem and do
it whenever the occasion arises, we can put the instruction into the
wiring of a plugboard. We use plugboard wiring, for example, in fixing
the decimal point in multiplication, so that the product will read out
properly, and in guiding the operation of the typewriters, so that
printing will take place in the columns where we want it.</p>

<h4>Sequence of Steps</h4>

<p>The most important part of the control of the machine is the
<i>sequence-tape feed</i> and its <i>sequence-control tape</i>. These
tell the machine a great part of what operations are to be performed.</p>

<div class="figcenter">
  <img id="FIG_10-6" src="images/i_098.jpg" alt="" width="600" height="142" />
  <p class="f120"><span class="smcap">Fig. 10.</span> Sequence-control tape code.</p>
</div>

<p>At the end of the room where the machine is, there is the special tape
punch mentioned above. It holds a big spool of card stock that is thin,
flexible, smooth, and tough. With one keyboard we may prepare value
tape. With another keyboard we prepare the sequence-control tape. The
tape (<a href="#FIG_10-6">see Fig. 10</a>) contains places for 24 round punched holes
in each row. Some and only some of these holes are punched. Each row of punched
<span class="pagenum" id="Page_99">[Pg 99]</span>
holes is equivalent to an instruction to the machine and is called
a <i>line of coding</i> or <i>coding line</i>. In general, the
instruction has the form:</p>

<ul class="index fontsize_110">
<li class="isub3">Take a number out of Register <i>A</i>;</li>
<li class="isub4">put the number into Register <i>B</i>;</li>
<li class="isub4">and perform operation <i>C</i>.</li>
</ul>

<p>The first group of 8 holes at the left is called the <i>A field</i> or
the <i>out-field</i>. Here we tell the machine where a number is to be
taken from. The middle group of 8 holes is called the <i>B field</i>
or the <i>in-field</i>. Here we tell the machine where a number is to
be put. The last group of 8 holes is called the <i>C field</i> or the
<i>miscellaneous field</i>. Here we tell the machine part or all of the
operation that is to be performed.</p>

<p>To illustrate (<a href="#FIG_10-6">see Fig. 10</a>), we have holes
3, 2, 1 punched in the <i>A</i> field, holes 3, 2 punched in the
<i>B</i> field, and hole 7 punched in the <i>C</i> field. Now 321 is
the <i>code</i>—or machine language, or machine call number—for storage
counter 7; 32 is the code for storage counter 6; and 7 in the <i>C</i>
field is the code (in this case, and generally) for “Add, and read
the next line of coding.” So, if we punch out this line of coding and
put the tape on the machine, we tell the machine to read the number
in counter 7, add it into counter 6, and proceed to the next line of
coding and read that.</p>

<p>The holes in each group of 8 holes from left to right are numbered: 8,
7, 6, 5, 4, 3, 2, 1. The code 631, for example, means that holes 6, 3,
1 are punched and that no holes are punched at 8, 7, 5, 4, 2. Since it
is more natural, the code is read from left to right, or 631, instead
of from right to left in the sequence 136.</p>

<p>The devices in the machine have <i>in-codes</i>, used in the in-field,
and <i>out-codes</i>, used in the out-field. For each of the 72 regular
storage counters, the in-code and the out-code are the same. The first
8 storage counters have the codes 1, 2, 21, 3, 31, 32, 321, 4, 41; the
last 2 storage counters, the 71st and the 72nd, have the codes 7321, 74.</p>

<p>The constant registers—often called <i>constant switches</i>, or just
<i>switches</i>—naturally have only out-codes, since numbers can be
entered into the constant registers only by setting dial switches by
<span class="pagenum" id="Page_100">[Pg 100]</span>
hand. The first 8 constant registers have the out-codes 741, 742, 7421,
743, 7431, 7432, 74321, 75, and the 59th and 60th constant registers
have the out-codes 821, 83.</p>

<h4>Transferring, Adding, and Clearing</h4>

<p>Each storage counter has the property that any number transferred into
it is added into it. For example, the instruction</p>

<ul class="index fontsize_110">
<li class="isub3">Take the number in switch 741;</li>
<li class="isub4">transfer it into storage register 321</li>
</ul>

<p class="no-indent">is coded:</p>

<p class="f110">741, 321, 7</p>

<p class="no-indent">The 7 in the third column is an instruction to the
sequence-tape feed to turn up to the next coding line and read it. If
any number is already stored in register 321, the content of 741 will
be added to it, and the total will then be stored in 321.</p>

<p>Resetting or clearing a regular storage register is accomplished by a
coding that is a departure from the usual scheme of “out” and “in.” The
instruction</p>

<ul class="index fontsize_110">
<li class="isub3">Clear register 321;</li>
<li class="isub4">read the next coding line</li>
</ul>

<p class="no-indent">is coded:</p>

<p class="f110">321, 321, 7</p>

<p class="no-indent">Similarly, you can clear any other regular storage
register if you repeat its code in the out-and in-fields. However, a
few of the storage registers in the machine have special reset codes,
and these may occur in any of the three fields <i>A</i>, <i>B</i>,
<i>C</i>.</p>

<p>As the result of a recent modification of the machine, you can easily
double the number in any storage register. For example, the instruction</p>

<ul class="index fontsize_110">
<li class="isub3">Double the number in register 321;</li>
<li class="isub4">read the next coding line</li>
</ul>

<p class="no-indent">is coded:</p>

<p class="f110">321, 321, 743</p>

<h4>Subtracting</h4>

<p>If the number in switch 741 is to be subtracted from the number in
storage counter 321, the instruction is changed into:</p>

<ul class="index fontsize_110">
<li class="isub3">Take the negative of the number in switch 741;</li>
<li class="isub4">transfer it into storage register 321;</li>
<li class="isub4">read the next line of coding</li>
</ul>

<p class="no-indent"><span class="pagenum" id="Page_101">[Pg 101]</span>
The coding line becomes:</p>

<p class="f110">741, 321, 732</p>

<p class="no-indent">By putting 32 in the <i>C</i> field, we cause the number
in switch 741 to be subtracted from whatever number is in register 321.</p>

<p>We have 2 more choices in adding and subtracting. The value of the
number without regard to sign—in other words, its <i>absolute
value</i> (<a href="#SUPPL_2">see Supplement 2</a>)—may be added
or subtracted. The instruction</p>

<p class="f110">Add the absolute value of</p>

<p class="no-indent">is expressed by a <i>C</i> field code 2, and the instruction</p>

<p class="f110">Add the negative of the absolute value of</p>

<p class="no-indent">is expressed by a <i>C</i> field code 1.</p>

<h4>Multiplying</h4>

<p>When we wish to multiply one number by another and get a product, we
have 3 numbers. We tell the machine about each of these numbers on a
separate line of coding. Multiplication is signaled by sending a number
into the <i>multiplicand counter</i>. The multiplicand counter has an
in-code 761. If the multiplicand is in 321, the instruction is:</p>

<ul class="index fontsize_110">
<li class="isub3">Take the number in 321;</li>
<li class="isub4">enter it as multiplicand;</li>
<li class="isub4">read the next coding line</li>
</ul>

<p class="no-indent">The coding is:</p>

<p class="f110">321, 761, 7</p>

<p class="no-indent">On the third following coding line, the multiplier
is sent into the <i>multiplier counter</i>. If the multiplier is in
switch 741, the instruction is:</p>

<ul class="index fontsize_110">
<li class="isub3">Take the number in 741;</li>
<li class="isub4">enter it as multiplier;</li>
<li class="isub4">read the next coding line</li>
</ul>

<p class="no-indent">The coding is:</p>

<p class="f110">741, ——, 7</p>

<p class="no-indent">We do not punch anything in the middle field: the machine
is “educated” and “knows” that it has started a multiplication and needs a
<span class="pagenum" id="Page_102">[Pg 102]</span>
multiplier, and it expects this multiplier in the third coding line. To
have no code for the multiplier counter is, of course, a departure from
the general rule, but it saves some punching and permits the use of
this space for certain other codes, thus saving some operating time.</p>

<p>We need not confuse the 761 in-code for the multiplicand counter with
the 761 out-code, which happens to be the out-code of the 25th constant
register, because neither can occur in the other’s field. We may, of
course, use other registers besides 321 and 741 for supplying the
multiplicand and multiplier.</p>

<p>To get the product and put it into any storage counter <i>D</i>, we use
two lines of coding one right after the other:</p>

<p class="f110">——   ——  6421</p>
<p class="f110">8761    <i>D</i>    ——</p>

<p class="no-indent">The <i>product counter</i> has the out-code 8761.
When the product is desired, it is called for, transferred into counter
<i>D</i>, and the multiplication unit is automatically cleared. It
takes time, however, for the machine to perform a multiplication.
That is the reason for the preceding coding line and the 6421 in the
<i>C</i> field. While the multiplication is going on, we can instruct
the machine to do other things that we want done. We can insert or
<i>interpose</i> coding lines in between the multiplier line and the
product line. For example, if we have a multiplier of 10 digits, we
can insert 8 coding lines and maybe more. The 6421 code essentially
tells the machine to finish both the multiplication and the interposed
instructions, and, as soon as the later one of these two tasks is
finished, to transfer out the product to counter <i>D</i>.</p>

<p>Up to the middle of 1946, the wiring of the machine was a little
different and less convenient. When the product was obtained by the
multiplication unit, it had to be accepted and transferred at once into
one of the 72 storage registers.</p>

<h4>Dividing</h4>

<p>Division is called for by first sending the divisor into the <i>divisor
counter</i>, and this has a code 76 in the <i>B</i> field. If the
divisor is in counter 321, the instruction may be:</p>

<ul class="index fontsize_110">
<li class="isub3">Take the number in 321;</li>
<li class="isub4">enter it as divisor;</li>
<li class="isub4">read the next coding line</li>
</ul>

<p class="no-indent"><span class="pagenum" id="Page_103">[Pg 103]</span>
The coding will then be:</p>

<p class="f110">321, 76, 7</p>

<p class="no-indent">Three coding lines later, the dividend is called
for, and the coding, if the dividend is in switch 7431, is:</p>

<p class="f110">7431, ——, 7</p>

<p class="no-indent">We can send the quotient, when ready, into any
desired counter <i>Q</i> by the following two lines of coding:</p>

<p class="f110">——  ——  642</p>
<p class="f110">876       <i>Q</i>    ——</p>

<p class="no-indent">In the same way as with multiplication, we can
insert a number of coding lines in between the dividend line and the
first quotient line.</p>

<p>Both multiplication and division are carried out in the same unit
of the machine, the <i>multiply-divide unit</i>. The machine first
constructs a table of the multiples of the multiplicand or divisor:
1 times, 2 times, 3 times, ···, 9 times. In multiplication this
table is then used by selecting multiples according to the digits of
the multiplier one after another. In division the table is used by
comparing multiples of the divisor against the dividend and successive
remainders, finding which will go and which will not. Since the numbers
in the machine are normally of 15 to 23 digits, any particular multiple
will be used, on the average, several times, and so this process is
relatively efficient. Actually the multiplicand and the divisor go into
the same counter. Division, however, has the code 76 and multiplication
the code 761, and so the difference is essentially an operation code
not in the third or <i>C</i> field.</p>

<h4>Consulting a Table</h4>

<p>When we desire the machine to consult a table of values (i.e., a
<i>function</i>—<a href="#SUPPL_2">see Supplement 2</a>), we punch
the table with its arguments and function values on a tape, and we put
the tape on a value tape feed mechanism. The instruction to the machine
may be:</p>

<ul class="index fontsize_110">
<li class="isub3">Take the number in register <i>A</i>;</li>
<li class="isub4">find the value of the function for this number,</li>
<li class="isub4">and enter it in register <i>B</i>.</li>
</ul>

<p class="no-indent"><span class="pagenum" id="Page_104">[Pg 104]</span>
The coding is:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc_ws1">——</td>
      <td class="tdc_ws1">——</td>
      <td class="tdr_ws1">73</td>
   </tr><tr>
      <td class="tdc_ws1"><i>A</i></td>
      <td class="tdc_ws1">7654</td>
      <td class="tdr_ws1">61</td>
   </tr><tr>
      <td class="tdc_ws1">——</td>
      <td class="tdc_ws1">——</td>
      <td class="tdr_ws1">762</td>
   </tr><tr>
      <td class="tdc_ws1">——</td>
      <td class="tdc_ws1">——</td>
      <td class="tdr_ws1">543</td>
   </tr><tr>
      <td class="tdc_ws1">——</td>
      <td class="tdc_ws1">——</td>
      <td class="tdr_ws1">75431</td>
   </tr><tr>
      <td class="tdc_ws1">841</td>
      <td class="tdc_ws1">7654</td>
      <td class="tdr_ws1">——</td>
   </tr><tr>
      <td class="tdc_ws1"><i>A</i></td>
      <td class="tdc_ws1">763</td>
      <td class="tdr_ws1">6421</td>
   </tr><tr>
      <td class="tdc_ws1">8762</td>
      <td class="tdc_ws1"><i>B</i></td>
      <td class="tdr_ws1">73</td>
   </tr><tr>
      <td class="tdc_ws1">——</td>
      <td class="tdc_ws1">8763</td>
      <td class="tdr_ws1">7</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Without explaining this coding line by line,
we can say that this is what happens:</p>

<div class="blockquot">
<p class="neg-indent">The machine reads the argument in register
<i>A</i>. The machine reads the argument in the table at which the
value tape feed is resting.</p>

<p class="neg-indent">It subtracts them, and thereby determines how far
away the desired argument is.</p>

<p class="neg-indent">The machine then turns the tape that required
distance.</p>

<p class="neg-indent">It checks that the new argument is the wanted
argument.</p>

<p class="neg-indent">It reads the value of the function entered at that
point on the function tape.</p>
</div>

<h4>Selecting</h4>

<p>There is a storage counter in the machine that is called the
<i>selection counter</i>. The selection counter is counter 70 and
has the code 732. It has all the properties of an ordinary storage
counter and, in addition, one extra property: depending on the sign of
the number stored in the selection counter, it is possible to select
whether some other number shall be treated positively or negatively.
In other words, addition of a number anywhere in the machine may take
place either positively or negatively, if the number stored in the
selection counter is positive or negative, respectively.</p>

<p>For example, suppose that <i>x</i> is the number in the selection
counter. Suppose that <i>y</i> is the number in some other counter
<i>A</i>. Suppose that <i>z</i> is the number in counter <i>B</i>.
Suppose that we use the coding:</p>

<p class="f110"><i>A</i>, <i>B</i>, 7432</p>

<p class="no-indent"><span class="pagenum" id="Page_105">[Pg 105]</span>
What we get in <i>B</i>, because of the 7432 in the third or <i>C</i>
field, is <i>z</i> plus <i>y</i> if <i>x</i> is positive or zero, and
<i>z</i> minus <i>y</i> if <i>x</i> is negative. In the language of the
algebra of logic (see <a href="#CHAPTER_9">Chapter 9</a> and
<a href="#SUPPL_2">Supplement 2</a>), where <i>T</i>( ...) is “the
truth value of ...,” the number in <i>b</i> equals:</p>

<p class="f120"><i>z</i> + <i>y</i>·<i>T</i>(<i>x</i> ≥ 0) - <i>y</i>·<i>T</i>(<i>x</i> &lt; 0)</p>

<p class="no-indent">(The nines complement of 0, namely 999···9 to 24
digits, is treated by the machine as negative.)</p>

<p>Why do we need an operation like this in a mechanical brain? Among
other reasons, what we want to do with a number, in mathematics, often
depends on its sign. It may happen that a table is, for negative
arguments, the negative of what it is for positive arguments; in other
words, <big><i>F</i>(-<i>x</i>) =-<i>F</i>(<i>x</i>)</big>. This is true, for
instance, for a table of <i>cubes</i> <big>{<i>F</i>(<i>x</i>) = <i>x</i>³}</big>
or for a table of <i>trigonometric tangents</i> (<a href="#SUPPL_2">see Supplement 2</a>).
If so, we certainly do not want to take the time and trouble to list the
whole table. We put down only half the table and then, if <i>x</i> is
negative, use the negative of the value in the table. In order to apply
such a time-saving rule when using the machine, we need the selection
counter or its equivalent.</p>

<h4>Checking</h4>

<p>There is another special counter in the machine that is called the
<i>check counter</i>. It also has all the properties of an ordinary
storage counter and, in addition, one extra property: If the sign of
the number stored in the check counter on a certain coding line is
negative, then on the next coding line the machine may be stopped. In
other words, suppose that the check counter stores a certain tolerance
<i>t</i>. Suppose, under the instructions we give the machine, that
it calculates a positive number <i>x</i> that ought to be less than
this tolerance. Suppose that something may go wrong and that <i>x</i>
actually may be greater than <i>t</i>. Then we put a check into our
instructions. We tell the machine:</p>

<ul class="index fontsize_110">
<li class="isub3">When you have found <i>x</i>, subtract it from <i>t</i>.</li>
<li class="isub4">If the result is positive, go ahead.</li>
<li class="isub4">If the result is negative or zero, <i>stop</i>!</li>
</ul>

<p><span class="pagenum" id="Page_106">[Pg 106]</span>
Here is the coding. Suppose that the tolerance <i>t</i> is in switch
751. Suppose that the number <i>x</i> to be checked is in counter 4321.
Then the instructions and coding are:</p>

<table class="fontsize_110 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdl">Clear the check counter</td>
      <td class="tdr_ws1">—</td>
      <td class="tdr_ws1">—</td>
      <td class="tdr">7</td>
   </tr><tr>
      <td class="tdl">Put in the tolerance, from switch 751</td>
      <td class="tdr_ws1">751</td>
      <td class="tdr_ws1">74</td>
      <td class="tdr">7</td>
   </tr><tr>
      <td class="tdl">Subtract the absolute value of the number to be checked&nbsp;&nbsp;</td>
      <td class="tdr_ws1">4321</td>
      <td class="tdr_ws1">74</td>
      <td class="tdr">71</td>
   </tr><tr>
      <td class="tdl">Stop, O Mechanical Brain, if your result be negative!</td>
      <td class="tdr_ws1">—</td>
      <td class="tdr_ws1">—</td>
      <td class="tdr">64</td>
   </tr>
 </tbody>
</table>

<p>An operation like this is very useful in a mechanical brain. It
enables the calculation to be interrupted if something has gone
wrong. Of course, other operations of checking besides this one are
used—for example, inspecting for reasonableness the results printed on
typewriter 1.</p>

<h4>Other Operations</h4>

<p>There are other operations in the machine. There are two pairs of
storage registers that can be <i>coupled</i> together so that we can
handle problems requiring numbers of 46 digits instead of 23. Registers
64 and 65 can be coupled, and registers 68 and 69 can be coupled. There
is another storage counter, No. 71, that has an extra property. We can
read out the number it holds times 1, or times 10¹², or times 10⁻¹²,
as may be called for. As a result of this counter, we can do problems
requiring 144 registers storing numbers of 11 digits each, instead of
72 registers storing 23 digits each. Bigger statistical problems can be
handled, for example.</p>

<p>There are some minor sequences of operations, or <i>subroutines</i>,
that can be called for by a single code. The subroutine may be a
whole set of additions, subtractions, multiplications, divisions,
and choices, having a single purpose: to compute some number by a
<i>process of rapid approximation</i> (<a href="#SUPPL_2">see Supplement 2</a>).
There are built-in subroutines for some special mathematical functions: the
<i>logarithm</i> of a number to the base 10, the <i>exponential</i>
of a number to the base 10, and the <i>sine</i> of a number.
(<a href="#SUPPL_2">See Supplement 2</a>.)</p>

<p>There are also 10 changeable subroutines, each of 22 coding lines,
which can be called in, when wanted, by the main sequence-control tape
or by each other. These subroutines constitute the Subsidiary Sequence
<span class="pagenum" id="Page_107">[Pg 107]</span>
Mechanism, and are extremely useful. They have <i>A</i>, <i>B</i>,
and <i>C</i> fields just like the main sequence-control, but they are
given information by plugging with short lengths of wire instead of by
feeding punched paper tape.</p>

<h3>RAPID APPROXIMATION FOR A LOGARITHM</h3>

<p>Up to this point in this chapter the author has tried to tell the facts
about the Harvard machine in plain words. But for reading this section,
a little knowledge of calculus is necessary. (<a href="#SUPPL_2">See also Supplement 2</a>.)
If you wish, skip this section and go on to the next one.</p>

<p>What is the process that the machine uses to compute any desired
logarithm to 23 digits? Suppose that we take for an example the process
by which the machine computes log<sub>10</sub> 49.3724. We choose a 6-digit
number for simplicity; the machine would handle a 23-digit number in
the same way. The process uses 2 fundamental equations involving the
logarithm: the sum relation</p>

<p class="f120">log (<i>a</i>·<i>b</i>·<i>c</i>···) = log <i>a</i> + log <i>b</i> + log <i>c</i>···</p>

<p class="no-indent">and the series relation</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdl" rowspan="2">logₑ(1 + <i>h</i>) = <i>h</i> -&nbsp;</td>
      <td class="tdc bb"><i>h</i>²</td>
      <td class="tdl" rowspan="2">+</td>
      <td class="tdc bb"><i>h</i>³</td>
      <td class="tdl" rowspan="2">-</td>
      <td class="tdc bb"><i>h</i>⁴</td>
      <td class="tdl" rowspan="2">&nbsp;+ ···, │<i>h</i>│ &lt; 1</td>
   </tr><tr>

      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdc">4</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The error in this series is less than the first neglected term. Now,
the machine stores the base 10 logarithms (to 23 decimal places) of the
following 36 numbers:</p>

<table class="fontsize_110 no-wrap" border="0" cellspacing="4" summary=" " cellpadding="4" >
  <tbody><tr>
      <td class="tdc">1</td>
      <td class="tdc">1.1</td>
      <td class="tdc">1.01</td>
      <td class="tdc">1.001</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc">1.2</td>
      <td class="tdc">1.02</td>
      <td class="tdc">1.002</td>
   </tr><tr>
      <td class="tdc">...</td>
      <td class="tdc">...</td>
      <td class="tdc">...</td>
      <td class="tdc">...</td>
   </tr><tr>
      <td class="tdc">9</td>
      <td class="tdc">1.9</td>
      <td class="tdc">1.09</td>
      <td class="tdc">1.009</td>
   </tr>
 </tbody>
</table>

<p>First, the number 49.3724 is examined in a counter called the
<i>Logarithm-In-Out counter</i>, and the position of the decimal point
is determined, giving the <i>characteristic</i> of the logarithm. The
number 49.3724 has the characteristic 1. Next, 4 successive divisions
are performed, in which the 4 divisors are (1) the first digit of the
number, (2) the first 2 digits of the quotient, (3) the first 3 digits
of the next quotient, and (4) the first 4 digits of the subsequent
quotient; thus,
<span class="pagenum" id="Page_108">[Pg 108]</span></p>

<table class="fontsize_110 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdc bb">4.93724</td>
      <td class="tdc" rowspan="2">&nbsp;= 1.23431</td>
   </tr><tr>
      <td class="tdc">4</td>
   </tr><tr>
      <td class="tdc bb">1.23431</td>
      <td class="tdc" rowspan="2">&nbsp;= 1.02860</td>
   </tr><tr>
      <td class="tdc">1.2</td>
   </tr><tr>
      <td class="tdc bb">1.02860</td>
      <td class="tdc" rowspan="2">&nbsp;= 1.00843</td>
   </tr><tr>
      <td class="tdc">1.02</td>
   </tr><tr>
      <td class="tdc bb">1.00843</td>
      <td class="tdc" rowspan="2">&nbsp;= 1.00043</td>
   </tr><tr>
      <td class="tdc">1.008</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">For simplicity we have kept only 6 digits,
although the machine, of course, would keep 23. It is interesting to
note that the machine is able to sense digits and thus determine the 4
divisors; this is an arithmetical and numerical process and one that
cannot be done in ordinary algebra. We now have:</p>

<p class="f120 no-wrap">log₁₀ 49.3724 = 1 + log₁₀ 4 + log₁₀ 1.2 + log₁₀ 1.02<br />
<span class="ws6">+ log₁₀ 1.008 + log₁₀ 1.00043</span></p>

<p class="no-indent">To compute log₁₀ 1.00043 to 21 decimals we use</p>

<table class="fontsize_110 no-wrap" border="0" cellspacing="4" summary=" " cellpadding="4" >
  <tbody><tr>
      <td class="tdl" rowspan="2">log₁₀<i>e</i> ·</td>
      <td class="tdl" rowspan="2"><img src="images/l_paren.jpg" alt="" width="20" height="66" /></td>
      <td class="tdl" rowspan="2"><i>h</i> -</td>
      <td class="tdc bb"><i>h</i>²</td>
      <td class="tdc" rowspan="2">&nbsp;+&nbsp;</td>
      <td class="tdc bb"><i>h</i>³</td>
      <td class="tdc" rowspan="2">&nbsp;-&nbsp;</td>
      <td class="tdc bb"><i>h</i>⁴</td>
      <td class="tdc" rowspan="2">&nbsp;+&nbsp;</td>
      <td class="tdc bb"><i>h</i>⁵</td>
      <td class="tdc" rowspan="2">&nbsp;-&nbsp;</td>
      <td class="tdc bb"><i>h</i>⁶</td>
      <td class="tdc" rowspan="2"><img src="images/r_paren.jpg" alt="" width="20" height="65" /></td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc">3</td>
      <td class="tdc">4</td>
      <td class="tdc">5</td>
      <td class="tdc">6</td>
   </tr>
</tbody>
</table>

<p class="no-indent">with <i>h</i> = 0.00043. Only 6 terms of the
series relation are needed. For, the error is less than <big><i>h</i>⁷/7</big>,
which is less than <big>10⁻²¹/7</big>, since <big><i>h</i> &lt; ¹/₁₀₀₀</big>. The machine
uses the series relation in the form</p>

<p class="f120 no-wrap">log₁₀ (1 + <i>h</i>) = <big>{([{(</big><i>c</i>₆<i>h</i> + <i>c</i>₅<big>)</big>
<i>h</i> + <i>c</i>₄<big>}</big><i>h</i> + <i>c</i>₃<big>]</big><i>h</i> +
<i>c</i>₂<big>)</big><i>h</i> + <i>c</i>₁<big>}</big><i>h</i></p>

<p class="no-indent">where</p>

<p class="f120 no-wrap"><i>c</i>₁ = <i>M</i>, <i>c</i>₂ = -<i>M</i>/2, <i>c</i>₃ = <i>M</i>/3, ···,</p>

<p class="no-indent">and <span class="fontsize_120"><i>M</i> = log₁₀_<i>e</i>= 0.434294···.</span></p>

<p class="no-indent">The 6 values of the <i>c</i>’s are also stored
in the machine. When any logarithm is to be computed, the sum of the
characteristic, of the 4 logarithms of the successive divisors, and
of the first 6 terms of the series relation gives the logarithm. The
maximum time required is 90 seconds.</p>

<h3>AN APPRAISAL OF THE CALCULATOR</h3>

<p>The IBM Automatic Sequence-Controlled Calculator at Harvard is a
<span class="pagenum" id="Page_109">[Pg 109]</span>
landmark in the development of machines that think. Its capacity for
many problems for which it is suited is far beyond the capacity of a
hundred human computers.</p>

<h4>Speed</h4>

<p>The time required in the machine for adding, subtracting, transferring,
or clearing numbers is ³/₁₀ of a second. This is the time of one
machine cycle or of reading one coding line. Multiplication takes at
the most 6 seconds, and an average of 4 seconds. Division takes at the
most 16 seconds, and an average of 11 seconds. Each, however, requires
only 3 lines of coding, or ⁹/₁₀ of a second’s attention from the
sequence mechanism; interposed operations fill the rest of the time.
To calculate a logarithm, an exponential, or a sine to the full number
of digits obtainable by means of the automatic subroutine takes at
the most 90, 66, and 60 seconds, respectively. To get three 24-digit
numbers from feeding a punch card takes ⅓ second. To punch a number
takes from ½ second up to 3 seconds. To print a number takes from 1½
seconds up to 7 seconds.</p>

<h4>Cost and Value</h4>

<p>The cost of the machine was somewhere near 3 or 4 hundred thousand
dollars, if we leave out some of the cost of research and development,
which would have been done whether or not this particular machine had
ever been built. A staff of 10 men, consisting of 4 mathematicians,
4 operators, and 2 maintenance men, are needed to keep the machine
running 24 hours a day. This might represent, if capitalized, another
1 or 2 hundred thousand dollars. If a capital value of $500,000 is
taken as equivalent to $50,000 a year, then the cost of the machine in
operation 24 hours a day is in the neighborhood of $150 a day or $6 an hour.</p>

<p>The value of the machine, however, is very much greater. If 100 human
beings with desk calculators were set to work 8 hours a day at $1.50 an
hour, the cost would be $1200 a day, or 8 times as much. Yet it is very
doubtful that the work they could produce would equal that turned out
by the machine, either in quality or quantity, when the machine is well
suited to the problem.
<span class="pagenum" id="Page_110">[Pg 110]</span></p>

<h4>Reliability</h4>

<p>By reliability we mean the extent to which the results produced by the
machine can be relied on to be right. The machine contains no built-in
device for making its operations reliable. So, if we wish to check a
multiplication, for example, we can do the multiplication a second
time, interchanging the multiplier and the multiplicand. But if, say,
digit 16 of the product were not transferring correctly, we would get
the same wrong result both ways and we would not have a sufficient
check. Thus, when we set up a problem for the machine to do, one of the
big tasks we have is checking. We have to work out ways of making sure
that the result, when we get it, is right and ways of instructing the
machine to make the tests we want. This is not a new task. Whenever
you or I set out to solve a problem, we have to make sure—usually by
doing the problem twice, and preferably by doing it a different way the
second time—that our answer, when we get it, is correct. One of the
chief tasks for the mathematician, in making a sequence-control tape
for the machine, is to put into it sufficient checks to make sure that
the results are correct.</p>

<p>We can use a number of different kinds of partial checks: the check
counter; <i>differences</i>, and <i>smoothness</i> (<a href="#SUPPL_2">see Supplement 2</a>);
watching the results printed on typewriter 1; mathematical checks;
comparison with known specific values; etc.</p>

<p>In actual experience on the machine, human failures, such as failure
to state the problem exactly or failure to put it on the machine
correctly, have given about as much trouble as mechanical failures. The
machine operates without mechanical failure about 90 to 95 per cent
of the time. The balance of the time the machine is idle while being
serviced or repaired. The machine is serviced by mechanics trained and
supervised at Harvard.</p>

<p>Often when we change the machine from one problem to another problem,
we find some kind of trouble. Consequently, we need to work out in
detail the first part of any calculation placed on the machine. We
then compare the results step by step with the results produced by the
machine. Any mathematician working with the machine needs considerable
<span class="pagenum" id="Page_111">[Pg 111]</span>
training in order to diagnose trouble quickly and guide the maintenance
men to the place where repair or replacement is needed. Once you find
the trouble, you can fix it easily. Without disturbing the soldered
connections, you can easily pull out from its socket a relay that is
misbehaving and plug in a new relay. With a screwdriver you can change
a counter position—detach it from its socket and replace it by another
one that is working correctly.</p>

<p>One “bug” that will long be remembered around the Laboratory was a case
involving a 5 that would incorrectly come in to a number every now
and then. It did not happen often—only once in a while. After a week
of search the bug was finally located: the insulation on a wire that
carried a 5 had worn through in one spot, and once in a while this wire
would shake against a post that could carry current and took in the 5!</p>

<h4>Efficiency</h4>

<p>In many respects, this machine is efficient and well-balanced. Its
reading and writing speed is close to its calculating speed. We can
punch or print a result on the average for every 10 additions or 1½
multiplications. The memory of 72 numbers in the machine is extremely
useful; a smaller memory is a serious limitation on the achievements of
a computing machine. The machine can do many kinds of arithmetic and
logic. It is well educated and can compute automatically some rather
complicated mathematical functions, like logarithm or sine. It has done
difficult and important problems. It has computed and tabulated
(<a href="#SUPPL_2">see Supplement 2</a>) <i>Bessel functions</i>,
<i>definite integrals</i>, etc. It can solve <i>differential
equations</i> (<a href="#CHAPTER_5">see Chapter 5</a>) and many other
problems in mathematics, physics, and engineering.</p>

<p>On the other hand, no calculator will ever again be built just like
this one, useful though it is. Electronic computing is easily 100 times
as fast as relay computing; nearly every future calculator will do
its computing electronically. Many other improvements will be made.
For example, in this calculator, there are 72 addition-subtraction
mechanisms, yet only one of these can be used at a time. Also, the
machine has only one combined multiply-divide unit. So we have to
<span class="pagenum" id="Page_112">[Pg 112]</span>
organize any computation with few multiplications, and with still fewer
divisions, for they take longer still.</p>

<p>Until 1947, we had to organize any computation in this calculator into
one single fixed sequence of operations. In other words, there was
no way to move from one subroutine to another subroutine depending
on some indication that turned up in our computation. Recently, the
Harvard Computation Laboratory decided to remedy this condition and
provided the Subsidiary Sequence Mechanism equivalent to 10 subroutines
of 22 lines of coding each. These are on relays and plug wires and
may be called for by the sequence-control tape or by each other. This
provision has added greatly to the efficiency of the calculator.</p>

<p>Whatever else can be said about the Harvard IBM Automatic
Sequence-Controlled Calculator, it must be said that this was the first
general-purpose mechanical brain using numbers in digit form and able
to do arithmetic and logic in hundreds of thousands of steps one after
another. And great credit must go to Professor Howard H. Aiken of
Harvard and the men of International Business Machines Corporation who
made this great mechanical brain come into existence.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_113">[Pg 113]</span></p>
<h2 class="nobreak" id="CHAPTER_7">Chapter 7<br />
<span class="h_subtitle">SPEED—5000 ADDITIONS A SECOND:<br />
MOORE SCHOOL’S <b>ENIAC</b><br />
ELECTRONIC NUMERICAL INTEGRATOR AND CALCULATOR</span></h2>
</div>

<p>Another of the giant brains that has begun to work is named
<i>ENIAC</i>. This name comes from the initial letters of the full
name, <i>Electronic Numerical Integrator and Calculator</i>. Eniac was
born in 1942 at the Moore School of Electrical Engineering, of the
University of Pennsylvania, in Philadelphia. Eniac’s father was the
Ordnance Department of the U. S. Army, which provided the funds to feed
and rear the prodigy.</p>

<p>In the short space of four years, Eniac grew to maturity, and in
February 1946 he began to earn his own living by electronic thinking.
Eniac promptly set several world’s records. He was the first giant
brain to use electronic tubes for calculating. He was the first one to
reach the speed of 5000 additions a second. He was the first piece of
electronic apparatus containing as many as 18,000 electronic tubes all
functioning together successfully. As soon as Eniac started thinking,
he promptly made relay calculators obsolete from the scientific point
of view, for they have a top speed of perhaps 10 additions a second.</p>

<p>At the age of 5, he moved to Maryland at a cost of about $90,000, and
his permanent home is now the Ballistic Research Laboratories at the U.
S. Army’s Proving Ground at Aberdeen, Md.</p>

<h3>ORIGIN AND DEVELOPMENT</h3>

<p>In the Department of Terrestrial Magnetism in the Carnegie Institution
<span class="pagenum" id="Page_114">[Pg 114]</span>
of Washington, a great deal of information about the earth is studied.
Many kinds of physical observations are there gathered and analyzed:
electricity in the atmosphere, magnetism in the earth, and the weather,
for example. In 1941, a physicist, Dr. John W. Mauchly, was thinking
about the great mass of numerical information they had to handle. He
became convinced that much swifter ways of handling these numbers were
needed. He was certain electronic devices could be used for computing
at very high speeds, yet he found no one busy applying electronics in
this field. With hopes of finding some way of developing electronic
computing, he joined the staff of the Moore School of Electrical
Engineering in the autumn of 1941.</p>

<p>The Moore School in 1934 and 1935 had built a differential analyzer;
and, from that time on, the school had made a number of improvements
in it. In 1941, with war imminent, the differential analyzer was put
hard at work calculating tables for the Army’s Ballistic Research
Laboratories. These tables were mostly firing tables, tables of the
paths along which projectiles travel when fired—<i>trajectories</i>;
obviously, you cannot fire a gun usefully, unless you know how to aim
it. The amount of calculation of trajectories was so huge that Dr.
Mauchly suggested that a machine using electronic tubes be constructed
to calculate them. A good deal of discussion took place between men at
the Moore School, men at the Ballistic Research Laboratories, and men
from the Ordnance Department in Washington. A contract for research
into an electronic trajectory computer was concluded with the Ordnance
Department of the U. S. Army. Mauchly and one of the young electronics
engineers studying at Moore School, J. Presper Eckert, Jr., set to work
on the design.</p>

<p>Gradually the design of a machine took form, and the crucial
experiments on equipment were completed. In 1943, the design was
settled as a special-purpose machine to calculate trajectories. Later
on, the group modified the plans here and there to enable the machine
to calculate a very wide class of problems. A group of Moore School
electronics engineers and technicians during 1944 and 1945 built the
machine, using as much as possible standard radio tubes and parts.
Here, again, in spite of the successful progress of the electronic
machine, the rumor that it was a “white elephant” was allowed to spread
in order to protect the work from prying enemy ears.
<span class="pagenum" id="Page_115">[Pg 115]</span></p>

<h3>GENERAL ORGANIZATION</h3>

<p>The main part of Eniac consists of 42 <i>panels</i>, which are placed
along the sides of a square U. Each of these panels is 9 feet high, 2
feet wide, and 1 foot thick. They are of sheet steel, painted black,
with switches, lights, etc., mounted on them. At the tops of all the
panels are air ducts for drawing off the hot air around the tubes.
Large motors and fans above the machine suck the heated air away
through the ducts. There are also 5 pieces of equipment which can be
rolled from place to place and are called <i>portable</i>, but there
is no choice as to where they can be plugged in. We shall call this
equipment panels 43 to 47.</p>

<h4>Panels</h4>

<p>Now what are these panels, and what do they do? Each panel is an
assembly of some equipment. The names of the panels are shown in the
accompanying table. The arrangement of Eniac at the Ballistic Research
Laboratories as shown in the table is slightly different from the
arrangement of Eniac at Moore School.</p>

<p class="f150"><b>NAMES OF PANELS OF ENIAC</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Panel<br /> No.</span></th>
      <th class="tdc"><span class="smcap">Name<br />
                 (and additional names in some cases)</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Initiating Unit</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdl_ws1">Cycling Unit</td>
   </tr><tr>
      <td class="tdc">3, 4</td>
      <td class="tdl_ws1">Master Programmer, panels 1, 2</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdl_ws1">Accumulator 1</td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdl_ws1">Accumulator 2</td>
   </tr><tr>
      <td class="tdc">7</td>
      <td class="tdl_ws1">Accumulator 3</td>
   </tr><tr>
      <td class="tdc">8</td>
      <td class="tdl_ws1">Accumulator 4 (Quotient)</td>
   </tr><tr>
      <td class="tdc">9</td>
      <td class="tdl_ws1">Divider-Square-Rooter</td>
   </tr><tr>
      <td class="tdc">10</td>
      <td class="tdl_ws1">Accumulator 5 (Numerator I)</td>
   </tr><tr>
      <td class="tdc">11</td>
      <td class="tdl_ws1">Accumulator 6 (Numerator II)</td>
   </tr><tr>
      <td class="tdc">12</td>
      <td class="tdl_ws1">Accumulator 7 (Denominator—Square Root I)</td>
   </tr><tr>
      <td class="tdc">13</td>
      <td class="tdl_ws1">Accumulator 8 (Denominator—Square Root II)</td>
   </tr><tr>
      <td class="tdc">14</td>
      <td class="tdl_ws1">Accumulator 9 (Shift I)</td>
   </tr><tr>
      <td class="tdc">15</td>
      <td class="tdl_ws1">Accumulator 10 (Shift II)</td>
   </tr><tr>
      <td class="tdc">16</td>
      <td class="tdl_ws1">Blank panel for new unit (Converter)</td>
   </tr><tr>
      <td class="tdc">17</td>
      <td class="tdl_ws1">Accumulator 11 (Multiplier)</td>
   </tr><tr>
      <td class="tdc">18</td>
      <td class="tdl_ws1">Accumulator 12 (Multiplicand)</td>
   </tr><tr>
      <td class="tdc">19-21</td>
      <td class="tdl_ws1">Multiplier, panels 1, 2, 3</td>
   </tr><tr>
      <td class="tdc">22<span class="pagenum" id="Page_116">[Pg 116]</span></td>
      <td class="tdl_ws1">Accumulator 13 (Left-Hand Partial Products I)</td>
   </tr><tr>
      <td class="tdc">23</td>
      <td class="tdl_ws1">Accumulator 14 (Left-Hand Partial Products II)</td>
   </tr><tr>
      <td class="tdc">24</td>
      <td class="tdl_ws1">Accumulator 15 (Right-Hand Products I)</td>
   </tr><tr>
      <td class="tdc">25</td>
      <td class="tdl_ws1">Accumulator 16 (Right-Hand Products II)</td>
   </tr><tr>
      <td class="tdc">26</td>
      <td class="tdl_ws1">Blank panel for new unit (100 Registers)</td>
   </tr><tr>
      <td class="tdc">27</td>
      <td class="tdl_ws1">Accumulator 17</td>
   </tr><tr>
      <td class="tdc">28</td>
      <td class="tdl_ws1">Accumulator 18</td>
   </tr><tr>
      <td class="tdc">29</td>
      <td class="tdl_ws1">Accumulator 19</td>
   </tr><tr>
      <td class="tdc">30</td>
      <td class="tdl_ws1">Accumulator 20</td>
   </tr><tr>
      <td class="tdc">31, 32</td>
      <td class="tdl_ws1">Function Table 1, panels 1, 2</td>
   </tr><tr>
      <td class="tdc">33, 34</td>
      <td class="tdl_ws1">Function Table 2, panels 1, 2</td>
   </tr><tr>
      <td class="tdc">35, 36</td>
      <td class="tdl_ws1">Function Table 3, panels 1, 2</td>
   </tr><tr>
      <td class="tdc">37-39</td>
      <td class="tdl_ws1">Constant Transmitter, panels 1, 2, 3</td>
   </tr><tr>
      <td class="tdc">40-42</td>
      <td class="tdl_ws1">Printer, panels 1, 2, 3</td>
   </tr><tr>
      <td class="tdc">43-45</td>
      <td class="tdl_ws1">Portable Function Tables <i>A</i>, <i>B</i>, and <i>C</i></td>
   </tr><tr>
      <td class="tdc">46</td>
      <td class="tdl_ws1">IBM Card Reader</td>
   </tr><tr>
      <td class="tdc">47</td>
      <td class="tdl_ws1">IBM Summary Punch</td>
   </tr>
 </tbody>
</table>

<div class="blockquot">
   <p class="neg-indent"><i>Note</i>: The accumulators from which a number can be sent
                         to the printer are now accumulators 1, 2, and 15 to 20.</p>
</div>

<p>In reading over the table, we find a number of words that need
explaining. Some of the explanation we can give in the summary of the
units of Eniac:</p>

<p class="f150"><b>SUMMARY OF UNITS OF ENIAC</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Quantity</span></th>
      <th class="tdc"><span class="smcap">Device</span></th>
      <th class="tdc"><span class="smcap">Significance</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">20</td>
      <td class="tdl_ws1">Accumulators</td>
      <td class="tdl_ws1">Store, add, and subtract numbers</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Multiplier</td>
      <td class="tdl_ws1">Multiplies</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Divider-Square-Rooter</td>
      <td class="tdl_ws1">Divides, and obtains twice the <i>square root</i></td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;of a number (<a href="#SUPPL_2">see Supplement 2</a>)</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdl_ws1">Function Tables</td>
      <td class="tdl_ws1">Part of the memory, for referring to</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;tables of numbers</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Constant Transmitter</td>
      <td class="tdl_ws1">Stores numbers from the card reader and</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;from hand-set switches</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Printer</td>
      <td class="tdl_ws1">Punches machine results into cards</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Cycling Unit</td>
      <td class="tdl_ws1">Controls the timing of the various parts</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;of the machine</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Initiating Unit</td>
      <td class="tdl_ws1">Has controls for starting a calculation,</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;for clearing, etc.</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdl_ws1">Master Programmer</td>
      <td class="tdl_ws1">Holds the chief controls for coordinating</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;the various parts of the machine</td>
   </tr>
 </tbody>
</table>

<p>An <i>accumulator</i> is a storage counter. It can hold a number; it
can clear a number; it can transmit a number either positively or
<span class="pagenum" id="Page_117">[Pg 117]</span>
negatively; and it can receive a number by adding the number in and
thus holding the sum of what it held before and the number received.
Eniac when first built had only 20 accumulators, and so it could
remember only 20 numbers at one time (except for constant numbers set
in switches). This small memory was the most serious drawback of Eniac;
panel 26 was designed, therefore, to provide a great additional memory capacity.</p>

<p>The <i>divider-square-rooter</i>, as its name tells, is a mechanism
that can divide and that can find twice the square root of a number.
Eniac is one of the several giant brains that have had square root
capacity built into them, particularly since square root is needed for
solving trajectories.</p>

<p>Many panels of Eniac have double duty and some have triple duty.
For example, panel 24 is an accumulator, but it also (1) stores the
right-hand partial products (<a href="#SUPPL_2">see Supplement 2</a>) of the
multiplier and (2) was a register, when Eniac was at Moore School, from which
information to be punched in the printer could be obtained. Clearly, if
we have a multiplication to do, we cannot also use this accumulator for
storing a number that is to remain unchanged during the multiplication.</p>

<h4>Parts</h4>

<p>The total number of parts in Eniac is near half a million, even if
we count electronic tubes as single parts. There are over 18,800
electronic tubes in the machine. It is interesting to note that only 10
kinds of electronic tubes are used in the calculating circuits and only
about 60 kinds of <i>resistors</i> and 30 kinds of <i>capacitors</i>. A
resistor is a device that opposes the steady flow of electric current
through it to a certain extent (called <i>resistance</i> and measured
in <i>ohms</i>). A capacitor is a device that can store electrical
energy up to a certain extent (called <i>capacitance</i> and measured
in <i>farads</i>). All these tubes and parts are standard parts in
radios. All types are identified by the color labels established in
standard radio manufacturing. It is the combinations of these parts,
like the combinations of pieces in a chess game, that give rise to the
marvelous powers of Eniac.</p>

<p>The combinations of parts at the first level are called <i>plug-in
units</i>. A plug-in unit is a standard box or tray or chassis made of
<span class="pagenum" id="Page_118">[Pg 118]</span>
sheet steel containing a standard assembly of tubes, wires, and other
parts. It can be pushed in or pulled out of a standard socket with
many connections. An example of a plug-in unit is a <i>decade</i>, or,
more exactly, an <i>accumulator decade</i>. This is just a counter
wheel or decimal position expressed in Eniac language: it can express
successively all the digits from 0 to 9 and then pass from 9 to 0,
giving rise to a carry impulse. It is striking that a mechanical
counter to hold 10 digits can be made up of 10 little wheels, ¼ inch
wide and an inch high. But an accumulator in Eniac, to hold 10 digits,
is a set of 10 decades each 2 inches wide and 2½ feet high.</p>

<p>There are only about 20 kinds of plug-in units altogether. Each plug-in
unit is interchangeable with any other of the same kind. So, if a
decade, for example, shows trouble, you can pull it out of its socket
and plug in a spare decade instead.</p>

<h4>Numbers</h4>

<p>Numbers in Eniac are of 10 decimal digits with a sign that may be plus
or minus. The decimal point is fixed. However, when you are connecting
one accumulator with another, you can shift the decimal point if you
want to. Also, 2 accumulators may be coupled together so as to handle
numbers of 20 digits.</p>

<h3>HOW INFORMATION GOES<br /> INTO THE MACHINE</h3>

<p>There are three ways by which information—numbers or instructions—can
go into the Eniac. Numbers can be put into the machine by means of
punch cards fed into the Card Reader, panel 46, or switches on the
Constant Transmitter, panels 37 to 39. Numbers or instructions can
also go into the machine by means of the Function Tables, panels 43 to
45. Here there are dial switches, which are set by hand. Instructions
can also go into the machine by setting the switches, plugging the
inputs and outputs, etc., of the wires or lines along which numbers and
instructions travel.</p>

<h3>HOW INFORMATION COMES<br /> OUT OF THE MACHINE</h3>

<p>There are two ways by which numerical information can come out of the
<span class="pagenum" id="Page_119">[Pg 119]</span>
machine. Numbers can come out of the machine punched on cards by the
Summary Punch, panel 47. They are then printed in another room by means
of a separate IBM tabulator. Also, numbers can be read out of the
machine by means of the lights in the <i>neon bulbs</i> mounted on each
accumulator. You can read in the lights of a panel the number held by
the accumulator, if the panel is not computing.</p>

<h3>HOW INFORMATION IS MANIPULATED<br /> IN THE MACHINE</h3>

<p>Eniac handles information rather differently from any other of the big
brains. Instead of having only one bus or “railroad line” along which
numbers can be sent, Eniac has more than 10 such lines. They are called
<i>digit trays</i> and labeled A, B, C, ···. Each contains 11 <i>digit
trunk lines</i> or <i>digit trunks</i>—10 to carry the digits of a
number, and the 11th to carry the sign. Instead of having only one
telegraph line along which instructions can be sent, Eniac has more
than 100 such lines. They are called <i>program trunk lines</i> or
<i>program trunks</i> and labeled A1, A2, ···, A11, B1, B2, ···, B11,
···, etc. They are assembled in groups of 11 to a tray; the <i>program
trays</i>, in fact, look just like the digit trays, except for their
connectors and their purpose, which are different. Below, we shall make
clear how the program trays carry control information.</p>

<p>Now, actually, Eniac has many more trunk lines than we have just
stated, for each of the lines we have mentioned can be divided into
numerous separate sections by the removal of plug connections. How
we choose to do this depends on the needs of the problem, the space
between the panels, the time when the line is used, etc.</p>

<h4>Transferring Numbers, Adding,<br /> and Subtracting</h4>

<p>Basically, a number is represented in Eniac by an arrangement of on and
off electronic tube elements in pairs, called <i>flip-flops</i>. There
is one flip-flop enclosed in a single tube (type 6SN7) for each value
0, 1, 2, 3, 4, 5, 6, 7, 8, 9 for each of the 10 digits stored in an
accumulator. So we have at least 100 flip-flops for each accumulator,
and thus at least 100 electronic tubes are required to store 10 digits.
Actually, an accumulator needs 550 electronic tubes. So we see that
<span class="pagenum" id="Page_120">[Pg 120]</span>
there is not very much of a future in this type of arrangement. The
newer electronic brains use different devices for storage of numbers.</p>

<p>In order to show what number is stored in an accumulator, there are 100
little neon bulbs mounted on the face of each accumulator panel. Each
bulb glows when the flip-flop that belongs to it is on. For example,
suppose that the 4th decade in Accumulator 11 holds the digit 7. Then
the 7th flip-flop in that decade will be on, and all the others will be
off. The 7th neon bulb for that decade will glow.</p>

<p>Now suppose that the number 7 is in the 4th decade in Accumulator 11
and is to be added into, say, the 4th decade in Accumulator 13. And
suppose that it is to be subtracted from the 4th decade in Accumulator
16. What do we do, and what will Eniac do?</p>

<p>First, we pick out 2 digit trays, say B and D. Accumulator 11 has 2
outputs, called the <i>add output</i> and the <i>subtract output</i>.
We plug B into the add output and D into the subtract output. Then we
go over to Accumulators 13 and 16. They have 5 inputs, that is, 5 ways
of being plugged to receive numbers from digit trunks. These inputs are
named with <i>Greek letters</i>, <big>α, β, γ, δ, ε</big>. We choose one input,
say γ, for Accumulator 13, and we plug B into that input. We choose one
input, say ε, for Accumulator 16, and we plug D into that input.</p>

<p>Now we have the “railroad” switching for numbers accomplished. We have
set up a channel whereby the number in Accumulator 11 will be routed
positively into Accumulator 13 and negatively into Accumulator 16.
Now let us suppose that, at some definite time fixed by the control,
Accumulator 11 is stimulated to transmit and Accumulators 13 and 16 are
conditioned to receive. When this happens, a group of 10 <i>pulses</i>
comes along a direct trunk from the cycling unit, and a group of 9
pulses comes along another trunk. We can think of each pulse as a
little surge of electricity lasting about 2 millionths of a second. The
<i>ten-pulses</i>, as the first group is called, are 10 millionths of
a second apart. The <i>nine-pulses</i>, as the second group is called,
are also 10 millionths of a second apart but are sandwiched between
the ten-pulses. When the 1st ten-pulse comes along, the 7th flip-flop
in Accumulator 11 goes off, the 8th flip-flop goes on, the following
<span class="pagenum" id="Page_121">[Pg 121]</span>
nine-pulse goes through and goes out on the subtract line to
Accumulator 16. Then the 2nd ten-pulse comes along, the 8th flip-flop
goes off, the 9th flip-flop goes on, and the next nine-pulse goes out
on the subtract line to Accumulator 16. Now the decade sits at 9,
and for this reason the next ten-pulse changes an electronic switch
(actually another flip-flop) so that all later nine-pulses will go
out on the add line. This ten-pulse also turns off the 9th flip-flop
and turns on the 0th flip-flop without causing any carry. Now the 4th
of the ten-pulses comes along, turns the 0th flip-flop off, and turns
the 1st flip-flop on, and the next nine-pulse goes out on the add line
to Accumulator 13. The next 6 of the ten-pulses then come along and
change Accumulator 11 back to the digit 7 as before, and the next 6 of
the nine-pulses go out to Accumulator 13. Thus Eniac has added 7 into
Accumulator 13, has added 2, the <i>nines complement</i> of 7
(<a href="#SUPPL_2">see Supplement 2</a>), into Accumulator 16, and has
left Accumulator 11 holding the same number as before. This is just the
result that we wanted.</p>

<p>In this way, the nines complement of any digit in a decade is
transferred out along the subtract line, and the digit unchanged is
transmitted out along the add line. As the pulses arrive at any other
accumulator, they add into that accumulator.</p>

<h4>Multiplying and Dividing</h4>

<p>Eniac performs multiplication by a built-in table of the products in
the 10-by-10 multiplication table, using the method of <i>left-hand
components</i> and <i>right-hand components</i> (<a href="#SUPPL_2">see Supplement 2</a>).
For example, suppose that the 3rd digit of the multiplier is 7 and that the
5th digit of the multiplicand is 6. Then, when Eniac attends to the
3rd digit of the multiplier, the right-hand digit of the 42 = 6 × 7 is
gathered in one accumulator, and the left-hand digit 4 is gathered in
another accumulator. After Eniac has attended to all the digits of the
multiplier, then Eniac performs one more addition and transfers the sum
of the left-hand digits into the right-hand digits accumulator.</p>

<p>Eniac does division in rather a novel way. First, the divisor is
subtracted over and over until the result becomes negative or 0. Then
the machine shifts to the next column and adds the divisor until the
<span class="pagenum" id="Page_122">[Pg 122]</span>
result becomes positive or 0. It continues this process, alternating
from column to column. For example, suppose that we divide 3 into 84 in
this way. We have:</p>

<ul class="index fontsize_120">
<li class="isub3">____&nbsp; &nbsp;_</li>
<li class="isub2">3 ) 84 ( 32</li>
<li class="isub3">-3</li>
<li class="isub3 over">+54</li>
<li class="isub3">&nbsp;-3</li>
<li class="isub3 over">+24</li>
<li class="isub3 u">&nbsp;-3&nbsp;&nbsp;</li>
<li class="isub3">&nbsp;&nbsp;&nbsp;-6</li>
<li class="isub3">&nbsp;&nbsp;+3</li>
<li class="isub3 over">&nbsp;&nbsp;&nbsp;-3</li>
<li class="isub3 u">&nbsp;&nbsp;+3</li>
<li class="isub4">0</li>
</ul>

<p class="no-indent">After we subtract 3 the third time, the result
becomes negative,-6; in the next column, after we add 3 twice, the
result becomes 0. The quotient is</p>

<ul class="index">
<li class="isub1">&nbsp;&nbsp;_</li>
<li class="isub1">32, which is the same as 30 - 2, or 28;</li>
</ul>

<p class="no-indent">and 3 × 28 is 84. Thus the process checks.</p>

<h4>Consulting a Table</h4>

<p>Eniac has three Function Tables. Here you can store numbers or
instructions for the machine to refer to. Each Function Table has
104 <i>arguments</i> (<a href="#SUPPL_2">see Supplement 2</a>). For
each argument, you can store 12 digits and 2 signs that may be plus
or minus. This capacity can be devoted to one 12-digit number with a
sign, or to two 6-digit numbers each with a sign, or to six 2-digit
instructions. The three Function Tables are panels 43, 44, and 45. To
put in the numbers or instructions, you have to go over to these panels
and set the numbers or instructions, digit by digit, turning dial
switches by hand. It is slow and hard to do this right, but once it
is done, Eniac can refer to any number or instruction in any table in
¹/₁₀₀₀ of a second. This is much faster than the table reference time
in any other of the giant brains built up to 1948.</p>

<h4>Programming</h4>

<p>We said above that Eniac has over 100 control lines or program trunks
along which instructions can be sent. These instructions are expressed
as pulses called <i>program pulses</i>. Now how do we make these pulses
<span class="pagenum" id="Page_123">[Pg 123]</span>
do what we want them to do? For example, how can we instruct
Accumulator 11 to add what it holds into Accumulator 13?</p>

<p>On each unit of Eniac there are plug hubs or sockets (called
<i>program-pulse input terminals</i>) to which a program trunk may be
connected. A program pulse received here can make the unit act in some
desired way. On each accumulator of Eniac, we find 12 program-pulse
input hubs. Corresponding to each of these hubs, there is a nine-way
switch, called a <i>program-control switch</i>. The setting of this
switch determines what the accumulator will do when the program-pulse
input hub belonging to the switch receives a program pulse. For
instance, there are switch settings for: receive input on the α line,
receive input on the β line, etc.; and transmit output on the add line,
etc. There is even a switch setting that instructs the accumulator to
do nothing, and this instruction may be both useful and important.</p>

<p>Now, in order that Accumulator 11 may transfer a number to Accumulator
13, we need: (1) a digit tray, say B, for the number to travel along;
(2) a program trunk line, say G3, to tell Accumulator 11 when to send
the number and Accumulator 13 when to receive it; and (3) certain
plugging as follows:</p>

<div class="blockquot">
<p class="neg-indent">1. We plug from program trunk G3 into a
program-pulse input hub, say No. 5, of Accumulator 11;</p>

<p class="neg-indent">2. We plug from the same program trunk G3 into a
program-pulse input hub, say No. 7, of Accumulator 13;</p>

<p class="neg-indent">3. We set program-control switch No. 5 of
Accumulator 11 to “add”;</p>

<p class="neg-indent">4. We set program-control switch No. 7 of
Accumulator 13 to some input, say γ.</p>

<p class="neg-indent">5. We plug from digit tray B into the add output
of Accumulator 11.</p>

<p class="neg-indent">6. We plug from digit tray B into the γ input of
Accumulator 13.</p>
</div>

<p class="no-indent">Now, when the program pulse comes along line G3,
it makes Accumulator 13 transmit additively along digit tray B into
Accumulator 13. And that is the result that we wanted.</p>

<p>As each mechanism of Eniac finishes what it is instructed to do, it may
<span class="pagenum" id="Page_124">[Pg 124]</span>
or may not put out a program pulse. This pulse in turn may be plugged
into any other program trunk line and may stimulate another mechanism
to act. Then, when this mechanism finishes, it too may or may not put
out a program pulse, and so on.</p>

<p>In general, there are two different ways to instruct Eniac to do a
problem. One way is to set all the switches, plug all the connections,
etc., for the specific problem. This is a long and hard task. Very
often, even with great care, it is done not quite correctly, and then
the settings must be carefully checked all over again. A second method
(called the <i>von Neumann programming method</i>) is to store all
the instructions for a problem in one or two function tables of Eniac
and then tell Eniac to read the function tables in sequence and to do
what they say. The rest of the machine is then wired up in a standard
fashion. This method of instructing Eniac was proposed by Dr. John von
Neumann of the Institute of Advanced Study at Princeton, N. J. Eniac
has been modified to the slight extent needed so that this method can
be used when desired. In this method, each instruction is a selected
one of 60 different standard instructions or orders—one of them, for
example, being “multiplication.” Each standard order is expressed by
2 decimal digits. The 60 standard orders are sufficient so that Eniac
can do any mathematical problem that does not overstrain its capacity.
Since each of the 3 Function Tables can hold 600 2-digit instructions,
the machine can hold a program of 1800 instructions under the von
Neumann programming method.</p>

<h3>AN APPRAISAL OF ENIAC<br /> AS A COMPUTER</h3>

<p>As a general-purpose calculating machine, Eniac suffers from unbalance.
That is to say, Eniac operates rapidly and successfully in some
respects, and slowly and troublesomely in other respects. This is
altogether to be expected, however, in a calculator as novel as Eniac
and made to so large an extent out of standard radio parts. It was
certainly better to finish a calculator like this one and then start
on a new one, as the Moore School of Electrical Engineering did, than
to prolong design and construction indefinitely in order to make improvements.
<span class="pagenum" id="Page_125">[Pg 125]</span></p>

<h4>Speed</h4>

<p>Eniac adds or subtracts very swiftly at the rate of 5000 a second.
Eniac multiplies at the rate of 360 to 500 a second. Division,
however, is slow, relatively; the rate is about 50 a second. Reading
numbers from punched cards, 12 a second for 10-digit numbers, is even
slower. As a result of these rates, you find, when you put a problem
on Eniac, that one division delays you as long as 100 additions or
8 multiplications. Division might have been speeded somewhat by (1)
<i>rapidly convergent approximation</i> (<a href="#SUPPL_2">see Supplement 2</a>)
to the <i>reciprocal</i> of the divisor and (2) multiplying by the dividend;
this might have taken 5 or 6 multiplication times instead of 8. Also,
the use of a standard IBM punch-card feed and card punch slows the
machine greatly. One way to overcome this drawback might be to install
one or two additional sets of such equipment, which might increase
input and output speed.</p>

<h4>Ease of Programming</h4>

<p>Eniac has a very rapid and flexible automatic control over the
programming of operations. Eniac has more than 10 channels along which
numbers can be transferred and more than 100 channels along which
program-control pulses can be transferred. There are many ways for
providing subroutines. Eniac has the additional advantage that there
is no delay in giving the machine successive instructions: all the
instructions the machine may need at any time are ready at the start of
the problem, and indications occurring in the calculation can change
the routine completely.</p>

<p>All these advantages, however, are paid for rather heavily by the
slow methods for changing programming. You have to plug large numbers
of program trunk lines and digit trunk lines, or you have to set
large numbers of switches, or both. Also, when you wish to return to
a previous problem, you must do all the plugging and switch setting
over again. Many delays in the operation of the machine are due to
human errors in setting the machine for a new problem. Here again, we
must remember that Eniac was originally designed as a special-purpose
machine for solving trajectories. To calculate a large family of
trajectories very little changing of wires and switches would be needed.
<span class="pagenum" id="Page_126">[Pg 126]</span></p>

<h4>Memory</h4>

<p>The most severe limitation on the usefulness of Eniac was, at the
outset, the fact that it had only 20 registers for storing numbers.
There are large numbers of problems that cannot be simply handled with
so small an internal memory. Even the Harvard IBM calculator (<a href="#CHAPTER_6">see Chapter 6</a>)
is often strained during a problem because of the number of
intermediate results that must be stored for a time before combining.
The Ballistic Research Laboratories, however, contracted for extensions
to Eniac to provide more memory and easier changing of instructions.</p>

<h4>Reliability</h4>

<p>Checking results with Eniac is not easy. There is no built-in guarantee
that Eniac’s results are correct. A large calculator can and does make
both constant and intermittent errors. Ways for checking with Eniac are:</p>

<div class="blockquot">
<p class="neg-indent">Mathematical, if and when available, and this
will be seldom.</p>

<p class="neg-indent">Running the problem a second time, and this will,
at most, prove consistency.</p>

<p class="neg-indent">Deliberate testing of small parts of the problem,
which is very useful and is standard practice but leads only to a
probability that the final result is correct.</p>
</div>

<p class="no-indent">You can operate Eniac one addition at a time, and
even one pulse at a time, and see what the machine shows in its little
neon bulbs. This is a very useful partial check.</p>

<h4>Cost</h4>

<p>The cost of Eniac is higher than that of some of the other large
mechanical brains—over half a million dollars. Because some of the
work was done at the Moore School by students, the cost was probably
less than it otherwise would have been. The largest part of the cost
was the designing of the machine and the construction of the panels;
the tubes were only a small portion of the cost. The tubes used in
the calculating circuits cost only 20 to 90 cents. However, no later electronic
calculator need cost as much, for many improvements can now be seen.
<span class="pagenum" id="Page_127">[Pg 127]</span></p>

<p>The power required for Eniac is about 150 kilowatts or about 200
horsepower, most of which is used for the heaters of the electronic
tubes. The largest number of electronic tubes mentioned for future
electronic calculators is about 3000, so we can see that they are
likely to use less than a quarter of the power needed for Eniac.</p>

<p>Eniac will doubtless give a number of years of successful operation
and be extremely useful for problems that employ its assets and are
not excluded by its limitations. In fact, at the Ballistic Research
Laboratories, for a typical week of actual work, Eniac has already
proved to be equal to 500 human computers working 40 hours with desk
calculating machines, and it appears that soon two or three times as
much work may be obtained from Eniac.</p>
<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_128">[Pg 128]</span></p>
<h2 class="nobreak" id="CHAPTER_8">Chapter 8<br />
<span class="h_subtitle">RELIABILITY—NO WRONG RESULTS:<br />
BELL LABORATORIES’<br />GENERAL-PURPOSE RELAY CALCULATOR</span></h2>
</div>

<p>In 1946, Bell Telephone Laboratories in New York finished two
<i>general-purpose relay calculators</i>—mechanical brains. They
were twins. One was shipped in July 1946 to the National Advisory
Committee for Aeronautics at Langley Field, Virginia. The other, after
some months of trial operation, was shipped in February 1947 to the
Ballistic Research Laboratories at the U. S. Army’s Proving Ground,
Aberdeen, Md.</p>

<p>Each machine is remarkably reliable and versatile. It can do a wide
variety of calculations in a great many different ways. Yet the machine
never takes a new step without a check that the old step was correctly
performed. There is, therefore, a chance of better than 99.999,999,999
per cent that the machine will not let a wrong result come out. The
automatic checking, of course, does not prevent (1) human mistakes—for
example, instructing the machine incorrectly—or (2) mechanical
failures, in which the machine stops dead in its tracks, letting no
result at all come out.</p>

<h3>ORIGIN AND DEVELOPMENT</h3>

<p>In Bell Telephone Laboratories the telephone system of the country is
continually studied. Their research produced the common type of dial
telephone system: a masterly machine for selecting information.</p>

<p>Now when a telephone engineer studies an electric circuit, he often
<span class="pagenum" id="Page_129">[Pg 129]</span>
finds it very convenient to use numbers in pairs: like 2, 5 or-4,-1.
Here the comma is a separation sign to keep the two numbers in the pair
separate and in sequence. Mathematicians call numbers of this kind, for
no very good reason, <i>complex numbers</i>; of course, they are far
less complex than why the sun shines or why plants grow.</p>

<p>When Bell Laboratories test the design of new circuits, girl computers
do arithmetic with complex numbers. Addition and subtraction are easy:
each means two operations of addition or subtraction of ordinary
numbers. For example, 2, 5, plus-4,-1 equals 2-4, 5-1, which
equals-2, 4. And 2, 5 minus-4,-1 is the same as 2, 5 plus 4, 1;
and this equals 2 + 4, 5 + 1, which equals 6, 6. Multiplication of
two complex numbers, however, is more work. If <i>a</i>, <i>b</i> and
<i>c</i>, <i>d</i> are two complex numbers, then the formula for their
product is <big>(<i>a</i> × <i>c</i>)-(<i>b</i> × <i>d</i>), (<i>a</i>
× <i>d</i>) + (<i>b</i> × <i>c</i>)</big>. To get the answer, we need 4
multiplications, 1 subtraction, and 1 addition. Division of two complex
numbers requires even more work. If <i>a</i>, <i>b</i> and <i>c</i>,
<i>d</i> are two complex numbers, the formula for the quotient of
<i>a</i>, <i>b</i> divided by <i>c</i>, <i>d</i> is:</p>

<p class="f120 no-wrap">[(<i>a</i> × <i>c</i>) + (<i>b</i> × <i>d</i>)]
                     ÷ [(<i>c</i> × <i>c</i>) + (<i>d</i> × <i>d</i>)],</p>

<p class="f120 no-wrap">[(<i>b</i> × <i>c</i>) - (<i>a</i> × <i>d</i>)]
                     ÷ [(<i>c</i> × <i>c</i>) + (<i>d</i> × <i>d</i>)]</p>

<p class="no-indent">For example,</p>

<p class="f120 no-wrap">(2, 5) ÷ (-4, -1) = [(2 × -4 = -8) + (5 × -1 = -5)]
                      ÷ [(-4 × -4 = 16) + (-1 × -1 = 1)],</p>

<p class="f120 no-wrap">[(5 × -4 = -20) - (2 × -1 = -2)] ÷ [16 + 1] = -(¹³/₁₇), -(¹⁸/₁₇)</p>

<p class="no-indent">Thus, division of one complex number by another
needs 6 multiplications, 2 additions, 1 subtraction, and 2 divisions of
ordinary numbers—and always in the same pattern or sequence.</p>

<h4>The Complex Computer</h4>

<p>About 1939, an engineer at Bell Telephone Laboratories in New York, Dr.
George R. Stibitz, noticed the great volume of this pattern arithmetic.
He began to wonder why telephone switching equipment could not be used
to do the multiplications and divisions automatically. He decided it
could. All that was necessary was that the <i>relays</i> (<a href="#CHAPTER_2">see Chapter 2</a>)
<span class="pagenum" id="Page_130">[Pg 130]</span>
used in regular telephone equipment should have a way of remembering
and calculating with numbers. Regular telephone equipment would take
care of the proper sequence of operations. Regular equipment known as
<i>teletypewriters</i> would print the numbers of the answer when it
was obtained. A teletypewriter consists essentially of a typewriter
that may be operated by electrical impulses. It has a keyboard that may
produce electrical impulses in sets corresponding to letters; and it
can receive or transmit over wires.</p>

<p>Dr. Stibitz <i>coded</i> the numbers: each decimal digit was matched up
with a group of four relays in sequence, and each of these relays could
be open or closed. If 0 means open and 1 means closed, here is the
pattern or code that he used:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Decimal<br /> Digit</span></th>
      <th class="tdr">&nbsp;<span class="smcap">Relay Code</span>&nbsp;</th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">0</td>
      <td class="tdc">0011</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc">0100</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc">0101</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdc">0110</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdc">0111</td>
   </tr><tr>
      <td class="tdc" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdc">1000</td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdc">1001</td>
   </tr><tr>
      <td class="tdc">7</td>
      <td class="tdc">1010</td>
   </tr><tr>
      <td class="tdc">8</td>
      <td class="tdc">1011</td>
   </tr><tr>
      <td class="tdc">9</td>
      <td class="tdc">1100</td>
   </tr>
 </tbody>
</table>

<p>With regular telephone relays and regular telephone company techniques,
Dr. Stibitz and Bell Telephone Laboratories designed and constructed
the machine. It was called the <i>Complex Computer</i> and was built
just for multiplying and dividing complex numbers. Six or eight panels
of relays and wires were in one room. Two floors away, some of the
girl computers sat in another room, where one of the teletypewriters
of the machine was located. When they wished, they could type into the
machine’s teletypewriter the numbers to be multiplied or divided. In a
few seconds back would come the answer. In fact, there were two more
computing rooms where teletypewriters of the machine were stationed. To
prevent conflicts between stations, the machine had a circuit like the
busy signal from a telephone.</p>

<p>In 1940, a demonstration of the Complex Computer took place: the
<span class="pagenum" id="Page_131">[Pg 131]</span>
computing panels remained in New York, but the teletypewriter
input-output station was set up at Dartmouth College in Hanover, N. H.
Mathematicians gave problems to the machine in Dartmouth, it solved
them in New York, and it reported the answers in Dartmouth.</p>

<h4>Special-Purpose Computers</h4>

<p>With this as a beginning, Bell Laboratories developed another
machine for a wide variety of mathematical processes called
<i>interpolating</i> (<a href="#SUPPL_2">see Supplement 2</a>). Then,
during World War II, Bell Laboratories made more special-purpose
computing machines. They were used in military laboratories charged
with testing the accuracy of instruments for controlling the fire of
guns. These computers took in a set of gun-aiming directions put out
by the <i>fire-control instrument</i> in some test. They also took in
the set of observations that went into the fire-control instrument on
that test. Then they computed the differences between the gun-aiming
produced by the fire-control instrument and the gun-aiming really
required by the observations. Using these differences, the fire-control
instrument could be adjusted and corrected. These special-purpose
computers were also useful in checking the design of new fire-control
instruments and in checking changes due to new types of guns or
explosives.</p>

<p>Regularly, after each of these special-purpose computers was finished,
people began to put other problems on it. It seemed to be fated that,
as soon as you had made a machine for one purpose, you wanted to use
it for something else. Accordingly, in 1944, two agencies of the U. S.
Government together made a contract with Bell Telephone Laboratories
for two general-purpose relay computers. These two machines were
finished in 1946 and are twins.</p>

<h3>ORGANIZATION OF THE<br /> GENERAL-PURPOSE COMPUTER</h3>

<p>When a man sits down at a desk to work on a computation, he has six
things on his desk to work with: a work sheet; a desk calculator, to
add, subtract, multiply, and divide; some rules to be followed; the
tables of numbers he will need; the data for the problem; and an answer
sheet. In his head, he has the capacity to make decisions and to do his
<span class="pagenum" id="Page_132">[Pg 132]</span>
work in a certain sequence of steps. These seven subdivisions of
calculation are all found in the Bell Laboratories’ general-purpose
relay computer. The general-purpose computer is a computing system, in
fact, more than it is a single machine. The part of the system which
does the actual calculating is called, in the following paragraphs, the
<i>computer</i>, or else, since it is in two halves, <i>Computer 1</i>
and <i>Computer 2</i>.</p>

<h4>Physical Units</h4>

<p>The computing system delivered to the Ballistic Research Laboratories
fills a room about 30 by 40 feet and consists of the following:</p>

<div class="blockquot">
<p class="neg-indent">2 <i>computers</i>: panels of relays, wiring,
etc., which add, subtract, multiply, divide, select, decide, control,
etc.</p>

<p class="neg-indent">4 <i>problem positions</i>: tables each
holding 12 mechanisms for feeding paper tape, which read numbers
and instructions punched on tape and convert them into electrical
impulses.</p>

<p class="neg-indent">2 <i>hand perforators</i>: keyboard devices for
punching instructions and numbers on paper tape.</p>

<p class="neg-indent">1 <i>processor</i>: a table holding mechanisms
for feeding 2 paper tapes and punching a third paper tape, used for
checking numbers and instructions punched on tape.</p>

<p class="neg-indent">2 <i>recorders</i>: each a table holding a
teletypewriter, a tape punch, and a tape feed, used for recording
answers and, if necessary, consulting them again.</p>
</div>

<p class="no-indent">The 2 computers correspond to the work sheet, the
desk calculator, and the man’s capacity to make decisions and to carry
out a sequence of steps. The 4 problem positions correspond to the
problem data, the rules, and the tables of numbers. The 2 recorders
correspond to the answer sheet. The 2 hand perforators and the
processor are auxiliary machines: they translate the ordinary language
of arithmetic into the machine language of punched holes in paper tape.</p>

<p>This is the computing system as organized for the Ballistic
Research Laboratories at Aberdeen. The one for the National
Advisory Committee for Aeronautics has only 3 problem positions.
The computer system may, in fact, be organized with 1
to 10 computers and with 1 to 20 problem positions.
<span class="pagenum" id="Page_133">[Pg 133]</span></p>

<p>The great bulk of this computing system, like the mechanical brains
described in previous chapters, is made up of large numbers of
identical parts of only a few kinds. These are: standard telephone
relays; wire; and standard <i>teletype transmitters</i>, mechanisms
that read punched paper tape and produce electrical impulses.</p>

<h4>Numbers</h4>

<p>The numbers that the Bell machine contains range from
0.1000000 to 0.9999999 times a <i>power</i> of 10 varying from
10,000,000,000,000,000,000 to 0.000,000,000,000,000,000,1, or, in
other words, from <big>10¹⁹</big> to <big>10⁻¹⁹</big>. The machine also contains zero and
<i>infinity</i>: zero arises when the number is smaller than <big>10⁻¹⁹</big>,
and infinity arises when the number is equal to or greater than
9,999,999,000,000,000,000. (<a href="#SUPPL_2">See Supplement 2</a>.)</p>

<p>The system used in the machine to represent numbers on relays is called
<i>biquinary</i>—the <i>bi</i>-, because it is partly twofold like
the hands, and the -<i>quinary</i> because it is partly fivefold like
the fingers. This system is used in the abacus (see <a href="#CHAPTER_2">Chapter 2</a>
and <a href="#SUPPL_2">Supplement 2</a>). In the machine, for each decimal digit,
7 relays are used. These relays are called the 00 and 5 relays, and the 0, 1,
2, 3, and 4 relays. If, as before, 0 indicates a relay that is not energized
and 1 indicates a relay that is energized, then each decimal digit is
represented by the positioning of the 7 relays as follows:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Decimal<br /> Digit</span></th>
      <th class="tdc" colspan="2">&nbsp;</th>
      <th class="tdr">&nbsp;<span class="smcap">Relays</span>&nbsp;</th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;00&nbsp;</td>
      <td class="tdc">&nbsp;5&nbsp;</td>
      <td class="tdc">&nbsp;0 1 2 3 4&nbsp;</td>
   </tr><tr>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
      <td class="tdc">1 0 0 0 0</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
      <td class="tdc">0 1 0 0 0</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
      <td class="tdc">0 0 1 0 0</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
      <td class="tdc">0 0 0 1 0</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdc">1</td>
      <td class="tdc">0</td>
      <td class="tdc">0 0 0 0 1</td>
   </tr><tr>
      <td class="tdc" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">1 0 0 0 0</td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">0 1 0 0 0</td>
   </tr><tr>
      <td class="tdc">7</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">0 0 1 0 0</td>
   </tr><tr>
      <td class="tdc">8</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">0 0 0 1 0</td>
   </tr><tr>
      <td class="tdc">9</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
      <td class="tdc">0 0 0 0 1</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Then, for any decimal digit, one and only one of
<span class="pagenum" id="Page_134">[Pg 134]</span>
the 00 and 5 relays is energized, and one and only one of the 0, 1, 2,
3, and 4 relays is energized. If more or less than exactly one relay
in each set is energized, then the machine knows that it has made a
mistake, and it stops dead in its tracks. Thus any accidental failure
of a relay is at once caught, and the chance of two compensating
failures occurring at the same time is extremely small.</p>

<h3>HOW INFORMATION GOES<br /> INTO THE MACHINE</h3>

<p>In order to put a problem into this machine—just as with the other
machines—first a mathematician who knows how the problem is to be
solved, and who knows how to organize it for the machine, lays out
the scheme of calculation. Then, a girl goes to one of the hand
perforators. Sitting at the keyboard, she presses keys and punches out
feet or yards of paper tape expressing the instructions and numbers for
the calculation. Each character punched—digit, letter, or sign—has
one or more of a maximum of 6 holes across the tape. Another girl,
using the other hand perforator, also punches out the instructions and
numbers for the calculation. If she wishes to erase a wrong character,
she can press an <i>erase key</i> that punches all 6 holes, and then
the machine will pass by this row as if it were not there.</p>

<p>Three kinds of tapes are produced for the machine:</p>

<div class="blockquot">
<p class="neg-indent"><i>Problem tapes</i>, which contain information
belonging to the particular problem.</p>

<p class="neg-indent"><i>Table tapes</i>, which contain tables of
numbers to be referred to from time to time.</p>

<p class="neg-indent"><i>Routine tapes</i>, which contain the program,
or routine, or sequence of steps that the machine is to carry out.</p>
</div>

<p class="no-indent">In each of these tapes one character takes up
⅒ of an inch along the tape. In the case of a table tape, however,
an ordinary 1-digit number requires 4 characters on the tape, and a
7-digit number requires 11 characters on the tape. On a table tape
there will be on the average about 1 inch of tape per number.</p>

<h4>The Processor</h4>

<p>The two paper tapes prepared on the perforator should agree. But
<span class="pagenum" id="Page_135">[Pg 135]</span>
whether or not they agree, a girl takes them over to the processor and
puts them both in. The processor has two tape feeds, and she puts one
tape on each and starts the machine. The processor compares them row by
row, making sure that they agree, and punches a new tape row by row.
If the two input tapes disagree, the processor stops. You can look to
see which tape is right, and then you can put the correct punch into
the new tape with a keyboard mounted on the processor. As the processor
compares the two input tapes, it also converts any number written in
the usual way into machine language. For example, the processor will
automatically translate 23,188 into +.231 8800 × 10⁺⁵. The processor
also puts in certain safeguards. If you want it to, the processor will
also make a printed record of a tape. Also, when a tape becomes worn from
use in the machine, you can put it into the processor and make a fresh copy.</p>

<h4>The Problem Positions</h4>

<p>Next, the girl takes the punched tape made by the processor over to a
problem position that is idle. Two of the problem positions are always
busy guiding the two computers. The other two problem positions stand
by, ready to be loaded with problems.</p>

<p>A problem position looks like a large covered-over table. Under the
covers are 12 tape feeds, or <i>tape transmitters</i>. All these
transmitters look exactly alike except for their labels and consist
of regular teletype transmitters. Six-hole paper tape can be fed into
any transmitter. Six metal fingers sense the holes in the paper tape
and give out electrical impulses at proper times. At the front of the
problem position is a small group of switches that provide complete
control over the problem while it is on the machine. These are switches
for starting, disconnecting, momentary stop, etc.</p>

<p>One tape transmitter is the problem tape transmitter. It takes in
all the data for the problem such as the starting numbers. The first
thing it does at the start of a problem is to check (by comparing tape
numbers) that the right tapes are in the right feeds.</p>

<p>Five transmitters are routine tape transmitters. Each of these takes in
<span class="pagenum" id="Page_136">[Pg 136]</span>
the sequence of computing steps. The routine tapes also contain
information for referring to table tapes and instructions for printing
and punching tape. The machine can choose according to instructions
between the five routine tapes and can choose between many different
sections on each tape. Therefore, we can use a large number of
different routines in a calculation, and this capacity makes the
machine versatile and powerful.</p>

<p>Six transmitters are table tape transmitters. They read tables of
numbers when directed to. A table tape can be as long as 100 feet and
will hold numbers at the rate of 1 inch per number, so that about 1200
numbers of seven decimal digits can be stored on a table tape.</p>

<p>When we look up a number in a table, such as the following,</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdc bb">2½</td>
      <td class="tdc bb">3</td>
      <td class="tdc bb">3½</td>
      <td class="tdc bb">&nbsp;···&nbsp;</td>
   </tr><tr>
      <td class="tdr br">1&nbsp;</td>
      <td class="tdc">&nbsp;1.02500&nbsp;</td>
      <td class="tdc">&nbsp;1.03000&nbsp;</td>
      <td class="tdc">&nbsp;1.03500&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">2&nbsp;</td>
      <td class="tdc">1.05063</td>
      <td class="tdc">1.06090</td>
      <td class="tdc">1.07123</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">3&nbsp;</td>
      <td class="tdc">1.07689</td>
      <td class="tdc">1.09273</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">···</td>
   </tr><tr>
      <td class="tdr br">4&nbsp;</td>
      <td class="tdc">1.10381</td>
      <td class="tdc">···</td>
      <td class="tdc">···</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">5&nbsp;</td>
      <td class="tdc">1.13141</td>
      <td class="tdc">···</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">6&nbsp;</td>
      <td class="tdc">1.15969</td>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">7&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">···</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">8&nbsp;</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">···</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">9&nbsp;</td>
      <td class="tdc">···</td>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">10&nbsp;</td>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr><tr>
      <td class="tdr br">···&nbsp;</td>
      <td class="tdc">···</td>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">we look along the top and down the side until we
find the column and row of the number we are looking for. These are
called the <i>arguments</i> of the <i>tabular value</i> that we are
looking for (<a href="#SUPPL_2">see Supplement 2</a>). Now when we put
this table on a tape to go into the Bell Laboratories machine, we write
it all on one line, one figure after another, and we punch it as follows:</p>

<p class="f120">2-½   1-5     1.02500    1.05063    1.07689    1.10381     1.13141<br />
6-10    1.15969    ···      11-15     ···     ···      ···     3   1-5<br />
 1.03000    1.06090    ···    ···    3½     1-5     1.03500 ···</p>

<p class="no-indent">You will notice that the column labels 2½, 3, 3½
have been put on the tape, each in front of the group of numbers they
apply to. The row labels 1 to 5, 6 to 10, ··· have also been put on
the tape, each in front of the group of numbers they apply to. The
<span class="pagenum" id="Page_137">[Pg 137]</span>
appropriate column and row numbers, or arguments, must be put often on
every table tape, so that it is easy for the machine to tell what part
of the table tape it is reading.</p>

<p>In the Bell Laboratories machine, we do not need to put equal
<i>blocks</i> of arguments like 1-5, 6-10 ··· on the table tape.
Instead we can put individual arguments like 1, 2, 3, 4 ···, or, if we
wish, we can use blocks of different sizes, like 1-3, 4-15, 16-30···.
For some tables, such as income tax tables, it is very useful to have
varying-sized blocks of arguments. The machine, when hunting for
a certain value in the table, makes a comparison at each block of
arguments.</p>

<p>The machine needs about 6 seconds to search a foot of tape. If we want
to set up a table economically, therefore, we need to consider the
average length of time needed for searching.</p>

<div class="figcenter">
  <img id="FIG_1-8" src="images/i_137.jpg" alt="" width="500" height="429" />
  <p class="f120"><span class="smcap">Fig. 1.</span> Scheme of a recorder.</p>
</div>

<h3>HOW INFORMATION COMES<br /> OUT OF THE MACHINE</h3>

<p>At either one of the two recorders (<a href="#FIG_1-8">Fig. 1</a>), information
comes out of the machine, either in the form of printed characters or as punched
tape. The recorder consists of a <i>printer</i>, a <i>reperforator</i>,
and a tape transmitter. One recorder table belongs to each computer
and records the results it computes. The printer is a regular
teletypewriter connected to the machine. It translates information
produced by the machine as electrical impulses and prints the
information in letters and digits on paper. The reperforator is an
<span class="pagenum" id="Page_138">[Pg 138]</span>
automatic tape punch. It translates information produced by the machine
in the form of electrical impulses and punches the information on
paper tape. Next to the tape punch is a tape transmitter. After the
tape comes through the punch, it is fed into the transmitter. Here the
machine can hunt for a previous result punched in the tape, read that
result, and use it again.</p>

<h3>HOW INFORMATION IS MANIPULATED<br /> IN THE MACHINE</h3>

<p>The main part of the computing system consists of 27 large frames
loaded with relays and wiring, called the <i>computer</i>, or
<i>Computer 1</i> and <i>Computer 2</i>. In this “telephone central
station,” all the “phone calls” from one number to another are attended
to. There are 8 types of these frames in the computer:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Frames</span></th>
      <th class="tdr"><span class="smcap">Number</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdl">Storing register frames</td>
      <td class="tdc">6</td>
   </tr><tr>
      <td class="tdl">Printer frames</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdl">Problem frames</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdl">Position frames</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdl">Calculator frames</td>
      <td class="tdc">6</td>
   </tr><tr>
      <td class="tdl">Control frames</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdl">Routine frames</td>
      <td class="tdc">4</td>
   </tr><tr>
      <td class="tdl">BTL (Block-Trig-Log) frames</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdl">Permanent table frames</td>
      <td class="tdc">1</td>
   </tr><tr>
      <td class="tdl_ws1">&nbsp;&emsp;Total</td>
      <td class="tdc bt">27</td>
   </tr>
 </tbody>
</table>

<p>In most but not quite all respects, the two halves, <i>Computer 1</i>
and <i>Computer 2</i>, can compute independently. The <i>storing
register frames</i> hold enough relays to store 30 numbers. The
registers for these numbers are named <i>A, B, C, D</i>, ···, <i>M, N,
O</i> in two groups of 15 each. One group belongs to Computer 1 and the
other to Computer 2. In each Computer, the <i>calculator frames</i>
hold enough relays for storing two numbers (held in the <i>X</i>
and <i>Y</i> registers) and for performing addition, subtraction,
multiplication, division, and square root. In each Computer, the
<i>problem frame</i> stores the numbers that are read off the problem
tape and the table tapes, and the <i>printer frame</i> stores the
numbers that are read into the printer. The printer frame also stores
indications, for example, the signs of numbers, plus or minus, for
<span class="pagenum" id="Page_139">[Pg 139]</span>
purposes of combining them. These frames also hold the relays that
control the printer, the problem tape, and the table tapes. Jointly
for both Computers, the <i>position frames</i> connect a problem in
some problem position to a Computer that becomes idle. For example,
one problem may finish in the middle of the night; the machine
automatically and unattended switches to another problem position and
proceeds with the instructions there contained. A backlog of computing
on hand can be stored in two of the problem positions, while the
other two control the two Computers. In each Computer, the <i>routine
frames</i> hold the relays that make the Computer follow the routine
instructions. Jointly for both Computers, the remaining frames—the
<i>control frames</i>, the <i>BTL frames</i>, and the <i>permanent
table frames</i>—hold the relays that control: the alarms and lights
for indicating failures; some circuits called the BTL controls; the
tape processor; and the mathematical tables that are permanently
wired into the machine. The permanent table frames hold the following
mathematical functions (<a href="#SUPPL_2">see Supplement 2</a>):
<i>sine</i>, <i>cosine</i>, <i>antitangent</i>, <i>logarithm</i>,
and <i>antilogarithm</i>.</p>

<h4>Storing</h4>

<p>Numbers can be stored in the machine in the 30 regular storing
registers of both Computers together. They can also be stored, at the
cost of tying up some machine capacity, in the other registers: the 4
calculator registers, the 2 problem registers, the 2 table registers,
and the 2 printer registers. Numbers can also be punched out on tape,
in either of the two printers, and later read again from the tape.
Labels identifying the numbers can also be punched and read again from
the tape.</p>

<p>Each register in the machine stores a number in the biquinary notation,
as explained above. In programming the machine, after mentioning a
register it is necessary—as a part of the scheme for checking—to tell
the machine specifically whether to hold the number in the register or
to clear it.</p>

<h4>Addition and Subtraction</h4>

<p>The calculator frames can add two numbers together, if so instructed
in the routine tape. Suppose that the two numbers are in the registers
<span class="pagenum" id="Page_140">[Pg 140]</span>
<i>B</i> and <i>D</i> and that we wish to put the sum in register
<i>F</i>. Suppose that we wish to clear the <i>D</i> number but hold
the <i>B</i> number after using them. The code on the routine tape is
<i>B H</i> + <i>D C</i> = <i>F</i>. <i>H</i> and <i>C</i> coming right
after the names of the registers always designate “hold” and “clear,”
respectively.</p>

<p>The calculator frames can, likewise, subtract a number. The routine
instruction <i>B H</i>-<i>D C</i> = <i>F</i> means:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub1">Take the number in register <i>B</i> (hold it);</li>
<li class="isub2">subtract the number in <i>D</i> (clear it);</li>
<li class="isub2">put the result in <i>F</i></li>
</ul>

<h4>Multiplication and Division</h4>

<p>The calculator frames perform multiplication by storing the digits of
the multiplier, adding the multiplicand over and over, and shifting,
until the product is obtained. However, if the multiplier is 1989, for
example, the calculator treats it as 2000-11. This short-cut applies
to digits 6, 7, 8, 9 and cuts the time required for multiplying. The
routine instruction is <i>B H</i> × <i>D C</i> = <i>F</i>.</p>

<p>The calculator performs division by repeated subtraction. The routine
instruction is <i>B H</i> ÷ <i>D C</i> = <i>F</i>. The operation signs
<big>+,-, ×, ÷</big> actually appear on the keyboard of the perforator and on the
printed tape produced by the printer.</p>

<h4>Discrimination</h4>

<p><i>Discrimination</i> is the term used in the Bell Laboratories
computer for what we have previously called selection, or comparison,
or sequencing. The <i>discriminator</i> is a part of the calculator
that compares or selects or decides—“discriminates.” The discriminator
can decide whether a number is zero or not zero. In the language of
the <i>algebra of logic</i> (see <a href="#CHAPTER_9">Chapter 9</a> and <a href="#SUPPL_2">Supplement 2</a>),
if <i>a</i> is a number, the discriminator can find <i>T</i>(<i>a</i> = 0).
The discriminator can also decide whether a number is positive or
negative. In the language of logic, it can find <i>T</i>(<i>a</i> &gt; 0)
or <i>T</i>(<i>a</i> &lt; 0). The actions that a discriminator can cause
to be taken are:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">Stop the machine.</li>
<li class="isub2">Stop the problem, and proceed to another problem.</li>
<li class="isub2">Stop the routine going on, and proceed with a new routine.</li>
<li class="isub2">Permit printing, or prevent printing; etc.</li>
</ul>

<p class="no-indent"><span class="pagenum" id="Page_141">[Pg 141]</span>
In this way the discriminator can:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">Distinguish between right and wrong results.</li>
<li class="isub2">Tell that a certain result is impossible.</li>
<li class="isub2">Recognize a certain result to be the answer.</li>
<li class="isub2">Control the number of repetitions of a formula.</li>
<li class="isub2">Change from one formula to another formula.</li>
<li class="isub2">Check a number against a tolerance; etc.</li>
</ul>

<h3>PROBLEMS</h3>

<p>Among the problems that have been placed on the machine successfully
are: solving the <i>differential equation</i> of a <i>trajectory</i>
(<a href="#CHAPTER_5">see Chapter 5</a>) and solving 32 <i>linear simultaneous equations</i> in
32 <i>unknowns</i> (<a href="#SUPPL_2">see Supplement 2</a>). In the second case,
the routine tapes were designed to apply equally well to 11 to 100 linear equations
in 11 to 100 unknowns. However, the machine can do a very broad class
of problems, including, for example, computing a personal income tax.
This calculation with all its complexity of choices cannot be placed
on any of the mechanical brains described in previous chapters. The
machine can, of course, be used to calculate any tables that we may
wish to refer to.</p>

<h3>AN APPRAISAL OF THE CALCULATOR</h3>

<p>The Bell Telephone Laboratories general-purpose relay computer is
probably the best mechanical brain made up to the end of 1947, in
regard to the two important factors of reliability and versatility.</p>

<h4>Reliability</h4>

<p>The machine produces results that are practically 100 per cent
reliable, for the machine checks each step before taking the next one.
The checking principle is that exactly a certain number of relays must
be energized. For example, as we said before, for each decimal digit
there are 7 relays. Exactly 2 of these relays must be energized—no
more, no less. If this does not happen, the machine stops at once
without losing any numbers. Lights shine for many circuits in the
<span class="pagenum" id="Page_142">[Pg 142]</span>
control panel, and, if you compare what they ought to show with
what they do show, you can usually find at once the location of the
mistake. The trouble may be a speck of dirt between two contact points
on a relay, and, when it is brushed away, the machine can go right
ahead from where it stopped. According to a statement by Franz L.
Alt, director of the computing laboratory at the Ballistic Research
Laboratories, in December 1947, “the Bell machine had not given a
single wrong result in eight months of operation, except when operators
interfered with its normal running.”</p>

<p>To guard against the risk of putting tapes in the wrong transmitters,
the machine will check by the instructions contained in the tapes that
the right tapes are in the right places.</p>

<h4>Time Required</h4>

<p>The time required to do problems on this mechanical brain is perhaps
longer than on the others. The numbers are handled digit by digit on
the input tapes, and the typewriter in the recorder moves space by
space in order to get to the proper writing point. These are slow
procedures. The speeds of numerical operation are: addition, ³/₁₀
second; multiplication, 1 second on the average; division, 2.7 seconds
on the average; square root, 4.5 seconds on the average; logarithm,
about 15 seconds.</p>

<h4>Staff</h4>

<p>In order to operate the machine, the staff required is: one maintenance
man; one mathematical engineer; about six girls for punching tape,
etc., depending on the number of problems to be handled at the rate of
about one problem per week per girl. Unlike any of the other mechanical
brains built by the end of 1947, this machine will run unattended.</p>

<h4>Maintenance</h4>

<p>The relays in the machine will operate for years with no failure; they
have the experience of standard telephone techniques built into them.
Under laboratory conditions this type of relay had by 1946 operated
successfully much more than 100 million times. The tape feeding
and reading equipment in the machine may be maintained by periodic
<span class="pagenum" id="Page_143">[Pg 143]</span>
inspection and service. The total number of teletype transmitters in
the machine is 38. If one fails, it is easy to plug in a spare.</p>

<p>The total power required for the machine is about 28 horsepower.
Batteries are furnished so that, if the power supply should be
interrupted, the machine can still operate for as long as a half-hour.</p>

<h4>Cost</h4>

<p>The cost of production of this machine in the size of 4 problem
positions and 2 computers has been roughly estimated as half a million
dollars. This cost includes material, manufacture, installation, and
testing. No development cost is included in this figure. Instead, the
cost of development has been reckoned as squaring with patents and
other contributions of the work to the telephone switching art.</p>

<p>It is unlikely that the general-purpose relay computer will be
manufactured generally. The pressure of orders for telephones, the
need to catch up with the backlog of demand, and the development of
electronic computers—all indicate that the Bell system will hardly
go further with this type of computer. In an emergency, however, the
Bell system would probably construct such machines for the government,
if requested. In the meantime, many principles first used in the
general-purpose relay computer are likely to find applications in
telephone system work. In fact, a present major development being
pursued in the telephone sections of Bell Laboratories is the
application of the computer principles to the automatic computation
of telephone bills.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_144">[Pg 144]</span></p>
<h2 class="nobreak" id="CHAPTER_9">Chapter 9<br />
<span class="h_subtitle">REASONING:<br />
THE KALIN-BURKHART<br />LOGICAL-TRUTH CALCULATOR</span></h2>
</div>

<p>So far we have talked about mechanical brains that are mathematicians.
They are fond of numbers; their main work is with numbers; and the
other kinds of thinking they do are secondary. We now come to a
mechanical brain that is a logician. It is fond of reasoning—logic;
its main work is with what is logically true and what is logically
false; and it does not handle numbers. This mechanical brain was
finished in June 1947. It is called the <i>Kalin-Burkhart Logical-Truth
Calculator</i>. As its name tells, it calculates <i>logical truth</i>.
Now what do we mean by that?</p>

<h3>TRUTH</h3>

<p>To be true or false is a property of a statement. Usually we say that
a statement is true when it expresses a fact. For example, take the
statement “Salt dissolves in water.” We consider this statement to be
true because it expresses a fact. Actually, in this case we can roughly
prove the fact ourselves. We take a bowl, put some water in it, and put
in a little salt. After a while we look into the water and notice that
no salt whatever is to be seen.</p>

<p>Of course, this statement, like many another, occurs in a
<i>context</i> where certain things are understood. One of the
understandings here, for example, is “a small amount of salt in a much
larger amount of water.” For if we put a whole bag full of salt in just
a little water, not all the salt will dissolve. Nearly every statement
occurs in a context that we must know if we are to decide whether the
statement is true or false.
<span class="pagenum" id="Page_145">[Pg 145]</span></p>

<h3>LOGICAL TRUTH</h3>

<p>Logical truth is different from ordinary truth. With logical truth
we appeal not to facts but to suppositions. Usually we say that a
statement is logically true when it follows logically from certain
suppositions. In other words, we play a game that has useful, even
wonderful, results. The game starts with “if” or “suppose” or “let us
assume.” While the game lasts, any statement is logically true if it
follows logically from the suppositions.</p>

<p>For example, let us take five statements:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">1. “The earth is flat like a sheet of paper.”</li>
<li class="isub2">2. “The earth is round like a ball.”</li>
<li class="isub2">3. “John Doe travels as fast as he can, without turning</li>
<li class="isub4">to left or to right, for many days.”</li>
<li class="isub2">4. “John Doe will fall off the earth.”</li>
<li class="isub2">5. “John Doe will arrive back at his starting point.”</li>
</ul>

<p class="no-indent">Let us also take a certain context in which: We
know what we mean by such words as “earth,” “flat,” “falling,” etc.;
we have other statements and understandings such as “if John Doe walks
off the edge of a cliff, he will fall,” “a flat sheet of paper has an
edge,” etc. In this context, if statements 1 and 3 are supposed, then
statement 4 is logically true. On the other hand, if statements 2 and 3
are supposed, then statement 5 is logically true. Of course, for many
centuries, nearly all men believed statement 1; and the importance of
the years 1492 to 1521 (Columbus to Magellan) is linked with the final
proof that statement 2 expresses a fact. So, depending on the game,
or the context, whichever we wish to call it, almost any statement
can be logically true. What we become interested in, therefore,
is the connections between statements which make them <i>follow
logically</i>.</p>

<h3>LOGICAL PATTERNS</h3>

<p>Perhaps the most familiar example of “following logically” is a pattern
of words like the following:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">1. All igs are ows.</li>
<li class="isub2">2. All ows are umphs.</li>
<li class="isub2">3. Therefore, all igs are umphs.</li>
</ul>

<p class="no-indent"><span class="pagenum" id="Page_146">[Pg 146]</span>
If statements 1 and 2 are supposed, then statement 3 is logically true.
In other words, statement 3 logically follows from statements 1 and 2.
This word pattern is logically true, no matter what substitutions we
make for igs, ows, and umphs. For example, we can replace igs by men,
ows by animals, and umphs by mortals, and obtain:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">4. All men are animals.</li>
<li class="isub2">5. All animals are mortals.</li>
<li class="isub2">6. Therefore, all men are mortals.</li>
</ul>

<p class="no-indent">The invented words “igs,” “ows,” “umphs” mark
places in the <i>logical pattern</i> where we can insert any names we
are interested in. The words “all,” “are,” “therefore” and the ending
s mark the logical pattern. Of course, instead of using invented words
like “igs,” “ows,” “umphs” we would usually put <i>A</i>’s, <i>B</i>’s,
<i>C</i>’s. This logical pattern is called a <i>syllogism</i> and is
one of the most familiar. But there are even simpler logical patterns
that are also familiar.</p>

<h3>THE SIMPLEST LOGICAL PATTERNS</h3>

<p>Many simple logical patterns are so familiar that we often use them
without being conscious of doing so. The simple logical patterns are
marked by words like “and,” “or,” “else,” “not,” “if,” “then,” “only.”
In the same way, simple arithmetical patterns are marked by words like
“plus,” “minus,” “times,” “divided by.”</p>

<p>Let us see what some of these simple logical patterns are. Suppose that
we take two statements about which we have no factual information that
might interfere with logical supposing:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">1. John Doe is eligible for insurance.</li>
<li class="isub2">2. John Doe requires a medical examination.</li>
</ul>

<p class="no-indent">In practice, we might be concerned with such
statements when writing the rules governing a plan of insurance for a
group of employees. Here, we shall play a game:
<span class="pagenum" id="Page_147">[Pg 147]</span></p>

<div class="blockquot">
<p class="neg-indent">(1) We shall make up some new statements from
statements 1 and 2, using the words “and,” “or,” “else,” “not,” “if,”
“then,” “only.”</p>

<p class="neg-indent">(2) We shall examine the logical patterns that we
can make.</p>

<p class="neg-indent">(3) We shall see what we can find out about their
logical truth.</p>
</div>

<p class="no-indent">Suppose we make up the following statements:</p>

<div class="blockquot">
<p class="neg-indent">3. John Doe is not eligible for insurance.</p>

<p class="neg-indent">4. John Doe does not require a medical
examination.</p>

<p class="neg-indent">5. John Doe is eligible for insurance and
requires a medical examination.</p>

<p class="neg-indent">6. John Doe is eligible for insurance, and John
Doe is eligible for insurance.</p>

<p class="neg-indent">7. John Doe is eligible for insurance, or John
Doe requires a medical examination.</p>

<p class="neg-indent">8. If John Doe is eligible for insurance, then he
requires a medical examination.</p>

<p class="neg-indent">9. John Doe requires a medical examination if and
only if he is eligible for insurance.</p>

<p class="neg-indent">10. John Doe is eligible for insurance or else he
requires a medical examination.</p>
</div>

<p class="no-indent">Now clearly it is troublesome to repeat quantities of words when we
are interested only in the way that “and,” “or,” “else,” “not,” “if,”
“then,” “only” occur. So, let us use just 1 and 2 for the two original
statements, remembering that “1 <span class="smcap">and</span> 2” means here “statement 1
<span class="allsmcap">AND</span> statement 2” and does not mean 1 plus 2. Then we have:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary="" cellpadding="2" >
  <tbody><tr>
      <td class="tdr">3:</td>
      <td class="tdl_ws1"><span class="smcap">not</span>-1</td>
   </tr><tr>
      <td class="tdr">4:</td>
      <td class="tdl_ws1"><span class="smcap">not</span>-2</td>
   </tr><tr>
      <td class="tdr">5:</td>
      <td class="tdl_ws1">1 <span class="smcap">and</span> 2</td>
   </tr><tr>
      <td class="tdr">6:</td>
      <td class="tdl_ws1">1 <span class="smcap">and</span> 1</td>
   </tr><tr>
      <td class="tdr">7:</td>
      <td class="tdl_ws1">1 <span class="smcap">or</span> 2</td>
   </tr><tr>
      <td class="tdr">8:</td>
      <td class="tdl_ws1"><span class="smcap">if</span> 1, <span class="smcap">then</span> 2</td>
   </tr><tr>
      <td class="tdr">9:</td>
      <td class="tdl_ws1">1 <span class="smcap">if and only if</span> 2</td>
   </tr><tr>
      <td class="tdr">10:</td>
      <td class="tdl_ws1">1 <span class="smcap">or else</span> 2</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Here then are some simple logical patterns that we can make.</p>

<h3>CALCULATION OF LOGICAL TRUTH</h3>

<p>Now what can we find out about the logical truth of statements 3 to 10?
<span class="pagenum" id="Page_148">[Pg 148]</span>
If we know something about the truth or falsity of statements 1 and 2,
what will logically follow about the truth or falsity of statements
3 to 10? In other words, how can we calculate the logical truth of
statements 3 to 10, given the truth or falsity of statements 1 and 2?</p>

<p>For example, 3 is <span class="smcap">not</span>-1; that is, statement 3 is the negative
or the <i>denial</i> of statement 1. It follows logically that, if 1
is true, 3 is false; if 1 is false, 3 is true. Suppose that we use
<i>T</i> for logically true and <i>F</i> for logically false. Then we
can show our calculation of the logical truth of statement 3 in Table 1.</p>

<table id="TABLE_1-2" class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc" colspan="2"><b>Table 1</b></td>
      <td class="tdc" rowspan="5"><span class="ws2">&nbsp;</span></td>
      <td class="tdc" colspan="2"><b>Table 2</b></td>
   </tr><tr>
      <td class="tdr br">1&nbsp;</td>
      <td class="tdl">&nbsp;<span class="smcap">not</span>-1 = 3</td>
      <td class="tdr br">2&nbsp;</td>
      <td class="tdl">&nbsp;<span class="smcap">not</span>-2 = 4</td>
   </tr><tr>
      <td class="tdr br">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdr br">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
   </tr><tr>
      <td class="tdr br"><i>T</i>&nbsp;</td>
      <td class="tdl">&nbsp;<i>F</i></td>
      <td class="tdr br"><i>T</i>&nbsp;</td>
      <td class="tdl">&nbsp;<i>F</i></td>
   </tr><tr>
      <td class="tdr br"><i>F</i>&nbsp;</td>
      <td class="tdl">&nbsp;<i>T</i></td>
      <td class="tdr br"><i>F</i>&nbsp;</td>
      <td class="tdl">&nbsp;<i>T</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Our rule for calculation is: For <i>T</i> put
<i>F</i>; for <i>F</i> put <i>T</i>. Of course, exactly the same rule
applies to statements 2 and 4 (<a href="#TABLE_1-2">see Table 2</a>).
The <i>T</i> and <i>F</i> are called <i>truth values</i>. Any
meaningful statement can have truth values. This type of table is
called a <i>truth table</i>. For any logical pattern, we can make up a
truth table.</p>

<p>Let us take another example, “<span class="smcap">and</span>.” Statement 5 is the same
as statement 1 <span class="smcap">and</span> statement 2. How can we calculate the
logical truth of statement 5? We can make up the same sort of a table
as before. On the left-hand side of this table, there will be 4 cases:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">1. Statement 1 true, statement 2 true.</li>
<li class="isub2">2. Statement 1 false, statement 2 true.</li>
<li class="isub2">3. Statement 1 true, statement 2 false.</li>
<li class="isub2">4. Statement 1 false, statement 2 false.</li>
</ul>

<p class="no-indent">On the right-hand side of this table, we shall
put down the truth value of statement 5. Statement 5 is true if both
statements 1 and 2 are true; statement 5 is false in the other cases.
We know this from our common everyday experience with the meaning of
“<span class="smcap">and</span>” between statements. So we can set up
the truth table, and our rule for calculation of logical truth, in the
case of <span class="smcap">and</span>, is shown on <a href="#TABLE_3">Table 3</a>.
<span class="pagenum" id="Page_149">[Pg 149]</span></p>

<p id="TABLE_3" class="f150"><b>Table 3</b></p>
<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
      <td class="tdr br">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
      <td class="tdl">&nbsp;&nbsp;1 <span class="smcap">and</span> 2 = 5</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdc br">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdr br"><i>T</i>&nbsp;</td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdr br"><i>T</i>&nbsp;</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdr br"><i>F</i>&nbsp;</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdr br"><i>F</i>&nbsp;</td>
      <td class="tdc"><i>F</i></td>
   </tr>
 </tbody>
</table>

<p>“<span class="smcap">and</span>” and the other words and phrases joining together
the original two statements to make new statements are called <i>connectives</i>,
or <i>logical connectives</i>. The connectives that we have
illustrated in statements 7 to 10 are: <span class="smcap">or</span>,
<span class="smcap">if</span> ··· <span class="smcap">then</span>, <span class="smcap">if
and only if</span>, <span class="smcap">or else</span>.</p>

<p><a href="#TABLE_4">Table 4</a> shows the truth table that applies to
statements 7, 8, 9, and 10. This truth table expresses the calculation
of the logical truth or falsity of these statements.</p>

<p id="TABLE_4" class="f150"><b>Table 4</b></p>
<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdc br">&nbsp;</td>
      <td class="tdc_ws1">1 <span class="smcap">or</span> 2</td>
      <td class="tdc_ws1"><span class="smcap">if</span> 1, <span class="smcap">then</span> 2</td>
      <td class="tdc_ws1">1 <span class="smcap">if and only if</span> 2</td>
      <td class="tdc_ws1">1 <span class="smcap">or else</span> 2</td>
   </tr><tr>
      <td class="tdc">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
      <td class="tdc br">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
      <td class="tdc">= 7</td>
      <td class="tdc">= 8</td>
      <td class="tdc">= 9</td>
      <td class="tdc">= 10</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdc br">&nbsp;</td>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc br"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdc br"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc br"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdc br"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The “<span class="smcap">or</span>” (as in statement 7) that is
defined in the truth table is often called the <i>inclusive “or”</i> and means
“<span class="smcap">and/or</span>.” Statement 7, “1 <span class="smcap">or</span> 2,” is considered to
be the same as “1 <span class="smcap">or</span> 2 <span class="smcap">or both</span>.” There is another
“<span class="smcap">or</span>” in common use, often called the <i>exclusive “or,”</i>
meaning “<span class="smcap">or else</span>” (as in statement 10). Statement 10, “1
<span class="smcap">or else</span> 2,” is the same as “1 <span class="smcap">or</span> 2 <span class="smcap">but not
both</span>” or “<span class="smcap">either</span> 1 <span class="smcap">or</span> 2.” In ordinary English,
there is some confusion over these two “<span class="smcap">or</span>’s.” Usually we rely
on the context to tell which one is intended. Of course, such reliance
is not safe. Sometimes we rely on a necessary conflict between the
two statements connected by “<span class="smcap">or</span>” which prevents the “both”
case from being possible. In Latin the two kinds of “<span class="smcap">or</span>” were
distinguished by different words, <i>vel</i> meaning “<span class="smcap">and/or</span>,”
and <i>aut</i> meaning “<span class="smcap">or else</span>.”
<span class="pagenum" id="Page_150">[Pg 150]</span></p>

<p>The “<span class="smcap">if</span> ··· <span class="smcap">then</span>” that is defined in the truth table
agrees with our usual understanding that (1) when the “<span class="smcap">if</span>
clause” is true, the “<span class="smcap">then</span> clause” must be true; and (2) when
the “<span class="smcap">if</span> clause” is false, the “<span class="smcap">then</span> clause” may be
either true or false. The “<span class="smcap">if and only if</span>” that is defined in
the truth table agrees with our usual understanding that (1) if either
clause is true, the other is true; and (2) if either clause is false,
the other is false.</p>

<p>In statement 6, there are only two possible cases, and the truth table
is shown in <a href="#TABLE_5">Table 5</a>.</p>

<p id="TABLE_5" class="f150"><b>Table 5</b></p>
<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr br">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
      <td class="tdl">&nbsp;&nbsp;1 <span class="smcap">and</span> 1 = 6</td>
   </tr><tr>
      <td class="tdc br">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc br"><i>T</i></td>
      <td class="tdc"><i>T</i>&nbsp;</td>
   </tr><tr>
      <td class="tdc br"><i>F</i></td>
      <td class="tdc"><i>F</i>&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">We know that 6 is true if and only if 1 is true. In other
words, the statement “1 <span class="smcap">and</span> 1 <span class="smcap">if
and only if</span> 1” is true, no matter what statement 1 may refer to.
It is because of this fact that we never use a statement in the form “1
and 1”: it can always be replaced by the plain statement “1.”</p>

<h3>LOGICAL-TRUTH CALCULATION BY<br /> EXAMINING CASES AND REASONING</h3>

<p>Now you may say that this is all very well, but what good is it? Almost
anybody can use these connectives correctly and certainly has had a
great deal of practice using them. Why do we need to go into truth
values and truth tables?</p>

<p>When we draft a contract or a set of rules, we often have to consider
several conditions that give rise to a number of cases. We must avoid:</p>

<div class="blockquot">
<p class="neg-indent">1. All <i>conflicts</i>, in which two statements
that disagree apply to the same case.</p>

<p class="neg-indent">2. All <i>loopholes</i>, in which there is a case
not covered by any statement.</p>
</div>

<p class="no-indent">If we have one statement or condition only, we have to
consider 2 possible cases: the condition satisfied or the statement true;
<span class="pagenum" id="Page_151">[Pg 151]</span>
the condition not satisfied or the statement false. If we have 2
conditions, we have to consider 4 possible cases: true, true; false,
true; true, false; false, false. If we have 3 conditions, we have to
consider 8 possible cases one after the other (<a href="#TABLE_6">see Table 6</a>).</p>

<p id="TABLE_6" class="f150"><b>Table 6</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc"><span class="smcap">Case</span></td>
      <td class="tdc"><span class="smcap">1st<br />&nbsp;Condition&nbsp;</span></td>
      <td class="tdc"><span class="smcap">2nd<br />&nbsp;Condition&nbsp;</span></td>
      <td class="tdc"><span class="smcap">3rd<br />&nbsp;Condition&nbsp;</span></td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc" colspan="4">&nbsp;</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc">7</td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc">8</td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Instead of <i>T</i>’s and <i>F</i>’s, we would
ordinarily use <i>check-marks</i> <big>(✓)</big> and <i>crosses</i>
<big>(✕)</big>, which, of course, have the same meaning. We may
consider and study each case individually. In any event, we must make
sure that the proposed contract or set of rules covers all the cases
without conflicts or loopholes.</p>

<p>The number of possible cases that we have to consider doubles whenever
one more condition is added. Clearly, it soon becomes too much work
to consider each case individually, and so we must turn to a second
method, thoughtful classifying and reasoning about classes of cases.</p>

<p>Now suppose that the number of conditions increases: 4 conditions give
rise to 16 possible cases; 5, 6, 7, 8, 9, 10, ··· conditions give rise
to 32, 64, 128, 256, 512, 1024, ··· cases respectively. Because of the
large number of cases, we soon begin to make mistakes while reasoning
about classes of cases. We need a more efficient way of knowing whether
all cases are covered properly.</p>

<h3>LOGICAL-TRUTH CALCULATION<br />BY ALGEBRA</h3>

<p>One of the more efficient ways of reasoning is often called the
<i>algebra of logic</i>. This algebra is a part of a new science called
<i>mathematical logic</i>. Mathematical logic is a science that has the
following characteristics:
<span class="pagenum" id="Page_152">[Pg 152]</span></p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">It studies chiefly nonnumerical reasoning.</li>
<li class="isub2">It seeks accurate meanings and necessary consequences.</li>
<li class="isub2">Its chief instruments are efficient symbols.</li>
</ul>

<p class="no-indent">Mathematical logic studies especially the logical
relations expressed in such words as “or,” “and,” “not,” “else,” “if,”
“then,” “only,” “the,” “of,” “is,” “every,” “all,” “none,” “some,”
“same,” “different,” etc. The algebra of logic studies especially only
the first seven of these words.</p>

<p>The great thinkers of ancient Greece first studied the problems
of logical reasoning as these problems turned up in philosophy,
psychology, and debate. Aristotle originated what was called <i>formal
logic</i>. This was devoted mainly to variations of the logical
pattern shown above called the syllogism. In the last 150 years, the
fine symbolic techniques developed by mathematicians were applied to
the problems of the calculation of logical truth, and the result was
mathematical logic, much broader and much more powerful than formal
logic. A milestone in the development of mathematical logic was
<i>The Laws of Thought</i>, written by George Boole, a great English
mathematician, and published in 1854. Boole introduced the branch of
mathematical logic called the algebra of logic, also called <i>Boolean
algebra</i>. In late years, all the branches of mathematical logic have
been improved and made easier to use.</p>

<p>We can give a simple numerical example of Boolean algebra and how it
can calculate logical truth. Suppose that we take the truth value of a
statement as 1 if it is true and 0 if it is false. Now we have numbers
1 and 0 instead of letters <i>T</i> and <i>F</i>. Since they are
numbers, we can add them, subtract them, and multiply them. We can also
make up simple numerical formulas that will let us calculate logical
truth. If <i>P</i> and <i>Q</i> are statements, and if <i>p</i> and
<i>q</i> are their truth values, respectively, we have <a href="#TABLE_7">Table 7</a>.</p>

<p id="TABLE_7" class="f150"><b>Table 7</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Statement</span></th>
      <th class="tdc"><span class="smcap">Truth Value</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdl"><span class="smcap">not</span>-<i>P</i></td>
      <td class="tdl">1 - <i>p</i></td>
   </tr><tr>
      <td class="tdl"><i>P</i> <span class="smcap">and</span> <i>Q</i></td>
      <td class="tdl"><i>pq</i></td>
   </tr><tr>
      <td class="tdl"><i>P</i> <span class="smcap">or</span> <i>Q</i></td>
      <td class="tdl"><i>p</i> + <i>q</i> - <i>pq</i></td>
   </tr><tr>
      <td class="tdl"><span class="smcap">if</span> <i>P</i>, <span class="smcap">then</span> <i>Q</i></td>
      <td class="tdl">1 - <i>p</i> + <i>pq</i></td>
   </tr><tr>
      <td class="tdl"><i>P</i> <span class="smcap">if and only if</span> <i>Q</i><span class="ws2">&nbsp;</span></td>
      <td class="tdl">1 - <i>p</i> - <i>q</i> + 2<i>pq</i></td>
   </tr><tr>
      <td class="tdl"><i>P</i> <span class="smcap">or else</span> <i>Q</i></td>
      <td class="tdl"><i>p</i> + <i>q</i> - 2<i>pq</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_153">[Pg 153]</span>
For example, suppose that we have two statements <i>P</i> and <i>Q</i>:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2"><i>P</i>: John Doe is eligible for insurance.</li>
<li class="isub2"><i>Q</i>: John Doe requires a medical examination.</li>
</ul>

<p class="no-indent">To test that the truth value of “<i>P</i>
<span class="smcap">or</span> <i>Q</i>” is <i>p</i> + <i>q</i>-<i>pq</i>,
let us put down the four cases, and calculate the result (<a href="#TABLE_8">see Table 8</a>).</p>

<p id="TABLE_8" class="f150"><b>Table 8</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdc">&nbsp;&nbsp;<i>p</i>&nbsp;&nbsp;</td>
      <td class="tdc br">&nbsp;&nbsp;<i>q</i>&nbsp;&nbsp;</td>
      <td class="tdc">&nbsp;&nbsp;<i>p</i> + <i>q</i> - <i>pq</i></td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdc br">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc br">1</td>
      <td class="tdc">&nbsp;&nbsp;1 + 1 - 1 = 1</td>
   </tr><tr>
      <td class="tdc">0</td>
      <td class="tdc br">1</td>
      <td class="tdc">&nbsp;&nbsp;0 + 1 - 0 = 1</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdc br">0</td>
      <td class="tdc">&nbsp;&nbsp;1 + 0 - 0 = 1</td>
   </tr><tr>
      <td class="tdc">0</td>
      <td class="tdc br">0</td>
      <td class="tdc">&nbsp;&nbsp;0 + 0 - 0 = 0</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Now we know that <i>P</i> or <i>Q</i> is true if
and only if either one or both of <i>P</i> and <i>Q</i> are true, and
thus we see that the calculation is correct.</p>

<p>The algebra of logic (<a href="#SUPPL_2">see also Supplement 2</a>)
is a more efficient way of calculating logical truth. But it is still
a good deal of work to use the algebra. For example, if we have 10
conditions, we shall have 10 letters like <i>p</i>, <i>q</i> to handle
in calculations. Thus we need a still more efficient way.</p>

<h3>CALCULATION OF CIRCUITS BY<br />THE ALGEBRA OF LOGIC</h3>

<p>In 1937 a research assistant at Massachusetts Institute of Technology,
Claude E. Shannon, was studying for his degree of master of science.
He was enrolled in the Department of Electrical Engineering. He was
interested in automatic switching circuits and wondered why an algebra
should not apply to them. He wrote his thesis on the answer to this
question and showed that:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">(1) There is an algebra that applies to switching circuits.</li>
<li class="isub2">(2) It is the algebra of logic.</li>
</ul>

<p class="no-indent">A paper, based on his thesis, was published in
1938 in the <i>Transactions of the American Institute of Electrical
Engineers</i> with the title “A Symbolic Analysis of Relay and
Switching Circuits.”
<span class="pagenum" id="Page_154">[Pg 154]</span></p>

<div class="figcenter">
  <img id="FIG_1-9" src="images/i_154a.jpg" alt="" width="600" height="138" />
  <p class="f120"><span class="smcap">Fig. 1.</span> Switches in series.</p>
</div>

<p>For a simple example of what Shannon found out, suppose that we have
two switches, 1, 2, in series (<a href="#FIG_1-8">see Fig. 1</a>). When
do we get current flowing from the source to the sink? There are 4
possible cases and results (<a href="#TABLE_9">see Table 9</a>).</p>

<p id="TABLE_9" class="f150"><b>Table 9</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdl"><span class="smcap">&nbsp;Switch 1<br />&nbsp;is closed&nbsp;</span></th>
      <th class="tdl"><span class="smcap">&nbsp;&nbsp;Switch 2&nbsp;&nbsp;<br />&nbsp;&nbsp;is closed&nbsp;&nbsp;</span></th>
      <th class="tdl"><span class="smcap">&nbsp;Current&nbsp;<br />&nbsp;&nbsp;flows</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
   </tr><tr>
      <td class="tdc">No</td>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
   </tr><tr>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
   </tr><tr>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Now what does this table remind us of? It is
precisely the truth table for “<span class="smcap">and</span>.” It
is just what we would have if we wrote down the truth table of the
statement “Switch 1 is closed <span class="smcap">and</span>
switch 2 is closed.”</p>

<div class="figcenter">
  <img id="FIG_2-9" src="images/i_154b.jpg" alt="" width="600" height="277" />
  <p class="f120 space-below2"><span class="smcap">Fig. 2.</span> Switches in parallel.</p>
  <img id="FIG_3-9" src="images/i_154c.jpg" alt="" width="600" height="225" />
  <p class="f120"><span class="smcap">Fig. 3.</span> Switch open—current flowing.</p>
</div>

<p>Suppose that we have two switches 1, 2 in parallel (<a href="#FIG_2-9">see Fig. 2</a>).
When do we get current flowing from the source to the sink?
<span class="pagenum" id="Page_155">[Pg 155]</span>
Answer: when either one or both of the switches are closed. Therefore,
this circuit is an exact representation of the statement “Switch 1 is
closed or switch 2 is closed.”</p>

<p>Suppose that we have a switch that has two positions, and at any time
must be at one and only one of these two positions (<a href="#FIG_3-9">see Fig. 3</a>).
Suppose that current flows only when the switch is open. There are two
possible cases and results (<a href="#TABLE_10">see Table 10</a>).</p>

<p id="TABLE_10" class="f150"><b>Table 10</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdl"><span class="smcap">&nbsp;Switch 1<br />&nbsp;is closed&nbsp;</span></th>
      <th class="tdl"><span class="smcap">&nbsp;Current&nbsp;<br />&nbsp;&nbsp;flows</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
   </tr><tr>
      <td class="tdc">No</td>
      <td class="tdc">Yes</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">This is like the truth table for “<span
class="smcap">not</span>”; and this circuit is an exact representation
of the statement “Switch 1 is <span class="smcap">not</span> closed.”
(<i>Note</i>: These examples are in substantial agreement with
Shannon’s paper, although Shannon uses different conventions.)</p>

<p>We see, therefore, that there is a very neat correspondence between the
algebra of logic and automatic switching circuits. Thus it happens that:</p>

<div class="blockquot">
<p class="neg-indent">1. The algebra of logic can be used in the
calculation of some electrical circuits.</p>

<p class="neg-indent">2. Some electrical circuits can be used in the
calculations of the algebra of logic.</p>
</div>

<p class="no-indent">This fact is what led to the next step.</p>

<h3>LOGICAL-TRUTH CALCULATION<br /> BY MACHINE</h3>

<p>In 1946 two undergraduates at Harvard University, Theodore A. Kalin
and William Burkhart, were taking a course in mathematical logic.
They noticed that there were a large number of truth tables to be
worked out. To work them out took time and effort and yet was a rather
tiresome automatic process not requiring much thinking. They had had
some experience with electrical circuits. Knowing of Shannon’s work,
they said to each other, “Why not build an electrical machine to
calculate truth tables?”</p>

<p>They took about two months to decide on the essential design
of the machine:
<span class="pagenum" id="Page_156">[Pg 156]</span></p>

<div class="blockquot">
<p class="neg-indent">1. The machine would have dial switches in which
logical connectives would be entered.</p>

<p class="neg-indent">2. It would have dial switches in which the
numbers of statements like 1, 2, 3 ··· would be entered.</p>

<p class="neg-indent">3. It would scan the proper truth table line by
line by sending electrical pulses through the dial switches.</p>

<p class="neg-indent">4. It would compute the truth or falsehood of the
whole expression.</p>
</div>

<h3>CONSTRUCTION AND COMPLETION OF THE<br /> KALIN-BURKHART LOGICAL-TRUTH
CALCULATOR</h3>

<p>With the designs in mind, Kalin and Burkhart bought some war surplus
materials, including relays, switches, wires, lights, and a metal
box about 30 inches long by 16 inches tall, and 13 inches deep. From
March to June, 1947, they constructed a machine in their spare time,
assembling and mounting the parts inside the box. The total cost of
materials was about $150. In June the machine was demonstrated in
Cambridge, Mass., before several logicians and engineers, and in August
it was moved for some months to the office of a life insurance company.
There some study was made of the possible application of the machine in
drafting contracts and rules.</p>

<h3>GENERAL ORGANIZATION<br /> OF THE MACHINE</h3>

<p>The logical-truth calculator built by Kalin and Burkhart is not giant
in size, although giant in capacity. Like other mechanical brains,
the machine is made up of many pieces of a rather small number of
different kinds of parts. The machine contains about 45 dial switches,
23 snap switches (or two-position switches), 85 relays, 6 push buttons,
less than a mile of wire, etc. The lid of the metal box is the front,
vertical panel of the machine.</p>

<h3>UNITS OF THE MACHINE</h3>

<p>The machine contains 16 units. These units are listed in
<a href="#TABLE_11">Table 11</a>, in approximately the order in which they
appear on the front panel of the machine—row by row from top to bottom,
and from left to right in each row.
<span class="pagenum" id="Page_157">[Pg 157]</span></p>

<p id="TABLE_11" class="f150"><b>Table 11</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols">
  <thead><tr>
      <th class="tdc bb" colspan="7">UNITS, THEIR NAMES, AND SIGNIFICANCE</th>
   </tr><tr>
      <th class="tdc bb"><span class="smcap">Unit</span></th>
      <th class="tdc bb"><span class="smcap">Row</span></th>
      <th class="tdc bb"><span class="smcap">Part</span></th>
      <th class="tdc bb"><span class="smcap">No.</span></th>
      <th class="tdc bb"><span class="smcap">Mark</span></th>
      <th class="tdc bb"><span class="smcap">Name</span></th>
      <th class="tdc bb"><span class="smcap">Significance</span></th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc_top">1</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">Small red<br />lights</td>
      <td class="tdc_top">12</td>
      <td class="tdc_top">—</td>
      <td class="tdc_top"><i>Statement truth-<br />value lights</i></td>
      <td class="tdl_top">Output: glows if<br />&nbsp;statement is<br />&nbsp;assumed true<br />&nbsp;in the case</td>
   </tr><tr>
      <td class="tdc_top">2</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">2-position<br />snap switches</td>
      <td class="tdc_top">12</td>
      <td class="tdc_top"><big>~</big></td>
      <td class="tdc_top"><i>Statement denial<br />switches</i></td>
      <td class="tdl_top">Input: if up,<br />&nbsp;statement<br />&nbsp;is denied</td>
   </tr><tr>
      <td class="tdc_top">3</td>
      <td class="tdc_top">2</td>
      <td class="tdc_top">14-position<br />dial switches</td>
      <td class="tdc_top">12</td>
      <td class="tdc_top"><i>V</i></td>
      <td class="tdc_top"><i>Statement<br />switches</i></td>
      <td class="tdl_top">Input of<br />&nbsp;statements</td>
   </tr><tr>
      <td class="tdc_top bb">4</td>
      <td class="tdc_top bb">3</td>
      <td class="tdc_top bb">4-position<br />dial switches</td>
      <td class="tdc_top bb">11</td>
      <td class="tdc_top bb"><i>k</i></td>
      <td class="tdc_top bb"><i>Connective<br />switches</i></td>
      <td class="tdl_top bb">Input of<br />&nbsp;connectives:<br />&nbsp;∧ (and),<br />&nbsp;∨ (or),<br />
                                     &nbsp;▲ (if-then),<br />&nbsp;▼ (if and only if)</td>
   </tr><tr>
      <td class="tdc_top">5</td>
      <td class="tdc_top">4</td>
      <td class="tdc_top">11-position<br />dial switches</td>
      <td class="tdc_top">11</td>
      <td class="tdc_top"><i>A</i></td>
      <td class="tdc_top"><i>Antecedent<br />switches</i></td>
      <td class="tdl_top">Input of<br />&nbsp;antecedents</td>
   </tr><tr>
      <td class="tdc_top">6</td>
      <td class="tdc_top">5</td>
      <td class="tdc_top">11-position<br />dial switches</td>
      <td class="tdc_top">11</td>
      <td class="tdc_top"><i>C</i></td>
      <td class="tdc_top"><i>Consequent<br />switches</i></td>
      <td class="tdl_top">Input of consequents</td>
   </tr><tr>
      <td class="tdc_top">7</td>
      <td class="tdc_top">6</td>
      <td class="tdc_top">2-position<br />snap switches</td>
      <td class="tdc_top">11</td>
      <td class="tdc_top"><i>S</i></td>
      <td class="tdc_top"><i>Stop switches</i></td>
      <td class="tdl_top">Input: if up, associates<br />&nbsp;connective to main<br />&nbsp;truth-value light</td>
   </tr><tr>
      <td class="tdc_top bb">8</td>
      <td class="tdc_top bb">6</td>
      <td class="tdc_top bb">2-position<br />snap switches</td>
      <td class="tdc_top bb">11</td>
      <td class="tdc_top bb"><big>~</big></td>
      <td class="tdc_top bb"><i>Connective denial<br />switches</i></td>
      <td class="tdl_top bb">Input: if up, statement<br />&nbsp;produced by connective<br />&nbsp;is denied</td>
   </tr><tr>
      <td class="tdc_top">9</td>
      <td class="tdc_top">7</td>
      <td class="tdc_top">Red light and<br />large button</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">Start</td>
      <td class="tdc_top"><i>Automatic start</i></td>
      <td class="tdl_top">Input: causes the calc.<br />&nbsp;to start down a truth<br />&nbsp;table automatically</td>
   </tr><tr>
      <td class="tdc_top">10</td>
      <td class="tdc_top">7</td>
      <td class="tdc_top">Red light and<br />2 buttons</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">Start<br />Stop</td>
      <td class="tdc_top"><i>Power switch</i></td>
      <td class="tdl_top">Input: turns the power<br />&nbsp;on or off</td>
   </tr><tr>
      <td class="tdc_top">11</td>
      <td class="tdc_top">7</td>
      <td class="tdc_top">2-position<br />snap switch<br />and red button</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">Stop</td>
      <td class="tdc_top">“<i>Stop-on-true-or-<br />false</i>” <i>switch</i></td>
      <td class="tdl_top">Input: causes the calc.<br />&nbsp;to stop either on<br />&nbsp;true cases or on<br />&nbsp;false cases</td>
   </tr><tr>
      <td class="tdc_top bb">12</td>
      <td class="tdc_top bb">7</td>
      <td class="tdc_top bb">Yellow light</td>
      <td class="tdc_top bb">1</td>
      <td class="tdc_top bb">—</td>
      <td class="tdc_top bb"><i>Main truth-value<br />light</i></td>
      <td class="tdl_top bb">Output: glows if the<br />&nbsp;statement produced<br />&nbsp;by the main connective<br />&nbsp;is true for the case</td>
   </tr><tr>
      <td class="tdc_top">13</td>
      <td class="tdc_top">7</td>
      <td class="tdc_top">Large button</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">Man.<br />Pulse</td>
      <td class="tdc_top"><i>Manual pulse<br />button</i></td>
      <td class="tdl_top">Input: causes the calc.<br />&nbsp;to go to the next<br />&nbsp;line of a truth table</td>
   </tr><tr>
      <td class="tdc_top">14</td>
      <td class="tdc_top">7</td>
      <td class="tdc_top">11-position<br />dial switch</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top"><i>kⱼ</i></td>
      <td class="tdc_top"><i>Connective check<br />switch and light</i></td>
      <td class="tdl_top">Output: glows when any<br />&nbsp;specified connective<br />&nbsp;is true</td>
   </tr><tr>
      <td class="tdc_top">15</td>
      <td class="tdc_top">7</td>
      <td class="tdc_top">13-position<br />dial switch</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">TT<br />Row<br />Stop</td>
      <td class="tdc_top">“<i>Truth-table-row-<br />stop</i>” <i>switch</i></td>
      <td class="tdl_top">Input: causes the calc.<br />&nbsp;to stop on the<br />&nbsp;
                          last row of the<br />&nbsp;truth table</td>
   </tr><tr>
      <td class="tdc_top">16</td>
      <td class="tdc_top">Be-<br />tween<br />6 &amp; 7</td>
      <td class="tdc_top">Continuous<br />dial knob<br />and button</td>
      <td class="tdc_top">1</td>
      <td class="tdc_top">—</td>
      <td class="tdc_top"><i>Timing control<br />knob</i></td>
      <td class="tdl_top">Input: controls the<br />&nbsp;speed at which the<br />&nbsp;
                          calculator scans rows<br />&nbsp;of the truth table</td>
   </tr>
 </tbody>
</table>

<p class="blockquot"><span class="pagenum" id="Page_158">[Pg
158]</span> Some of the words appearing in this table need to be
defined. <i>Connective</i> here means “<span class="smcap">and</span>,”
“<span class="smcap">or</span>,” “<span class="smcap">if</span> ···
<span class="smcap">then</span>,” “<span class="smcap">if and only if</span>.”
Only these four connectives appear on the machine; others when needed
can be constructed from these. The symbols used for these connectives
in mathematical logic are <big>∧, ∨, ▲, ▼</big>. These signs serve as labels
for the connective switch points. In this machine, when there is a
connective between two statements, the statement that comes before is
called the <i>antecedent</i> and the statement that comes after is
called the <i>consequent</i>.</p>

<h3>HOW INFORMATION GOES<br /> INTO THE MACHINE</h3>

<p>Of the 16 units 13 are input units. They control the setup of the
machine so that it can solve a problem. Of the 13 input units, those
that have the most to do with taking in the problem are shown
in <a href="#TABLE_12">Table 12</a>.</p>

<p id="TABLE_12" class="f150"><b>Table 12</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols">
  <thead><tr>
      <th class="tdc bb"><span class="smcap">Unit</span></th>
      <th class="tdc bb"><span class="smcap">Name of<br />Switches</span></th>
      <th class="tdc bb"><span class="smcap">Mark</span></th>
      <th class="tdc bb"><span class="smcap">&nbsp;Kind of&nbsp;<br />Switch</span></th>
      <th class="tdc bb"><span class="smcap">Switch Settings</span></th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc_top">3</td>
      <td class="tdc_top">Statement</td>
      <td class="tdc_top"><i>V</i>₁ to<br /><i>V</i>₁₂</td>
      <td class="tdc_top">Dial</td>
      <td class="tdl_top">Statements 1 to 12 or<br />&nbsp;constant <i>T</i> or <i>F</i></td>
   </tr><tr>
      <td class="tdc_top">2</td>
      <td class="tdc_top">Statement<br />denial</td>
      <td class="tdc_top"><big>~</big></td>
      <td class="tdc_top">Snap</td>
      <td class="tdl_top">Affirmative (down)<br />&nbsp;or negative (up)</td>
   </tr><tr>
      <td class="tdc_top">4</td>
      <td class="tdc_top">Connective</td>
      <td class="tdc_top"><i>k</i>₁ to<br /><i>k</i>₁₁</td>
      <td class="tdc_top">Dial</td>
      <td class="tdl_top">∧ (<span class="smcap">and</span>),<br />∨ (<span class="smcap">or</span>),<br />
                          ▲ (<span class="smcap">if-then</span>),<br />▼ (<span class="smcap">if and only if</span>)</td>
   </tr><tr>
      <td class="tdc_top">8</td>
      <td class="tdc_top">Connective<br />denial</td>
      <td class="tdc_top"><big>~</big></td>
      <td class="tdc_top">Snap</td>
      <td class="tdl_top">Affirmative (down) or<br />&nbsp;negative (up)</td>
   </tr><tr>
      <td class="tdc_top">5</td>
      <td class="tdc_top">Antecedent</td>
      <td class="tdc_top"><i>A</i>₁ to<br /><i>A</i>₁₁</td>
      <td class="tdc_top">Dial</td>
      <td class="tdl_top"><i>V</i> or various <i>k</i>’s</td>
   </tr><tr>
      <td class="tdc_top">6</td>
      <td class="tdc_top">Consequent</td>
      <td class="tdc_top"><i>C</i>₁ to<br /><i>C</i>₁₁</td>
      <td class="tdc_top">Dial</td>
      <td class="tdl_top"><i>V</i> or various <i>k</i>’s</td>
   </tr><tr>
      <td class="tdc_top">7</td>
      <td class="tdc_top">Stop</td>
      <td class="tdc_top"><i>S</i>₁ to<br /><i>S</i>₁₁</td>
      <td class="tdc_top">Snap</td>
      <td class="tdl_top">Not connected (down)<br />&nbsp;or connected (up)</td>
   </tr>
 </tbody>
</table>

<p>The first step in putting a problem on the machine is to express the
whole problem as a single compound statement that we want to know the
truth or falsity of. We express the single compound statement in a form
such as the following:</p>

<p class="f120 no-wrap"><i>V k V k V k V k V k V k V k V k V k V k V k V</i></p>

<p class="no-indent"><span class="pagenum" id="Page_159">[Pg 159]</span>
where each <i>V</i> represents a statement, each <i>k</i> represents a
connective, and we know the grouping, or in other words, we know the
antecedent and consequent of each connective.</p>

<p>For example, let us choose a problem with an obvious answer:</p>

<p class="blockquot"><b><span class="smcap">Problem.</span></b> Given:
statement 1 is true; and if statement 1 is true, then statement 2 is
true; and if statement 2 is true, then statement 3 is true; and if
statement 3 is true, then statement 4 is true. Is statement 4 true?</p>

<p>How do we express this whole problem in a form that will go on the
machine? We express the whole problem as a single compound statement
that we want to know the truth or falsity of:</p>

<p class="f120">If <big>[</big>1 and (if 1 then 2) and (if 2 then 3) and
(if 3 then 4)<big>]</big>, then 4</p>

<p class="no-indent">The 8 statements occurring in this problem
are, respectively: 1 1 2 2 3 3 4 4. These are the values at which
the <i>V</i> switches (the statement dial switches, Unit 2) from
<i>V</i>₁ to <i>V</i>₈ are set. The 7 connectives occurring in this
problem are, respectively: <span class="smcap">and</span>,
<span class="smcap">if-then</span>, <span class="smcap">and</span>,
<span class="smcap">if-then</span>, <span class="smcap">and</span>,
<span class="smcap">if-then</span>, <span class="smcap">if-then</span>.
These are the values at which the <i>k</i> switches (the connective dial
switches, Unit 4) from <i>k</i>₁ to <i>k</i>₇ are set.</p>

<p>A grouping (one of several possible groupings) that specifies
the antecedent and consequent of each connective is the following:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdl">1</td>
      <td class="tdl"><span class="smcap">and</span></td>
      <td class="tdl">1</td>
      <td class="tdl"><span class="smcap">if-then</span></td>
      <td class="tdl">2</td>
      <td class="tdl"><span class="smcap">and</span></td>
      <td class="tdl">2</td>
      <td class="tdl"><span class="smcap">if-then</span></td>
      <td class="tdl">3</td>
      <td class="tdl"><span class="smcap">and</span></td>
      <td class="tdl">3</td>
      <td class="tdl"><span class="smcap">if-then</span></td>
      <td class="tdl">4</td>
      <td class="tdl"><span class="smcap">if-then</span></td>
      <td class="tdl">4</td>
   </tr><tr>
      <td class="tdl">&nbsp;</td>
      <td class="tdl">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl bb">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl bb">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl bb">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl">&nbsp;</td>
      <td class="tdl">&nbsp;</td>
   </tr><tr>
      <td class="tdl" colspan="3"></td>
      <td class="tdc"><i>k</i>₂</td>
      <td class="tdl" colspan="3">&nbsp;</td>
      <td class="tdc"><i>k</i>₄</td>
      <td class="tdl" colspan="3"></td>
      <td class="tdc"><i>k</i>₆</td>
      <td class="tdl" colspan="3"></td>
   </tr><tr>
      <td class="tdl">|</td>
      <td class="tdl bb" colspan="3">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl bb" colspan="5">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdc" colspan="5"><i>k</i>₁</td>
      <td class="tdl">&nbsp;</td>
      <td class="tdc" colspan="7"><i>k</i>₅</td>
      <td class="tdl" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdl">|</td>
      <td class="tdc bb" colspan="11">&nbsp;</td>
      <td class="tdl">|</td>
      <td class="tdl" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdc" colspan="13"><i>k</i>₃</td>
      <td class="tdl" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdl">|</td>
      <td class="tdc bb" colspan="13">&nbsp;</td>
      <td class="tdl">|</td>
   </tr><tr>
      <td class="tdc" colspan="15"><i>k</i>₇</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The grouping has here been expressed graphically
with lines but may be expressed in the normal mathematical way with
parentheses and brackets as follows:
<span class="pagenum" id="Page_160">[Pg 160]</span></p>

<p class="f120">
<span class="fontsize_200">{</span><span class="fontsize_150">[</span>
1 <span class="smcap">and</span> (1 <span class="smcap">if-then</span> 2)<span class="fontsize_150">]</span>
<span class="smcap">and</span> <span class="fontsize_150">[</span>(2
<span class="smcap">if-then</span> 3) <span class="smcap">and</span> (3 <span class="smcap">if-then</span> 4)
<span class="fontsize_150">]</span>
<span class="fontsize_200">}</span>
<span class="smcap">if-then</span> 4.</p>

<p class="no-indent">So the values at which the antecedent and consequent
dial switches are set are as shown in <a href="#TABLE_13">Table 13</a>.</p>

<p id="TABLE_13" class="f150"><b>Table 13</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols">
  <thead><tr>
      <th class="tdc bb"><span class="smcap">Connective&nbsp;</span></th>
      <th class="tdc bb"><span class="smcap">&nbsp;Antecedent&nbsp;<br />Switch</span></th>
      <th class="tdc bb"><span class="smcap">&nbsp;Set at&nbsp;</span></th>
      <th class="tdc bb"><span class="smcap">&nbsp;Consequent&nbsp;<br />Switch</span></th>
      <th class="tdc bb"><span class="smcap">&nbsp;Set at</span></th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc"><i>k</i>₁</td>
      <td class="tdc"><i>A</i>₁</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>C</i>₁</td>
      <td class="tdc"><i>k</i>₂</td>
   </tr><tr>
      <td class="tdc"><i>k</i>₂</td>
      <td class="tdc"><i>A</i>₂</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>C</i>₂</td>
      <td class="tdc"><i>V</i></td>
   </tr><tr>
      <td class="tdc"><i>k</i>₃</td>
      <td class="tdc"><i>A</i>₃</td>
      <td class="tdc"><i>k</i>₁</td>
      <td class="tdc"><i>C</i>₃</td>
      <td class="tdc"><i>k</i>₅</td>
   </tr><tr>
      <td class="tdc"><i>k</i>₄</td>
      <td class="tdc"><i>A</i>₄</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>C</i>₄</td>
      <td class="tdc"><i>V</i></td>
   </tr><tr>
      <td class="tdc"><i>k</i>₅</td>
      <td class="tdc"><i>A</i>₅</td>
      <td class="tdc"><i>k</i>₄</td>
      <td class="tdc"><i>C</i>₅</td>
      <td class="tdc"><i>k</i>₆</td>
   </tr><tr>
      <td class="tdc"><i>k</i>₆</td>
      <td class="tdc"><i>A</i>₆</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>C</i>₆</td>
      <td class="tdc"><i>V</i></td>
   </tr><tr>
      <td class="tdc"><i>k</i>₇</td>
      <td class="tdc"><i>A</i>₇</td>
      <td class="tdc"><i>k</i>₃</td>
      <td class="tdc"><i>C</i>₇</td>
      <td class="tdc"><i>V</i></td>
   </tr>
 </tbody>
</table>

<p>In any problem, statements that are different are numbered one after
another 1, 2, 3, 4 ···. A statement that is repeated bears always the
same number. In nearly all cases that are interesting, there will
be repetitions of the statements. If any statement appeared with a
“<span class="smcap">not</span>” in it, we would turn up the denial switch
for that statement (Unit 2).</p>

<p>The different connectives available on the machine are “<span class="smcap">and</span>,”
“<span class="smcap">or</span>,” “<span class="smcap">if</span> ··· <span class="smcap">then</span>,” “<span class="smcap">if and only
if</span>.” If a “<span class="smcap">not</span>” affected the compound statement produced
by any connective, we would turn up the denial switch for that
connective (Unit 8).</p>

<p>The last step in putting the problem on the machine is to connect the
main connective of the whole compound statement to the yellow light
output (Unit 12). In this problem the last “<span class="smcap">if-then</span>,”
<i>k</i>₇, is the main connective, the one that produces the whole
compound statement. So we turn Stop Switch 7 (in Unit 7) that belongs
to <i>k</i>₇ into the up position. There are a few more things to do,
naturally, but the essential part of putting the information of the
problem into the machine has now been described.</p>

<h3>HOW INFORMATION COMES OUT<br />OF THE MACHINE</h3>

<p>Of the 16 units listed in <a href="#TABLE_11">Table 11</a>, 3 are
output units, and only 2 of these are really important, as shown in
<a href="#TABLE_14">Table 14</a>.
<span class="pagenum" id="Page_161">[Pg 161]</span></p>

<p id="TABLE_14" class="f150"><b>Table 14</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Unit</span></th>
      <th class="tdc"><span class="smcap">Name of Light</span></th>
      <th class="tdc"><span class="smcap">Mark</span></th>
      <th class="tdc"><span class="smcap">Kind of Light</span></th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc">&#8199;1</td>
      <td class="tdc">Statement truth value</td>
      <td class="tdc">&nbsp;<i>V</i>₁ to <i>V</i>₁₂&nbsp;</td>
      <td class="tdc">Small, red&nbsp;&nbsp;</td>
   </tr><tr>
      <td class="tdc">13</td>
      <td class="tdl">Main truth value</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">Large, yellow</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The answer to a problem is shown by a pattern of
the lights of Units 1 and 13. The pattern of lights is equivalent to
a row of the truth table. Each little red light (Unit 1) glows when
its statement is assumed to be true, and it is dark when its statement
is assumed to be false. The yellow light (Unit 13) glows when the
whole compound statement is calculated to be logically true, and it is
dark when the whole compound statement is calculated to be logically false.</p>

<p>The machine turns its “attention” automatically to each line of the
truth table one after the other, and pulses are fed in according to the
pattern of assumed true statements. We can set the machine to stop on
true cases or on false cases or on every case, so as to give us time
to copy down whichever kind of results we are interested in. When we
have noted the case, we can press a button and the machine will then go
ahead searching for more cases.</p>

<h3>A COMPLETE AND CONCRETE EXAMPLE</h3>

<p>The reader may still be wondering when he will see a complete and
concrete example of the application of the logical-truth calculator. So
far we have given only pieces of examples in order to illustrate some
explanation. Therefore, let us consider now the following problem:</p>

<div class="blockquot">
<p><b><span class="smcap">Problem.</span></b> The A. A. Adams Co.,
Inc., has about 1000 employees. About 600 of them are insured under a
contract for group insurance with the I. I. Insurance Co. Mr. Adams
decides that more of his employees ought to be insured. As a part of
his study of the change, he asks his manager in charge of the group
insurance plan, “What are the possible statuses of my employees who are
not insured?”</p>

<p>The manager replies, “I can tell you the names of the men who are
not insured, and all the data you may want to know about them.”</p>

<p>Mr. Adams says, “No, John, that won’t be enough, for I need to know
whether there are any groups or classes that for some basic reason I
should exclude from the change I am considering.”</p>
</div>

<p><span class="pagenum" id="Page_162">[Pg 162]</span>
So the manager goes to work with the following 5 statuses and the
following 5 rules, and he produces the following answer. Our question
is, “Is he right, or has he made a mistake?”</p>

<p><i>Statuses.</i> A status for any employee is a report about that
employee, answering all the following 5 questions with “yes” or “no.”</p>

<div class="blockquot">
<p class="neg-indent">1. Is the employee eligible for insurance?</p>

<p class="neg-indent">2. Has the employee applied for insurance?</p>

<p class="neg-indent">3. Has the employee’s application for insurance been approved?</p>

<p class="neg-indent">4. Does the employee require a medical examination for insurance?</p>

<p class="neg-indent">5. Is the employee insured?</p>
</div>

<p><i>Rules.</i> The rules applying to employees are:</p>

<div class="blockquot">
<p class="neg-indent"><i>A.</i> Any employee, to be insured, must be
eligible for insurance, must make application for insurance, and must
have such application for insurance approved.</p>

<p class="neg-indent"><i>B.</i> Only eligible employees may apply for
insurance.</p>

<p class="neg-indent"><i>C.</i> The application of any person eligible
for insurance without medical examination is automatically approved.</p>

<p class="neg-indent"><i>D.</i> (Naturally) an application can be
approved only if the application is made.</p>

<p class="neg-indent"><i>E.</i> (Naturally) a medical examination will
not be required from any person not eligible for insurance.</p>
</div>

<p><i>Answer by the Manager.</i> There are 5 possible combinations of
statuses for employees who are not insured, as shown in <a href="#TABLE_15">Table 15</a>.</p>

<p id="TABLE_15" class="f150"><b>Table 15</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" rules="cols" >
  <thead><tr>
      <th class="tdc bb"><span class="smcap">Possible<br />Combination<br />of Statuses</span></th>
      <th class="tdc bb"><span class="smcap">Status 1,<br /><br />Eligible</span></th>
      <th class="tdc bb"><span class="smcap">Status 2,<br /><br />Applied</span></th>
      <th class="tdc bb"><span class="smcap">Status 3,<br />Application<br />Approved</span></th>
      <th class="tdc bb"><span class="smcap">Status 4,<br />Examination<br />Required</span></th>
      <th class="tdc bb"><span class="smcap">Status 5,<br /><br />Insured</span></th>
    </tr>
   </thead>
  <tbody><tr>
      <td class="tdc">1</td>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdc">Yes</td>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
      <td class="tdc">Yes</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
      <td class="tdc">No</td>
   </tr>
 </tbody>
</table>

<p>The question may be asked why employees who are eligible, who have
applied for insurance, who have had their applications approved, and
who require no medical examination (combination 2) are yet not insured.
The answer is that the rules given do not logically lead to this
conclusion. As a matter of fact, there might be additional rules, such
<span class="pagenum" id="Page_163">[Pg 163]</span>
as: any sick employee must first return to work; or any period from
date of approval of application to the first of the following month
must first pass.</p>

<p>The first step in putting this problem on the Kalin-Burkhart
Logical-Truth Calculator is to rephrase the rules, using the language
of the connectives that we have on the machine. The rules rephrased are:</p>

<div class="blockquot">
<p class="neg-indent"><i>A.</i> If an employee is insured, then he is
eligible, he has applied for insurance, and his application has been
approved.</p>

<p class="big_indent"><span class="smcap">if</span> 5,
<span class="smcap">then</span> 1 <span class="smcap">and</span> 2
<span class="smcap">and</span> 3</p>

<p class="neg-indent"><i>B.</i> If an employee has applied (under these
rules) for insurance, then he is eligible.</p>

<p class="big_indent"><span class="smcap">if</span> 2,
<span class="smcap">then</span> 1</p>

<p class="neg-indent"><i>C.</i> If an employee is eligible for
insurance, has applied, and requires no medical examination, his
application is automatically approved.</p>

<p class="big_indent"><span class="smcap">if</span> 1 <span
class="smcap">and</span> 2 <span class="smcap">and</span>
<span class="smcap">not</span>-4, <span class="smcap">then</span> 3</p>

<p class="neg-indent"><i>D.</i> If an employee’s application has been
approved, then he has applied.</p>

<p class="big_indent"><span class="smcap">if</span> 3,
<span class="smcap">then</span> 2</p>

<p class="neg-indent"><i>E.</i> If an employee is not eligible, then he
does not require a medical examination (under these rules).</p>

<p class="big_indent"><span class="smcap">if</span>
<span class="smcap">not</span>-1, <span class="smcap">then</span>
<span class="smcap">not</span>-4</p> </div>

<p class="no-indent">To get the answer we seek, we must add one more
rule <i>for this answer only</i>:</p>

<div class="blockquot">
<p class="neg-indent"><i>F.</i> The employee is not insured.</p>

<p class="big_indent"><span class="smcap">not</span>-5</p>
</div>

<p class="no-indent">We now have a total of 4 + 2 + 4 + 2 + 2 + 1
occurrences of statements, or 15 occurrences. This is beyond the
capacity of the existing machine. But fortunately Rule <i>F</i>
and Rule <i>A</i> cancel each other; they may both be omitted; and
this gives us 10 occurrences instead of 15. In other words, all the
possible statuses under “Rule <i>B</i> <span class="smcap">and</span>
Rule <i>C</i> <span class="smcap">and</span> Rule <i>D</i>
<span class="smcap">and</span> Rule <i>E</i>” will give us the answer
we seek.</p>

<p>The rephrasing and reasoning we have done here is perhaps not easy. For
example, going from the logical pattern</p>

<p class="big_indent">Only igs may be ows</p>

<p class="no-indent">to the logical pattern
<span class="pagenum" id="Page_164">[Pg 164]</span></p>

<p class="big_indent">If it is an ow, then it is an ig</p>

<p class="no-indent">as we did in rephrasing Rule <i>B</i>, deserves
rather more thought and discussion than we can give to the subject
here. A person who is responsible for preparing problems for the
Logical-Truth Calculator should know the algebra of logic.</p>

<p>Choosing an appropriate grouping, we now set on the machine:</p>

<p class="no-wrap">
<span class="fontsize_200">{</span>(<span class="smcap">if</span> 2, <span class="smcap">then</span> 1)
<span class="smcap">and</span> <span class="fontsize_150">[</span><span class="allsmcap">IF</span> (1
<span class="smcap">and</span> 2) <span class="smcap">and</span>
<span class="smcap">not</span>-4, <span class="smcap">then</span> 3<span class="fontsize_150">]</span><span class="fontsize_200">}</span>
<span class="smcap">and</span></p>

<p class="big_indent no-wrap"><span class="fontsize_150">[</span>(<span class="smcap">if</span>
3, <span class="smcap">then</span> 2) <span class="smcap">and</span>
(<span class="allsmcap">IF</span> <span class="smcap">not</span>-1,
<span class="smcap">then</span> <span class="smcap">not</span>-4)<span class="fontsize_150">]</span> </p>

<p>The setting is as shown in <a href="#TABLE_16">Table 16</a>. After this setting,
the machine is turned on and set to stop on the “true” cases. The</p>

<p id="TABLE_16" class="f150"><b>Table 16</b></p>

<p class="center"><b>SETTING OF THE PROBLEM<br /> ON THE<br /> LOGICAL-TRUTH CALCULATOR</b></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdl"><b><span class="smcap">Unit</span></b></td>
      <td class="tdl" colspan="13">&nbsp;</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdl_ws1">Statement Dial No.</td>
      <td class="tdc"><i>V</i>₁</td>
      <td class="tdc"><i>V</i>₂</td>
      <td class="tdc"><i>V</i>₃</td>
      <td class="tdc"><i>V</i>₄</td>
      <td class="tdc"><i>V</i>₅</td>
      <td class="tdc"><i>V</i>₆</td>
      <td class="tdc"><i>V</i>₇</td>
      <td class="tdc"><i>V</i>₈</td>
      <td class="tdc"><i>V</i>₉</td>
      <td class="tdc"><i>V</i>₁₀</td>
      <td class="tdc"><i>V</i>₁₁</td>
      <td class="tdc"><i>V</i>₁₂</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdl_ws1">Statement Dial Setting</td>
      <td class="tdc">2</td>
      <td class="tdc">1</td>
      <td class="tdc">1</td>
      <td class="tdc">2</td>
      <td class="tdc">4</td>
      <td class="tdc">3</td>
      <td class="tdc">3</td>
      <td class="tdc">2</td>
      <td class="tdc">1</td>
      <td class="tdc">4</td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdl_ws1">Statement Denial Switch</td>
      <td class="tdc" colspan="12">&nbsp;</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;Setting</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">up</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">up</td>
      <td class="tdc">up</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdl_ws1">Connective Dial No.</td>
      <td class="tdc"><i>k</i>₁</td>
      <td class="tdc"><i>k</i>₂</td>
      <td class="tdc"><i>k</i>₃</td>
      <td class="tdc"><i>k</i>₄</td>
      <td class="tdc"><i>k</i>₅</td>
      <td class="tdc"><i>k</i>₆</td>
      <td class="tdc"><i>k</i>₇</td>
      <td class="tdc"><i>k</i>₈</td>
      <td class="tdc"><i>k</i>₉</td>
      <td class="tdc"><i>k</i>₁₀</td>
      <td class="tdc"><i>k</i>₁₁</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdl_ws1">Connective Dial Setting</td>
      <td class="tdc">▲</td>
      <td class="tdc">∧</td>
      <td class="tdc">∧</td>
      <td class="tdc">∧</td>
      <td class="tdc">▲</td>
      <td class="tdc">∧</td>
      <td class="tdc">▲</td>
      <td class="tdc">∧</td>
      <td class="tdc">▲</td>
      <td class="tdc">off</td>
      <td class="tdc">off</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">8</td>
      <td class="tdl_ws1">Statement Denial Switch</td>
      <td class="tdc" colspan="12">&nbsp;</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;Setting</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdl_ws1">Antecedent Dial No.</td>
      <td class="tdc"><i>A</i>₁</td>
      <td class="tdc"><i>A</i>₂</td>
      <td class="tdc"><i>A</i>₃</td>
      <td class="tdc"><i>A</i>₄</td>
      <td class="tdc"><i>A</i>₅</td>
      <td class="tdc"><i>A</i>₆</td>
      <td class="tdc"><i>A</i>₇</td>
      <td class="tdc"><i>A</i>₈</td>
      <td class="tdc"><i>A</i>₉</td>
      <td class="tdc"><i>A</i>₁₀</td>
      <td class="tdc"><i>A</i>₁₁</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdl_ws1">Antecedent Dial Setting</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>k</i>₁</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>k</i>₃</td>
      <td class="tdc"><i>k</i>₄</td>
      <td class="tdc"><i>k</i>₂</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>k</i>₇</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc">off</td>
      <td class="tdc">off</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdl_ws1">Consequent Dial No.</td>
      <td class="tdc"><i>C</i>₁</td>
      <td class="tdc"><i>C</i>₂</td>
      <td class="tdc"><i>C</i>₃</td>
      <td class="tdc"><i>C</i>₄</td>
      <td class="tdc"><i>C</i>₅</td>
      <td class="tdc"><i>C</i>₆</td>
      <td class="tdc"><i>C</i>₇</td>
      <td class="tdc"><i>C</i>₈</td>
      <td class="tdc"><i>C</i>₉</td>
      <td class="tdc"><i>C</i>₁₀</td>
      <td class="tdc"><i>C</i>₁₁</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdl_ws1">Consequent Dial Setting</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>k</i>₅</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>k</i>₈</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc"><i>k</i>₉</td>
      <td class="tdc"><i>V</i></td>
      <td class="tdc">off</td>
      <td class="tdc">off</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">7</td>
      <td class="tdl_ws1">Stop Switches, associating</td>
      <td class="tdc" colspan="12">&nbsp;</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;connective to Main</td>
      <td class="tdc" colspan="12">&nbsp;</td>
   </tr><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;&emsp;Truth-Value Light</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">—</td>
      <td class="tdc">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">possible statuses of employees who are not
insured are shown in <a href="#TABLE_17">Table 17</a>. As we look
down the last column in <a href="#TABLE_17">Table 17</a>, we observe
6 occurrences of <i>T</i>, instead of 5 as the manager determined
(<a href="#TABLE_15">see Table 15</a>). Thus, when we compare the manager’s
result with the machine result, we find an additional possible
combination to be reported to Mr. Adams, combination 7:</p>

<div class="blockquot">
<p class="neg-indent fontsize_120">Employee eligible, employee has not applied,
employee’s application not approved, employee requires a medical
examination, employee not insured.</p>
</div>

<p><span class="pagenum" id="Page_165">[Pg 165]</span></p>

<p id="TABLE_17" class="f150"><b>Table 17</b></p>

<p class="center"><b>SOLUTION OF THE PROBLEM<br /> BY THE CALCULATOR</b></p>

<ul class="index no-wrap">
<li class="isub10"><span class="fontsize_120"><b>LEGEND:</b></span></li>
<li class="isub2"><big><b>{A}</b></big>&emsp;THE EMPLOYEE IS ELIGIBLE FOR INSURANCE</li>
<li class="isub2"><big><b>{B}</b></big>&emsp;THE EMPLOYEE HAS APPLIED FOR INSURANCE</li>
<li class="isub2"><big><b>{C}</b></big>&emsp;THE EMPLOYEE’S APPLICATION FOR INSURANCE</li>
<li class="isub7">HAS BEEN APPROVED</li>
<li class="isub2"><big><b>{D}</b></big>&emsp;THE EMPLOYEE REQUIRES A MEDICAL EXAMINATION</li>
<li class="isub2"><big><b>{E}</b></big>&emsp;THE EMPLOYEE IS INSURED</li>
<li class="isub2"><big><b>{F}</b></big>&emsp;CASE, OR COMBINATION NO.</li>
<li class="isub2"><big><b>{G}</b></big>&emsp;THE COMBINATION DOES NOT CONTRADICT THE RULES,</li>
<li class="isub7">I.E., THE YELLOW LIGHT IS ON</li>
</ul>

<table class="fontsize_120 no-wrap" border="0" cellspacing="4" summary=" " cellpadding="4" rules="cols" >
   <thead><tr>
      <th class="tdl">&nbsp;</th>
      <th class="tdc">{A}</th>
      <th class="tdc">{B}</th>
      <th class="tdc">{C}</th>
      <th class="tdc">{D}</th>
      <th class="tdc">{E}</th>
      <th class="tdc">{F}</th>
      <th class="tdc">{G}</th>
      <th class="tdc">&nbsp;</th>
   </tr><tr>
      <th class="tdl bb"><i>Status</i>:</th>
      <th class="tdc bb">1</th>
      <th class="tdc bb">2</th>
      <th class="tdc bb">3</th>
      <th class="tdc bb">4</th>
      <th class="tdc bb">5</th>
      <th class="tdc bb">&nbsp;</th>
      <th class="tdc bb">&nbsp;</th>
  </tr>
  </thead>
  <tbody><tr>
      <td class="tdc" rowspan="17">&nbsp;</td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">1</td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">2</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">3</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>T</i></td>
      <td class="tdc bb"><i>T</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb">4</td>
      <td class="tdc bb"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">5</td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">6</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">7</td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>T</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb">8</td>
      <td class="tdc bb"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">9</td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">10</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">11</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>T</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb"><i>F</i></td>
      <td class="tdc bb">12</td>
      <td class="tdc bb"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">13</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">14</td>
      <td class="tdc"><i>F</i></td>
   </tr><tr>
      <td class="tdc"><i>T</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">15</td>
      <td class="tdc"><i>T</i></td>
   </tr><tr>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc"><i>F</i></td>
      <td class="tdc">16</td>
      <td class="tdc"><i>T</i></td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Because of the medical examination, this
additional class of employee would need to be considered rather
carefully in any change of the group insurance plan.</p>

<h3>AN APPRAISAL OF THE CALCULATOR</h3>

<p>In appraising the Kalin-Burkhart Logical-Truth Calculator, we must
remember that this is a first model. It was the only machine of its
kind up to the end of 1948; and it worked.</p>

<p>The cost of the machine, as stated before, was about $150 of parts and
perhaps $1000 of labor. This is less than ¹/₁₀₀ of the cost of the
<span class="pagenum" id="Page_166">[Pg 166]</span>
other giant brains described in previous chapters. Yet we can properly
call this machine a mechanical brain because it transfers information
automatically from one part to another of the machine, has automatic
control over the sequence of operations, and does certain kinds of
reasoning.</p>

<p>The machine is swift. It can check up to a 100 cases against a set of
rules in less than 1 minute. It can check: 128 cases for 7 conditions
in 1¼ minutes, 256 cases for 8 conditions in 2½ minutes, and 4096 cases
for 12 conditions in 38 minutes. That is the limit of the present
machine. Of course, setting up the machine to do a problem takes some
more time.</p>

<p>The programming of this machine to do a problem is less complicated
than the programming of most of the big machines previously described.
Of course, in order to prepare a problem for the machine, the preparer
needs to know a fair amount of the algebra of logic. This, however, is
not very hard. As to reliability, the machine has in practice been out
of order less than 2 per cent of operating time.</p>

<p>The big barrier to wide use of the machine, of course, is lack of
understanding of the field of problems in which it can be applied.
Even in this modern world of ours, we are in rather a primitive stage
in regard to recognizing problems in logical truth and knowing how to
calculate it. Here, however, is an electrical instrument for logical
reasoning, and it seems likely that its applications will multiply.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_167">[Pg 167]</span></p>
<h2 class="nobreak" id="CHAPTER_10">Chapter 10<br />
<span class="h_subtitle">AN EXCURSION:<br />
THE FUTURE DESIGN OF MACHINES THAT THINK</span></h2>
</div>

<p>In the previous chapters we have described four giant mechanical
brains finished by the end of 1946: Massachusetts Institute of
Technology’s Differential Analyzer No. 2, Harvard’s IBM Automatic
Sequence-Controlled Calculator, Moore School of Electrical
Engineering’s Electronic Numerical Integrator and Calculator (Eniac),
and Bell Telephone Laboratories’ General-Purpose Relay Computer. All
these brains have actually worked long enough to have demonstrated
thoroughly some facts of great importance.</p>

<h3>WHAT EXISTING MACHINES HAVE PROVED</h3>

<p>The existing mechanical brains have proved that information can be
automatically transferred between any two registers of a machine.
No human being is needed to pick up a physical piece of information
produced in one part of the machine, personally move it to another part
of the machine, and there put it in again. We can think of a mechanical
brain as something like a battery of desk calculators or punch-card
machines all cabled together and communicating automatically.</p>

<p>The existing mechanical brains have also proved that flexible,
automatic control over long sequences of operations is possible. We can
lay out the whole routine to solve a problem, translate it into machine
language, and put it into the machine. Then we press the “start”
button; the machine starts whirring and prints out the answers as it
obtains them. Mechanical brains have removed the limits on complexity
of routine: the machine can carry out a complicated routine as easily
as a simple one.
<span class="pagenum" id="Page_168">[Pg 168]</span></p>

<p>The existing giant brains have shown that a machine with hundreds of
thousands of parts will work successfully. It will operate accurately,
it will run unattended, and it will have remarkably few mechanical troubles.</p>

<p>These machines have shown that enormous speeds can be realized: 5000
additions a second is Eniac’s record. High speed is needed for many
problems in science, government, and business. In fact, there are
economic and statistical problems, now settled by armchair methods,
for which high-speed mechanical brains may make it possible to compute
answers rather than guess them.</p>

<p>Also, these machines have been shown to be reasonable in cost. The cost
of each of the large calculators is in the neighborhood of $250,000 to
$500,000. If we assume a ten-year life, which is conservative, the cost
is about $3 to $6 an hour for 24-hour operation. Since each mechanical
brain can, for problems for which it is suited, do the work of a
hundred human computers, such a machine can save its cost half a dozen
times. And these machines are only engineers’ models, built without the
advantages of production-line assembly.</p>

<p>The cost of giant mechanical brains under design in 1947 and 1948
is in the neighborhood of $100,000 to $200,000. The main reason for
the reduction from the previous cost is the use of cheaper automatic
memory. As designs improve and charges for research and development are
paid off, the cost should continue to go down.</p>

<h3>NEW DEVICES FOR HANDLING INFORMATION</h3>

<p>In the laboratories working on new mechanical and electronic brains,
scientists are doing a lot of thinking about new devices for handling
information. Research into devices for storing information shows that
<i>magnetic wire</i> as used in sound recording is a rather good
storage medium.</p>

<h4>Magnetic Wire</h4>

<p>For example, on a hundredth of an inch of fine steel wire we can
“write” a <i>magnetized spot</i> by means of a small “writing”
<i>electromagnet</i>. The electromagnet is simply some copper wire
<span class="pagenum" id="Page_169">[Pg 169]</span>
coiled around some soft iron shaped in a U. When current flows through
the coil, the iron becomes a magnet, and the tips of the U magnetize
the little section of the wire between them. The magnetized spot can
be of two kinds, say north-south or south-north, depending on which
way the current flows. We can “read” this difference by means of
another small “reading” electromagnet. We can erase the spot by means
of a stronger “erasing” magnet that produces a uniform magnetic state
throughout the wire. The difference between north-south and south-north
corresponds to the difference between 1 and 0, or “yes” and “no,”
etc., and is a <i>unit of information</i> (<a href="#CHAPTER_2">see Chapter 2</a>).
Many other variations are possible. For example, the presence or absence of a
magnetized spot may be the unit of information, or the “writing,”
“reading,” and “erasing” electromagnets all may be the same.</p>

<p>Magnetic wire sound recordings made in the 1890’s are still good.
This fact shows that magnetic wire may be a more permanent medium for
storing information than is paper. Stray magnetic forces are likely
to have no harmful effect on information stored on magnetic wire, for
these forces would not be strong enough or detailed enough to change
greatly the difference between the magnetized spot and its neighboring
neutral area.</p>

<p>A reel of magnetic wire a mile long and <big>³/₁₀₀₀</big> of an inch thick costs
about $5. At 80 magnetized spots to the inch, a mile of wire can store
about 5 million units of information. Hence, the cost of storing one
unit of information is about <big>¹/₁₀₀₀₀</big> of a cent. The time needed for
changing a magnetized spot from 1 to 0 or from 0 to 1 is about <big>¹/₁₀₀₀₀</big>
of a second.</p>

<h4>Magnetic Tape</h4>

<p>There is, however, a storage device that may be even more useful, and
this is <i>magnetic tape</i> (<a href="#FIG_1-10">see Fig. 1</a>). The usual
size of such tape is ¼ inch wide and 2 or 3 thousandths of an inch
thick. Magnetic tape may be made of plastic with magnetic powder all
through it, or it may be of paper coated with magnetic powder, or it
may be of stainless steel or a magnetic alloy, or it may be of brass or
a nonmagnetic alloy coated with a magnetic plating.
<span class="pagenum" id="Page_170">[Pg 170]</span></p>

<p>Magnetic tape has the added advantage that from 4 to 20 channels across
the tape can be filled with magnetized spots, and the cost then becomes
about <big>¹/₁₀₀₀₀₀</big> of a cent per spot. It seems possible that 1000 units
of information can be stored in a quarter of a square inch of magnetic
tape. This means that more than 1 million units of information can be
stored in a cubic inch of space filled with magnetic tape, and about 2
billion units of information in a cubic foot, except that some of the
space should be allotted to the reels and other equipment that hold
the tape (<a href="#FIG_2-10">see Fig. 2</a>). This is closer packing
than printed information in the telephone book, and yet with magnetic
tape we can get to the information automatically.</p>

<div class="figcenter">
  <img id="FIG_1-10" src="images/i_170a.jpg" alt="" width="600" height="294" />
  <p class="f120 space-below2"><span class="smcap">Fig. 1.</span> Magnetic tape.</p>
  <img id="FIG_2-10" src="images/i_170b.jpg" alt="" width="600" height="366" />
  <p class="f120"><span class="smcap">Fig. 2.</span> Tape reels.</p>
</div>

<p>Think of the enormous files in libraries, government, and business.
<span class="pagenum" id="Page_171">[Pg 171]</span>
Think of the problems of space and cost and access which these files
imply. We can then see that this new development may well be of
extraordinary importance.</p>

<h4>Mercury Tanks</h4>

<div class="figcenter">
  <img id="FIG_3-10" src="images/i_171.jpg" alt="" width="600" height="289" />
  <p class="f120 space-below2"><span class="smcap">Fig. 3.</span> Mercury tank.</p>
</div>

<p>Scientists are investigating other storage devices having still more
remarkable properties, but these have the disadvantage that, when the
power goes off, the information vanishes. One of these new storage
devices is called a <i>mercury tank</i> (<a href="#FIG_3-10">see Fig. 3</a>).
It consists mainly of a section of iron or steel pipe filled with mercury.
At each end of this pipe, touching the mercury, is a thin slab of a crystal
of <i>quartz</i>. Quartz, which is a common stone, and which nearly all
sand is made of, changes its shape when pulsed with electricity. We
put a pattern of electrical pulses into the quartz slab at one end of
the mercury tank; for example, we could have the pattern 1101 meaning
“pulse, pulse, no pulse, pulse.” The electrical pulses going into the
quartz slab make the quartz vibrate. Thus ripples are produced in the
mercury, and waves in the pattern 1101 meaning “wave, wave, no wave,
wave” travel down the tank and strike the quartz slab at the far end.
The quartz slab there changes its shape in the rhythm 1101, and it
converts the waves back into electrical pulses in the same pattern.
Then we take the pulses out of the far end along a wire, make them
stronger again with an amplifier, give them the right form again, and
feed them back into the front end of the mercury tank. The mercury tank
is a clever use of the principle of an <i>echo</i>, as when you call
across a valley and the rocks answer you back. We can store a pattern
of 400 pulses (each a unit of information, a 1 or a 0, and each a
<span class="pagenum" id="Page_172">[Pg 172]</span>
millionth of a second in duration), in a mercury tank about 20
inches long. A mercury tank and an echo are examples of <i>delay
lines</i>—“lines” along which waves are “delayed.”</p>

<h4>Electrostatic Storage Tube</h4>

<p>Another of the memory devices being developed is called an
<i>electrostatic storage tube</i> (<a href="#FIG_4-10">see Fig. 4</a>).
This is a big electronic tube with a <i>screen</i> across one end. The
screen may be of two layers: one of copper, which conducts electricity,
and one of <i>mica</i>, a material that does not. In the other end of
the tube is a <i>beam</i> of electrons, which we can turn on and off
and shoot at any of 2 or 3 thousand specific points or <i>spots</i> on
the screen.</p>

<div class="figcenter">
  <img id="FIG_4-10" src="images/i_172.jpg" alt="" width="600" height="417" />
  <p class="f120 space-below2"><span class="smcap">Fig. 4.</span> Electrostatic storage tube.</p>
</div>

<p>There are two sizes of <i>electric charge</i> or quantity of electrons;
we can call these 1 and 0. In about a millionth of a second, we can put
either size of charge on one of the spots of the screen. With other
circuits we can keep it there as long as we want, if the power does
not flicker off. We can “remember” perhaps 2 or 3 thousand units of
information in one of these electronic tubes. We can read, write, or
erase any unit of information in a few millionths of a second.</p>

<p>Neither the mercury tank nor the electrostatic storage tube had, by the
end of 1947, been put into a working mechanical brain. But there is
good reason to believe that they will be successful devices and will
open up a new era of speed in storing and referring to information. In
<span class="pagenum" id="Page_173">[Pg 173]</span>
fact, several laboratories are developing electronic calculating
circuits using these devices which will perform up to 100,000 additions
a second or 10,000 multiplications a second. Our minds certainly
stagger at the thought of such speeds.</p>

<h3>NEW OPERATIONS</h3>

<p>Many kinds of combining operations have already been built into one or
more mechanical brains. The operations may be arithmetical: addition,
subtraction, multiplication, division, looking up numbers in tables,
etc. Or the operations may be logical: comparing, selecting, checking,
etc. Additional logical operations will be built into some of the
mechanical brains now being constructed: sorting, collating, matching,
merging, etc.</p>

<h3>NEW IDEAS IN PROGRAMMING</h3>

<p><i>Programming</i>—the way to give instructions to machines—is also
being studied in the laboratories. Several new ideas of importance have
developed as a result.</p>

<p>One idea is that the machine should be able to store its instructions
or <i>program</i> or <i>routine</i> in its memory in just the same
physical ways as it stores numbers. There is basically no reason why
numbers only should be stored in some registers, and instructions only
stored in other registers.</p>

<p>Another idea is that the machine should have in its permanent memory
any subroutine it may need. For example, a subroutine should always
be available in the machine for finding <i>square root</i>. At any
time when a square root was needed, we would only have to call on the
machine for the subroutine of square root. The machine would then
consult the right part of its memory and carry out the subroutine for
square root.</p>

<p>A third idea, and one of the most interesting, is that the machine
should be able to compute its own instructions. For example, consider a
program for finding the product of two <i>matrices</i> (<a href="#SUPPL_2">see Supplement 2</a>),
each of 100 terms in an array of 10 columns and 10 rows, resulting
in a new <i>matrix</i> of 100 terms. The whole program can be made to
consist of about 50 orders. Only one of them is “multiply,” and only
<span class="pagenum" id="Page_174">[Pg 174]</span>
one of them is “add”; the other orders consist of how to choose
expressions to be multiplied or added, etc.</p>

<p>Such problems as these are often fascinating to mathematicians, who
love to play with the intricate ideas needed.</p>

<h3>NEW IDEAS IN RELIABILITY</h3>

<p>Reliability has a number of aspects:</p>

<ul class="index no-wrap">
<li class="isub2">1. No wrong results allowed out of the machine.</li>
<li class="isub2">2. Few failures.</li>
<li class="isub2">3. Rapid location of failures.</li>
<li class="isub2">4. Quick repair or replacement of parts that fail.</li>
<li class="isub2">5. Easy maintenance.</li>
<li class="isub2">6. Unattended operation overnight.</li>
</ul>

<p class="no-indent">For example, Bell Laboratories proved that
mechanical brains can be built so that no wrong results are allowed
to come out. In other words, the machine checks itself all the time
as it goes along and stops at once if the check shows that something
is wrong. This is likely to be a standard feature of new automatic
thinking machinery.</p>

<p>The frequency of failures in the machinery being designed in the
laboratories may be of the order of one or two mechanical failures
a week. For any type of failure an alarm circuit and trouble lights
will show what part of the machine needs attention. Plug-in parts for
replacement are already in use in at least two of the four mechanical
brains described and should be available in all the new machines. It is
possible to build a machine that will automatically change from failing
equipment to properly functioning equipment. For some years though,
this may be too expensive to be reasonable.</p>

<p>The use of magnetic tape for storage reduces greatly the number of
parts and so increases reliability. For example, instead of 18,000
electronic tubes in an electronic brain, there may be less than 3000.</p>

<p>A final degree of reliability is gained when most of the time the
machine operates unattended. Then, there is no human operator standing
by who may fail to do the correct thing at the moment when the machine
<span class="pagenum" id="Page_175">[Pg 175]</span>
needs some attention. In fact, the motto for the room housing a
mechanical brain should become, “Don’t think; let the machine do it
for you.” Unattended operation from the end of one working day to
the beginning of the next, with the machine changing itself from one
problem to another problem, has already been proved possible on the
Bell Laboratories machine.</p>

<h3>AUXILIARY DEVICES</h3>

<p>In order to use a mechanical brain, we have to give it and take from
it language that it understands, <i>machine language</i>. A mechanical
brain that can do 10,000 additions a second can very easily finish
almost all its work at once. How can we, slow as we are, keep our
friend, the giant brain, busy? We have found so far several answers to
this question, none of them yet very good.</p>

<p>Devices for preparing input will be very important. For each brain, we
shall need a great many of these devices. For, at best, we type at a
rate, say, of 4 characters a second, selecting any one of some 38 keys,
each of which is equivalent to about 6 units of information. This is
about 800 units of information per second. The machine, however, is
likely to be able to gulp information from its input mechanism at the
amazing rate of 60,000 units of information per second, equal to 75
people typing with no mistakes and no resting. Fortunately, at least
some of the time the machine will be busy computing!</p>

<p>For an input-preparation device, we may get something that can be
fastened to an ordinary typewriter and that will produce magnetic
tape agreeing with what is printed by the typewriter. Since the
input information must be carefully verified, we shall need a second
magnetic tape device such as exists for paper tape on the Bell
Laboratories machine: the <i>processor</i>. The processor takes two
hand-prepared tapes, compares them, reports any differences, and
produces a third tape. The third tape copies the two original tapes if
they agree, and it receives corrected information as furnished by a
girl at a keyboard if the two original tapes disagree.</p>

<p>For information already on punch cards, we need an input device that
<span class="pagenum" id="Page_176">[Pg 176]</span>
will read punch cards and write on magnetic tape. Where information is
on punched paper tape, we need a machine that will read punched paper
tape and write on magnetic tape.</p>

<p>Problem data, tables of numbers, and routine instructions will go
into the mechanical brain. They will all be prepared on regular input
devices. The machine will accept information in the form in which it is
most convenient for you and me to prepare it. Then, the machine will
be instructed to change the information into the form with which it is
most convenient for the machine to operate.</p>

<p>Many output devices will also be needed, since the machine will be able
to produce information very swiftly. These output devices might be
cabled to the machine. A kind of traffic control system would govern
them. Each will have a magnetic tape that will be loaded up swiftly
with information. Then the output device will unload its information
more slowly, in any form that we may desire: printing, graphs, film,
punch cards, or punched paper tape.</p>

<p>The machine is likely to be able to put out information on magnetic
tape at the same high speed of 60,000 units of information per
second or 10,000 characters per second. But the best printing speed
of an electric typewriter is about 10 or 12 characters a second.
Card-punching speed is about 130 characters a second. Punch-card
tabulator speed can reach a maximum of about 200 characters a second.
Thus we see that here, too, we may be snowed under with the information
that the giant brain puts out, if we fail to ask the giant only for
what we really want.</p>

<h3>MECHANICAL BRAINS UNDER CONSTRUCTION</h3>

<p>This chapter would not be complete without mention of the great
mechanical brains that were actually under construction at the end of
1947. In power they are intermediate between the machinery now being
designed, described in this chapter, and the earlier machines described
in the previous chapters of this book.</p>

<p>The mechanical brains under construction on December 31, 1947, were:
<span class="pagenum" id="Page_177">[Pg 177]</span></p>

<div class="blockquot">
<p class="neg-indent">Harvard’s Sequence-Controlled Relay Calculator
<i>Mark II</i>, constructed at the Harvard Computation
Laboratory, tested there July 1947 to January 1948, and delivered to
the Naval Proving Ground, Dahlgren, Va., in 1948.</p>

<p class="neg-indent">The <i>IBM Selective-Sequence Electronic
Calculator</i>, constructed in the IBM laboratories, Endicott, N.
Y., and installed in 1947 at the office of International Business
Machines, 590 Madison Ave., New York, N. Y.</p>

<p class="neg-indent">Moore School of Electrical Engineering’s
<i>EDVAC</i> (Electronic Digital Variable Automatic Computer) being
constructed partly at Moore School and partly elsewhere, and to be
delivered to the Ballistic Research Laboratories, Aberdeen, Md.</p>

<p class="neg-indent">Harvard’s Sequence-Controlled Electronic
Calculator <i>Mark III</i>, being constructed at the Harvard
Computation Laboratory, and to be delivered to the Naval Proving
Ground, Dahlgren, Va.</p>
</div>

<p>We shall cover briefly (and perhaps a little technically) some of the
main features of the first two of these machines; for, during 1948,
they began to do problems. The other two had not been finished by
the end of 1948 and so would be difficult to describe correctly, for
mechanical brains <i>grow</i>, and design changes go on until they are
finished—and even afterwards.</p>

<p>Some information about these machines can be obtained from the
organizations referred to above and from reports that should appear
from time to time in some of the journals mentioned in <a href="#SUPPL_3">Supplement 3</a>.
There is also a regular section entitled “Automatic Computing
Machinery” in the quarterly <i>Mathematical Tables and Other Aids to
Computation</i>, where it is likely that current information may be found.</p>

<h4>Harvard’s Mark II</h4>

<p>The Harvard Sequence-Controlled Calculator Mark II began to do problems
under test during July 1947. This machine is at least twelve times as
powerful as Mark I (<a href="#CHAPTER_6">see Chapter 6</a>) and was constructed
entirely by the Harvard Computation Laboratory. The machine contains about 13,000
relays of a new type that will operate reliably within <big>¹/₁₀₀</big>
of a second.</p>

<p>Numbers in the machine are regularly of 10 decimal digits between
<span class="pagenum" id="Page_178">[Pg 178]</span>
1.000,000,000 and 9.999,999,999, inclusive, multiplied by a power of 10
between 1,000,000,000,000,000 and 0.000,000,000,000,001, inclusive.</p>

<p>For storage of numbers, the machine has 100 relay registers totaling
about 1200 decimal digits. Also, it can consult any one of 8 tape feeds
for numbers and any one of 4 tape feeds for instructions. Effectively,
the machine can read one number and one instruction from paper tape in
<big>¹/₃₀</big> of a second.</p>

<p>The machine performs all arithmetical and most logical operations.
In every second it can carry out 4 multiplications, 8 additions (or
subtractions), and 12 transfers. Division is performed by rapid
approximation using the other operations.</p>

<p>In each second the machine can perform 30 instructions. An instruction
is expressed by 6 digits between 0 and 7 which you can select and, in
effect, by 3 more digits fixed by the time (within the second) when the
machine reads the instruction. For example, in the 9th instruction of
the 30 instructions in each second, we can specify a multiplicand. But,
if we do not want to multiply right then—a rare event if we are coding
wisely—we leave the 9th instruction empty. The machine may operate as
a whole, attending to one problem; or the machine may be separated into
halves, and each half will attend to its own problem.</p>

<h4>The IBM Selective-Sequence<br /> Electronic Calculator</h4>

<p>The IBM Selective-Sequence Electronic Calculator was announced publicly
on January 27, 1948, after some months of trial running. It is a large
and powerful mechanical brain, and it is the intention of International
Business Machines to devote it to solving scientific problems. The
staff of the Watson Scientific Computing Laboratory in New York will be
mainly in charge of the machine.</p>

<p>The machine contains about 12,500 electronic tubes and about 21,500
relays. Numbers in the machine are regularly of either 14 or 19
decimal digits. Instructions are expressed as numbers. For storage of
information, the machine has a capacity of 8 registers totaling 160
decimal digits of very rapid memory in electronic tubes. Also, it has
about 150 registers totaling 3000 decimal digits of less rapid memory
in relays. Also, it can consult any one of 66 paper tape feeds; each
<span class="pagenum" id="Page_179">[Pg 179]</span>
row on a paper tape can hold up to 78 punched holes or 19 decimal
digits, and the machine can consult 25 rows on one tape in one second.
These paper tapes together give the machine about 400,000 decimal
digits of memory.</p>

<p>For arithmetical and logical operations, the machine has an
arithmetical unit using electronic tubes. This unit can carry out about
50 multiplications or about 250 additions per second, including the
transfers of numbers. In each second the machine can read and perform
50 instructions, and each instruction consists, usually, of getting
two numbers out of two relay registers, performing an operation, and
putting the result into a third relay register.</p>

<h4>Eckert-Mauchly’s Binac</h4>

<p>As this book went to press, another mechanical brain, the Electronic
Binary Automatic Computer, or BINAC, was announced on August 22,
1949. This machine was constructed by the Eckert-Mauchly Computer
Corporation, Philadelphia, Pa., for Northrop Aircraft, Inc., Hawthorne,
Calif.</p>

<p>This machine has some remarkable properties. It does addition or
subtraction at the rate of 3500 per second. It does multiplication or
division at the rate of 1000 per second. The input is from a keyboard
or magnetic tape; the output is to magnetic tape or an electric
typewriter. Binac has 512 registers of very rapid memory in mercury
tanks, and each register holds 30 binary digits. The machine actually
is a pair of twins: the storage, the computing element, and the control
are double, and each twin runs in step with the other and checks
every operation of the other. In tests in July the machine ran over
10 consecutive hours with no error. Each twin has only 700 electronic
tubes. Binac handles all numbers in binary notation, except that the
keyboard and the typewriter express numbers in <i>octal notation</i>
(<a href="#SUPPL_2">see Supplement 2</a>). Finally, Binac is only 5 feet
high, 4 feet long, and one foot wide.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_180">[Pg 180]</span></p>
<h2 class="nobreak" id="CHAPTER_11">Chapter 11<br />
<span class="h_subtitle">THE FUTURE:<br />
MACHINES THAT THINK,<br /> AND WHAT THEY MIGHT DO FOR MEN</span></h2>
</div>

<p>The pen is mightier than the sword, it is often said. And if this is
true, then the pen with a motor may be mightier than the sword with a
motor.</p>

<p>In the Middle Ages, there were few kinds of weapons, and it was easy
for a man to protect himself against most of them by wearing armor.
As gunpowder came into use, a man could no longer carry the weight of
armor that would protect him, and so armor was given up. But in 1917,
armor, equipped with a motor and carrying the man and his weapons, came
back into service—as the tank.</p>

<p>In much the same way, in the Middle Ages, there were few books, and it
was easy for a man to handle nearly all the information that was in
books. As the printing press came into use, man’s brain could no longer
handle all recorded information, and the effort to do so was given
up. But in 1944, a brain to handle information, equipped with a motor
and supporting the man and his reasoning, came into existence—as the
sequence-controlled calculator.</p>

<p>In previous chapters we have examined some of the giant mechanical
brains that have been finished; we have also considered the design
of such machines. Now in this chapter we shall discuss the future
significance of machines that think, of motorized information. We shall
discuss what we can foresee if we look with imagination into the future.</p>

<p>There are two questions we need to ask: What types of machines that
think can we foresee? What types of problems to be solved by these
machines can we foresee?
<span class="pagenum" id="Page_181">[Pg 181]</span></p>

<h3>FUTURE TYPES OF MACHINES THAT THINK</h3>

<p>The machines that already exist show that some processes of thinking
can already be performed very quickly:</p>

<ul class="index no-wrap">
<li class="isub2">Calculating: adding, subtracting,...</li>
<li class="isub2">Reasoning: comparing, selecting,...</li>
<li class="isub2">Referring: looking up information in lists,...</li>
</ul>

<p class="no-indent">We can expect other processes of thinking to
come up to high speed through the further development of thinking
machines.</p>

<h4>Automatic Address Book</h4>

<p>Nowadays when we wish to send out announcements of an event, like going
to South America for a year, we may copy the addresses of our friends
onto the envelopes by hand. In the future, we can see our address book
as a spool of magnetic tape. When we wish to send out announcements,
we put a stack of blank envelopes into the machine that will read the
magnetic tape, and we press a button. Out will come the envelopes addressed.</p>

<p>If we wish to select only those friends of ours whose last names we put
down on a list, we can write the list on another magnetic tape, place
it also in the machine, and set a few switches. Then the machine will
read the names on the list, find their addresses in the address-book
tape, and prepare only the envelopes we want. If a friend’s address
changes, we can notify the machine. It will find his old address, erase
it, and enter the new address.</p>

<h4>Automatic Library</h4>

<p>We can foresee the development of machinery that will make it possible
to consult information in a library automatically. Suppose that you
go into the library of the future and wish to look up ways for making
biscuits. You will be able to dial into the catalogue machine “making
biscuits.” There will be a flutter of movie film in the machine. Soon
it will stop, and, in front of you on the screen, will be projected
the part of the catalogue which shows the names of three or four books
containing recipes for biscuits. If you are satisfied, you will press a
<span class="pagenum" id="Page_182">[Pg 182]</span>
button; a copy of what you saw will be made for you and come out of the
machine.</p>

<p>After further development, all the pages of all books will be available
by machine. Then, when you press the right button, you will be able to
get from the machine a copy of the exact recipe for biscuits that you choose.</p>

<p>We are not yet at the end of foreseeable development. There will be
a third stage. You will then have in your home an automatic cooking
machine operated by program tapes. You will stock it with various
supplies, and it will put together and cook whatever dishes you desire.
Then, what you will need from the library will be a program or routine
on magnetic tape to control your automatic cook. And the library,
instead of producing a pictorial copy of the recipe for you to read and
apply, will produce a routine on magnetic tape for controlling your
cooking machine so that you will actually get excellent biscuits!</p>

<p>Of course, you may have other kinds of automatic producing machinery in
your home or office. The furnishing of routines to control automatic
machinery will become a business of importance.</p>

<h4>Automatic Translator</h4>

<p>Another machine that we can foresee would be used for translating
from one language to any other. We can call it an <i>automatic
translator</i>. Suppose that you want to say “How much?” in Swedish.
You dial into the machine “How much?” and press the button “Swedish,”
and the machine will promptly write out “Hur mycket?” for you. It also
will pronounce it, if you wish, for there would be little difficulty in
recording on magnetic tape the pronunciation of the word as spoken by
a good speaker of the language. The machine could be set to repeat the
pronunciation several times so that the student could really learn the
sound. He could learn it better, probably, by hearing it and trying to
say it than he could by using any set of written symbols.</p>

<h4>Automatic Typist</h4>

<p>We now come to a possible machine that uses a new principle. This
principle is that of being able to <i>recognize</i> signs. This machine
<span class="pagenum" id="Page_183">[Pg 183]</span>
would perceive writing on a piece of paper and recognize that all the
<i>a</i>’s that appear on the paper are cases of <i>a</i>, and that
all the <i>b</i>’s that appear on it are instances of <i>b</i>, and so
forth. The machine could then control an electric typewriter and copy
the marks that it sees. The first stage of this machine would be one
in which only printed characters of a high degree of likeness could
be recognized. In later stages, handwriting, even rather illegible
handwriting, might be recognizable by the machine. We can call it an
<i>automatic typist</i>.</p>

<p>The elements of the automatic typist would be the following:</p>

<div class="blockquot">
<p class="neg-indent">1. <i>Phototubes</i> (electronic tubes sensitive
to the brightness of light), which could sense the difference between
black and white (these already exist).</p>

<p class="neg-indent">2. A memory of the shapes of 52 letters, 10
digits, and punctuation marks. Fine distinctions would be required of
this memory in some cases—like the difference between the numeral 5 and
the capital letter S.</p>

<p class="neg-indent">3. A control that would cause the machine to
<i>tune</i> itself, so that a good matching between the marks it
observed and the shapes it remembered would be reached.</p>

<p class="neg-indent">4. A <i>triggering control</i> so that, when the
machine had reached good enough matching between its observations and
its memory, the machine would proceed to identify the marks, read them,
and transfer them.</p>

<p class="neg-indent">5. An electric typewriter, which would respond to
the transferred instructions. (This also already exists.)</p>
</div>

<p>This machine is perhaps not so farfetched as it might seem. During
World War II, gun-aiming equipment using the new technique <i>radar</i>
reached a high stage of development. Many shots that disabled and sank
enemy ships were fired in total darkness by radar-controlled guns. On
the glowing screen in the control room, there were two spots, one that
marked the target and one that reported the point at which the gun
was aimed. These two spots could be brought almost automatically into
agreement. In the same way, a report from a phototube telling the shape
of an observed mark and a report from the memory of the machine telling
<span class="pagenum" id="Page_184">[Pg 184]</span>
the shape of a similar mark could be compared by the machine for
likeness and, if judged enough alike, could be approved as identical.</p>

<p>Even the phrase “enough alike” can be applied by a machine. During
World War II, tremendous advances were made in machinery for
deciphering enemy messages. Machines observed various features and
patterns in enemy messages, swiftly counted the frequency of these
features, and carried out statistical tests. Then the machines selected
those few cases in which the patterns showed meaning instead of
randomness.</p>

<p>A machine like the automatic typist, if made flexible enough, would
be, of course, extremely useful. A great load of dull office work is
now being thrown on clerks whose task is to translate from writing and
typing into languages that machines can read, such as punch cards.
At the present time, if punch-card machines are widely used in a big
company, the company must employ large numbers of girls whose sole
duty is to read papers and punch up cards. A still bigger chore is the
work of typists in all kinds of businesses whose main duty is to read
handwriting, etc., and then copy the words on a typewriter.</p>

<div class="figcenter">
  <img id="FIG_1-11" src="images/i_184.jpg" alt="" width="600" height="253" />
  <p class="f120 space-below2"><b>Each square in the grill<br /> is watched by a phototube.</b></p>
  <p class="f120 space-below2"><span class="smcap">Fig. 1.</span> Scheme for distinguishing <i>A</i> and
<i>H</i> by 15 phototubes.</p>
</div>

<p>Research has already begun on various features of the automatic typist
because of its obvious labor-saving value. For example, many patents
have been issued on schemes for dividing the area occupied by a letter
or a digit into an array of spots, with a battery of phototubes
each watching a spot. The reports from the phototubes together will
distinguish the letter or digit. For example, if we consider <i>A</i>
and <i>H</i> placed in a grill of fifteen spots, 5 long by 3 wide
<span class="pagenum" id="Page_185">[Pg 185]</span>
(<a href="#FIG_1-11">see Fig. 1</a>), then the phototubes can distinguish
between <i>A</i> and <i>H</i> by sensing black or white in the spot
in the middle of the top row. When we consider how easily and swiftly
a human being does this, we can once more marvel at the recognizing
machine we all carry around with us in our heads.</p>

<h4>Automatic Stenographer</h4>

<p>Another development that we can foresee is one that we can call the
<i>automatic stenographer</i>. This is a machine that will listen to
sounds and write them down in properly spelled English words. The
elements of this machine can be outlined:</p>

<div class="blockquot">
<p class="neg-indent">1. Microphones, which can sense spoken sounds
(these already exist).</p>

<p class="neg-indent">2. A memory storing the 40 (more or less) phonetic
units or sounds that make up English, such as the 23 consonant sounds,</p>
</div>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdl"><i>p</i></td>
      <td class="tdl_ws1"><i>b</i></td>
      <td class="tdl_ws1"><i>l</i></td>
      <td class="tdl_ws1"><i>ng</i></td>
   </tr><tr>
      <td class="tdl"><i>f</i></td>
      <td class="tdl_ws1"><i>v</i></td>
      <td class="tdl_ws1"><i>m</i></td>
      <td class="tdl_ws1"><i>th</i></td>
   </tr><tr>
      <td class="tdl"><i>t</i></td>
      <td class="tdl_ws1"><i>d</i></td>
      <td class="tdl_ws1"><i>n</i></td>
      <td class="tdl_ws1"><i>r</i></td>
   </tr><tr>
      <td class="tdl"><i>s</i></td>
      <td class="tdl_ws1"><i>z</i></td>
      <td class="tdl_ws1"><i>h</i></td>
      <td class="tdl_ws1"><i>y</i></td>
   </tr><tr>
      <td class="tdl"><i>k</i></td>
      <td class="tdl_ws1"><i>g</i></td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1"><i>w</i></td>
   </tr><tr>
      <td class="tdl"><i>ch</i></td>
      <td class="tdl_ws1"><i>j</i></td>
      <td class="tdl_ws1" colspan="2">&nbsp;</td>
   </tr><tr>
      <td class="tdl"><i>sh</i></td>
      <td class="tdl_ws1" colspan="3"><i>zh</i> (heard in “pleasure”)</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">and the 17 vowel sounds,</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Long</span></th>
      <th class="tdc"><span class="smcap">Short</span></th>
      <th class="tdc"><span class="smcap">Other</span></th>
  </tr>
  </thead>
  <tbody><tr>
      <td class="tdl"><i>A</i> (“ate”)</td>
      <td class="tdl_ws1"><i>a</i> (“cat”)</td>
      <td class="tdl_ws1"><i>ar</i> (“are”)</td>
   </tr><tr>
      <td class="tdl"><i>E</i> (“eat”)</td>
      <td class="tdl_ws1"><i>e</i> (“end”)</td>
      <td class="tdl_ws1"><i>aw</i> (“awe”)</td>
   </tr><tr>
      <td class="tdl"><i>I</i> (“isle”)</td>
      <td class="tdl_ws1"><i>i</i> (“in”)</td>
      <td class="tdl_ws1"><i>er</i> (“err”)</td>
   </tr><tr>
      <td class="tdl"><i>O</i> (“owe”)</td>
      <td class="tdl_ws1"><i>o</i> (“on”)</td>
      <td class="tdl_ws1"><i>ow</i> (“owl”)</td>
   </tr><tr>
      <td class="tdl"><i>U</i> (“cute”)</td>
      <td class="tdl_ws1"><i>u</i> (“up”)</td>
      <td class="tdl_ws1"><i>oi</i> (“oil”)</td>
   </tr><tr>
      <td class="tdl"><i>OO</i> (“roof”)</td>
      <td class="tdl_ws1"><i>oo</i> (“book”)</td>
      <td class="tdl_ws1">&nbsp;</td>
   </tr>
 </tbody>
</table>

<div class="blockquot">
<p class="neg-indent">3. A collection of the rules of spelling in
English, containing many statements like
<span class="pagenum" id="Page_186">[Pg 186]</span></p>

<p class="neg-indent2">The sound <i>b</i> is always spelled <i>b</i></p>

<p class="neg-indent2">The sound <i>sh</i> may be spelled
<i>sh</i> (ship), <i>s</i> (sugar), <i>ti</i> (station), <i>ci</i>
(physician), <i>ce</i> (ocean) or <i>tu</i> (picture) and other
statements based on context, word lists, derivation, etc. These are
the statements by means of which a good English speller knows how to
spell even words that he hears for the first time.</p>

<p class="neg-indent">4. A triggering control so that, when the machine
reaches good enough matching between its observations of sounds, its
memory of sounds, and its knowledge of spelling rules, the machine
will identify groups of sounds as words, determine their spelling, and
report the letters determined.</p>

<p class="neg-indent">5. An electric typewriter, which would type the
reported letters.</p>
</div>

<p>With this type of machine, you would dictate your letters into a
machine (now existing) that would record your voice. Then the record
would be placed on the automatic stenographer, and out would come your
letters written and spaced as they should be.</p>

<h4>Automatic Recognizer</h4>

<p>We can foresee a recognizing machine with very general powers. Suppose
that we call it an <i>automatic recognizer</i> (<a href="#FIG_2-11">see Fig. 2</a>).
It will have the following elements:</p>

<div class="blockquot">
<p class="neg-indent">1. <i>Input.</i> This element will consist
of a set of observing instruments, capable of perceiving sights,
sounds, etc. There will be ways of positioning or <i>tuning</i> these
instruments.</p>

<p class="neg-indent">2. <i>Memory.</i> This element will store
knowledge. It may store the patterns of observations that we are
interested in; or it may store general rules on how to find patterns of
observations that we will be interested in. It will contain knowledge
about acceptable groups of patterns, about actions to be performed in
response to patterns, etc.
<span class="pagenum" id="Page_187">[Pg 187]</span></p>

<p class="neg-indent">3. <i>Program 1.</i> The element “Program 1”
performs a set of standard instructions. Under these instructions, the
machine:</p>

<p class="neg-indent2">Compares group after group of observations with
the information in the memory.</p>

<p class="neg-indent2">Compares these groups with patterns furnished,
or seeks to organize the observations into patterns.</p>

<p class="neg-indent2">Counts cases and tests frequencies.</p>

<p class="neg-indent2">Finds out how much matching with patterns there
is.</p>

<p class="neg-indent2">Tunes the observing instruments in ways to
increase matching.</p>
</div>

<div class="figcenter">
  <img id="FIG_2-11" src="images/i_187.jpg" alt="" width="600" height="493" />
  <p class="f120 space-below2"><span class="smcap">Fig. 2.</span> Scheme of an automatic recognizer.</p>
</div>

<div class="blockquot">
<p class="neg-indent">4. <i>Program 2.</i> The element “Program
2” performs another set of standard instructions. Under these
instructions, the machine, if it is tuned well, matches sets of
observations one after another with the patterns and so reads them.</p>

<p class="neg-indent">5. <i>Triggering Control.</i> This element shifts
the control of the machine from Program 1 to Program 2. It does this
when the machine reaches “good matching.” We shall set the meaning of
this into the machine in much the same way as we set “warm” into a
thermostat.</p>

<p class="neg-indent">6. <i>Output.</i> This element performs any
action that we want, depending on recognized patterns read and any
other knowledge or instructions stored in the memory.</p>
</div>

<p><span class="pagenum" id="Page_188">[Pg 188]</span>
The automatic recognizer will be capable of extraordinary tasks. With
microphones and a large memory, this type of machine would be able to
hear a foreign language spoken and translate it into spoken or written
English. With phototubes and with an expanded filtering and decoding
capacity as in deciphering machines, the automatic recognizer should be
able to read a dead language, even those (such as Minoan or Etruscan)
that have so far resisted efforts to read it. The machine would derive
rules for the translation of the language and translate any sample.</p>

<p>An automatic recognizer could perhaps be equipped with many sensitive,
tiny observing instruments that could be placed around or in the brain
and nervous systems of animals. Then the machine might enable us to
find out what activity in the nervous system corresponds with what
activity in the animal.</p>

<h3>TYPES OF PROBLEMS THAT MACHINES<br /> WILL SOLVE IN THE FUTURE</h3>

<p>We turn now to the second question regarding the future of machines
that think: What types of problems can we foresee as solved by these machines?</p>

<h4>Problems of Control</h4>

<p>Probably the foremost problem which machines that think can solve is
automatic control over all sorts of other machines. This involves
controlling a machine that is running so that it will do the right
thing at the right time in response to information. For example,
suppose that you are mowing a lawn with a mowing machine. You watch
the preceding strip so as to stay next to it. You watch the ends of
the strips, where you turn around. If a stick is caught in the cutting
blade, you stop and take it out. Now it is entirely possible to put
devices on the mowing machine so that all these things will be taken
care of automatically. In fact, in the case of plowing a large field, a
tractor-plow can be equipped with a device that guides it next to the
preceding furrow. Thus, once the first furrow around the edge has been
made, riderless tractors will plow a whole field and stop in the middle.
<span class="pagenum" id="Page_189">[Pg 189]</span></p>

<p>For another example, take a gas furnace for heating steam to keep a
house warm. Such a furnace has automatic controls, which respond to the
following information whenever reported:</p>

<ul class="index fontsize_120">
<li class="isub2">House too warm.</li>
<li class="isub2">House not warm enough.</li>
<li class="isub2">Too much steam pressure.</li>
<li class="isub2">Not enough water in boiler.</li>
<li class="isub2">Gas flame not lit.</li>
<li class="isub2">Daytime.</li>
<li class="isub2">Nighttime.</li>
</ul>

<p class="no-indent">In fact, your own meaning of “warm” can be put
into the control system: you set the dial on your thermostat at the
temperature that “warm” is to be for you.</p>

<p>In the future many kinds of automatic control will be common. We shall
have automatic pilots for flying and landing airplanes. We shall have
automatic missiles for destructive purposes, such as bombing and
killing, and for constructive purposes, such as delivering mail and
fast freight. An article in the magazine <i>Fortune</i> for November
1946 described the automatic factory (<a href="#SUPPL_3">see Supplement 3</a>).
This is a factory in which there would be automatic arms for holding stuff being
manufactured, and automatic feed lines for supplying material just
where it is needed. All this factory would be controlled by machines
that handle information automatically and produce actions that respond
to information.</p>

<p>This prospect fills us with concern as well as with amazement. How
shall we control these automatic machines, these robots, these
Frankensteins? What will there be left for us to do to earn our living?
But more of this in the next chapter.</p>

<h4>Problems of Science</h4>

<p>Other problems for which we can foresee the use of machines that think
are the understanding, and later the controlling, of nature. One of
these problems is weather forecasting and weather control.</p>

<h4>The Weather Brain</h4>

<p>We can imagine the following type of machine—a <i>weather brain</i>.
<span class="pagenum" id="Page_190">[Pg 190]</span>
A thousand weather observatories all over the country observe the weather
at 8 <span class="smcap">a.m.</span> The observations are fed automatically through
a countrywide network of communication lines into a central station. Here
a giant machine, containing a great deal of scientific knowledge about
the weather, takes in all the data reported to it. At 8:15 the weather
brain starts to calculate; in half an hour it has finished, having
produced an excellent forecast of the weather for the whole country.
Then it proceeds to transmit its forecast all over the country. By 8:50
every weather station, newspaper, radio station, and airport in the
country has the details. In October 1945, Dr. V. K. Zworykin of the
Princeton Laboratories of the Radio Corporation of America proposed
solving the problem of weather forecasting in this way by a giant brain.</p>

<p>The weather brain will have a second stage of application. From time
to time and here and there, the weather is unstable: it can be triggered
to behave in one way or another. For example, recently, pellets of
<i>frozen carbon dioxide</i>—often called Dry Ice—have been dropped
from planes and have caused rain. In fact, a few pounds of Dry Ice have
apparently caused several hundred tons of rain or snow. In similar
ways, we may, for example, turn away a hail storm so that hail will
fall over a barren mountain instead of over a farming valley and
thus protect crops. Or we may dispel conditions that would lead to a
tornado, thus avoiding its damage. Both these examples involve local
weather disturbances. However, even the greatest weather disturbances,
like hurricanes and blizzards, may eventually be directed to some
extent. Thus the weather may become to some degree subject to man’s
control, and the weather brain will be able to tell men where and when
to take action.</p>

<h4>Psychological Testing</h4>

<p>Another scientific problem to which new machinery for handling
information applies is the problem of understanding human beings and
their behavior. This increased understanding may lead to much wiser
dealing with human behavior.</p>

<p>For example, consider tests of aptitudes. If you take one of these
tests, you may be asked to mark which word out of five suggested ones
is nearest in meaning to a given word. Or your test may be 40 simple
<span class="pagenum" id="Page_191">[Pg 191]</span>
arithmetical problems to be solved in 25 minutes. Or you may be given
a sheet with 20 circles, and be asked to put 3 dots in the first, 7
dots in the second, 4 dots in the third, 11 dots in the fourth, and
so on, irregularly; you may be given a total of 45 seconds to do this
as well as you can. Now, if a vocational counselor gives you one of
these tests, and if you get 84 out of 100 on it, he needs to know just
what he has measured about you. Also, he needs to know whether he can
reasonably forecast that, as a result of your grade of 84, you will
be good at writing articles, or good at supervising the work of other
people, or good at designing in a machine shop. He needs to know the
records of people with scores of about 84 on this test and to have
evidence supporting his forecasts.</p>

<p>If we wish to make the most use of the tests, we need to carry out a
good deal of statistics, mathematics, and logic. For example, it will
turn out that answers to some questions are much more significant
than answers to others, and so we can greatly improve the quality of
the tests by keeping only the more significant questions. Powerful
machinery for handling calculations will be very useful in the field of
aptitude testing.</p>

<p>But, you may ask, what if the person analyzing your answers has to use
interpretations and judgments? If the judgments and interpretations can
be expressed in words, and if the words can be translated into machine
language, then the machine can carry out the analysis. Usually the
difference between a rule and a judgment is simply this: a rule in a
case in which it is hard to express all the factors being considered is
called a judgment.</p>

<h4>Psychological Trainer</h4>

<p>It is conceivable that machines that think can eventually be applied
in the actual treatment of mental illness and maladjustment. Consider
what a physician does. In treating a psychiatric case, such as a
<i>neurosis</i>, a physician uses words almost entirely. He asks
questions. He listens to the patient’s answers. Each answer takes the
physician nearer and nearer to a diagnosis. By and by the physician
knows what most of the difficulty is. Then he must present his
knowledge slowly to the patient, gradually guiding the patient to
understanding. It is a psychological truth that telling a man in ten
<span class="pagenum" id="Page_192">[Pg 192]</span>
minutes what is wrong with him does not cure him. The physician seeks
to free the patient from the tormenting circles of habit and worry
in which he has been trapped. Often the diagnosis is short and the
treatment is long; the reasons for the neurosis may soon be clear to
the physician, but they may take months to become clear to the patient.</p>

<p>Now let us consider the following kind of machine as an aid to the
physician. We might call this kind of machine a <i>psychological
trainer</i>, for in many ways it is like the training machines used in
World War II for training a pilot to fly an airplane. The psychological
trainer would have the following properties:</p>

<div class="blockquot">
<p class="neg-indent">1. The machine is able to show sound
movies—produce pictures and utter words.</p>

<p class="neg-indent">2. It is able to put before the patient:
situations, problems, questions, experiences, etc.</p>

<p class="neg-indent">3. It is able to take in responses from the
patient.</p>

<p class="neg-indent">4. It is able to receive a program of
instructions from the physician.</p>

<p class="neg-indent">5. Depending on the responses of the patient and
on the program from the physician, the training machine can select more
material to put before the patient.</p>

<p class="neg-indent">6. The training machine produces a record of what
it presented and of how the patient responded, so that the physician
and the patient can study the record later.</p>
</div>

<p>What sort of films would the machine hold? The machine could be loaded
with a number of films which would help in the particular type of
neurosis from which the patient was suffering.</p>

<p>What sort of responses could the patient make? The patient might have
buttons in front of him which he could press to indicate such answers
as:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdl">Yes</td>
      <td class="tdl_ws1">I don’t know</td>
      <td class="tdl_ws1">Repeat</td>
   </tr><tr>
      <td class="tdl">No</td>
      <td class="tdl_ws1">It depends</td>
      <td class="tdl_ws1">Go ahead</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Also, the patient might hold a device—like a lie
detector, perhaps—which would report his state of tenseness, etc., and
so report what he really felt.</p>

<p>Where would the machine’s questions come from? From one or more
physicians very clever in the treatment of mental illness.
<span class="pagenum" id="Page_193">[Pg 193]</span></p>

<p>Suppose that the patient is inconsistent in his answers? The machine,
discovering the inconsistencies, could return to the subject and ask
related questions in a different way. As soon as several questions
related to the same point are answered consistently, the machine could
exclude groups of questions that no longer apply and could proceed to
other questions that would still apply.</p>

<p>Patients would vary in their ability to go as fast as the machine
could. So from time to time the machine would ask questions to test
the effect of what it had presented; and, depending on the answers,
the machine would go faster or would bring in additional material to
clarify some point.</p>

<p>This machine might have a few advantages over ordinary treatment. For
example, with the machine, treatment does not depend on the physician’s
making the right answer in a split second, as it may in a personal
interview. Also, the patient might be franker with the machine than
with the physician, for it might be arranged that the patient could
review his record, and then decide whether to confess it to his
physician.</p>

<p>Such a machine would enable physicians to treat many more patients
than they now can. In fact, it is estimated that nearly 50 per cent of
persons who consult physicians are suffering only from mental illness.
Such a machine would therefore be a great help.</p>

<h4>Problems of Business</h4>

<p>Another large group of problems for which we can foresee the use of
machines that think is found in business and economics.</p>

<p>For example, consider production scheduling in a business or a factory.
The machine takes in a description of each order received by the
business and a description of its relative urgency. The machine knows
(that is, has in its memory) how much of each kind of raw material is
needed to fill the order and what equipment and manpower are needed
to produce it. The machine makes a schedule showing what particular
men and what particular equipment are to be set to work to produce the
order. The machine turns out the best possible production schedule,
showing who should do what when, so that all the orders will be filled
<span class="pagenum" id="Page_194">[Pg 194]</span>
in the best sequence. What is the “best” sequence? We can decide what
we think is the best sequence, and we can set the machine for making
that kind of selection, in the same way as we decide what is “warm” and
set the thermostat to produce it!</p>

<p>On a much larger scale, we can use mechanical brains to study economic
relations in a society. Everything produced in a society is made by
consuming some materials, labor, equipment, and skill. The output
produced by one man or factory or industry becomes the input for
other men, factories, industries. In this way all economic units are
linked together by many different kinds and degrees of dependence. The
situation is, of course, complicated: it changes as time goes on and
as people want different things produced. Economists have already set
up simple models of economic societies and have studied them. But with
machines that think, it will be possible to set up and study far more
complicated models—models that are very much like the society we live
in. We can then answer questions of economics by calculation instead of
by arguments and counting noses. We shall be able to solve definitely
such problems as: “How will a rise in the price of steel affect the
farming industry?” “How much money must be paid out as wages and salaries
so that consumer purchasing power will buy back what industry produces?”</p>

<h4>Machines and the Individual</h4>

<p>What about the ordinary everyday effects of these machines upon you
and me as an individual? We can see that the new machinery will apply
on a small scale even to us. Small machines using a few electronic
tubes—much like a radio set, for example—and containing spools of
magnetic wire or magnetic tape will doubtless be available to us. We
shall be able to use them to keep addresses and telephone numbers, to
figure out the income tax we should pay, to help us keep accounts and
make ends meet, to remember many things we need to know, and perhaps
even to give us more information. For there are a great many things
that all of us could do much better if we could only apply what the
wisest of us knows.</p>

<p><span class="pagenum" id="Page_195">[Pg 195]</span>
We can even imagine what new machinery for handling information may
some day become: a small pocket instrument that we carry around with
us, talking to it whenever we need to, and either storing information
in it or receiving information from it. Thus the brain with a motor
will guide and advise the man just as the armor with a motor carries
and protects him.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_196">[Pg 196]</span></p>
<h2 class="nobreak" id="CHAPTER_12">Chapter 12<br />
<span class="h_subtitle">SOCIAL CONTROL:<br />
MACHINES THAT THINK<br />AND HOW SOCIETY MAY CONTROL THEM</span></h2>
</div>

<p>It is often easier for men to create a device than to guide it well
afterwards: it is often easier for a scientist to study his science
than to study the results for good or evil that his discoveries may
lead to. But it is not right nor proper for a scientist, a man who is
loyal to truth as an ideal, to have no regard for what his discoveries
may lead to.</p>

<p>This principle is now being widely recognized. Many scientists
today—both as individuals and as groups, and especially the
atomic scientists—are considering the results of their scientific
discoveries; and they are sharing in the effort to render those results
truly useful to humanity.</p>

<p>It would be easy to leave out of this book any discussion of how
machines that think may be controlled, any consideration of how they
may be made truly useful to humanity. But that would be hardly right
or proper. In concluding a book such as this one, that touches on many
aspects of machines that think, we need to consider what can and should
be done to make such machines of true benefit to all of humanity.</p>

<p>So, we come to the most important of all our questions: What sort of
control over machines that think do we need in human society?</p>

<h3>MACHINE THAT BOTH THINKS AND ACTS</h3>

<p>From a narrow point of view, a machine that only thinks produces only
<span class="pagenum" id="Page_197">[Pg 197]</span>
information. It takes in information in one state, and it puts out
information in another state. From this viewpoint, information
in itself is harmless; it is just an arrangement of marks; and accordingly,
a machine that thinks is harmless, and no control is necessary.</p>

<p>Although it is true that the information produced only becomes good or
evil after other machinery or human beings act on the information, in
reality a machine with the power to produce information is constructed
only for the reason of its use. We want to know what such machines can
tell us only because we can then proceed to act much more efficiently
than before. For example, a guided missile needs a mechanical brain
only because then it can reach its target. In all cases mechanical
brains are inseparable from their uses.</p>

<p>For the purposes of this chapter, the narrow view will be rejected
because it dodges the issue. We shall be much concerned with the
combination of a machine that thinks with another machine that acts;
and we shall often call this combination the <i>robot machine</i>.</p>

<h3>READING THIS CHAPTER</h3>

<p>Now, before launching further into the discussion, we need to say
that the conclusions suggested in this chapter are not final. Even
if they are expressed a little positively in places, they are
nevertheless subject to change as more information is discovered and
as the appraisal of information changes with time. Also, almost any
conclusions about social control—including, certainly, the conclusions
in this chapter—are subject to controversy. But controversy is good:
it leads to thought. The more minds that go to work on solving the
problem of social control over robot machines and other products of
the new technology—which is rushing upon us from the discoveries of
the scientists—the better off we all will be. If, while stimulating
disagreement, the ideas expressed in this chapter should succeed in
stimulating thought and deliberation, the purpose of this chapter will
be well fulfilled.</p>

<p>Up to this point in this book, the emphasis has been on possibilities
of benefits to humanity that may arise from machines that think. In
this chapter, devoted as it is to the subject of control, the emphasis
<span class="pagenum" id="Page_198">[Pg 198]</span>
is on possibilities for harm. Both possibilities are valid, and the
happening of either depends upon the actions of men. In much the same
way, atomic energy is a great possibility for benefit and for harm. It
is the nature of control to put a fence around danger; and so it is
natural in this chapter that the weight of attention should shift to
the dangerous aspects of machines that think.</p>

<p>Perhaps a reader may feel that a chapter of this kind is rather out of
place in a book, such as this one, that seeks to be scientific. If so,
he is reminded that, in accordance with the general suggestions for
reading this book stated in the preface, he should omit this chapter.</p>

<h3>FRANKENSTEIN</h3>

<p>Perhaps the first study of the consequences of a machine that thinks
is a prophetic novel called <i>Frankenstein</i>, written more than a
hundred years ago, in 1818. The author, then only 21 years old, was
Mary W. Godwin, who became the wife of the poet Percy Bysshe Shelley.</p>

<p>According to the story, a young Swiss, an ardent student of physiology
and chemistry, Victor Frankenstein, finds the secret of life. He makes
an extremely ugly, clever, and powerful monster, with human desires.
Frankenstein promptly flees from his laboratory and handiwork. The
monster, after seeking under great hardships for a year or two to earn
fair treatment among men, finds himself continually attacked and harmed
on account of his ugliness, and he becomes embittered. He begins to
search for his creator for either revenge or a bargain. When they meet:</p>

<div class="blockquot">
<p>“I expected this reception,” said the daemon.</p>

<p>“All men hate the wretched; how then must I be hated
who am miserable beyond all living things! Yet you my
creator detest and spurn me, thy creature, to whom thou
art bound by ties only dissoluble by the annihilation
of one of us. You purpose to kill me. How dare you
sport thus with life? Do your duty towards me, and I
will do mine towards you and the rest of mankind. If
you will comply with my conditions, I will leave them
and you at peace; but if you refuse, I will glut the
maw of death, until it be satiated with the blood of
your remaining friends.”</p>
</div>

<p class="no-indent">Frankenstein starts to comply with the main
condition, which is to make <span class="pagenum" id="Page_199">[Pg
199]</span> a mate for the monster; but Frankenstein cannot bring
himself to do it. So the monster causes the death one after another of
all Frankenstein’s family and closest friends; and the tale finally
ends with the death of Frankenstein and the disappearance of the
monster.</p>

<p>As the dictionary says about Frankenstein, “The name has become a
synonym for one destroyed by his own works.”</p>

<h3>ROSSUM’S UNIVERSAL ROBOTS</h3>

<p>Perhaps the next study of the consequences of a machine that thinks is
a remarkable play called <i>R.U.R.</i> (for Rossum’s Universal Robots),
first produced in Prague in 1921. Karel Čapek, the Czech dramatist who
wrote it, was then only 31. The word “robot” comes from the Czech word
“robota,” meaning compulsory service.</p>

<p>According to the play, Rossum the elder, a scientist, discovered a
“method of organizing living matter” that was “more simple, flexible,
and rapid” than the method used by nature. Rossum the younger, an
engineer, founded a factory for the mass production of artificial
workmen, robots. They had the form of human beings, intelligence,
memory, and strength; but they were without feelings.</p>

<p>In the first act, the factory under Harry Domin, General Manager, is
busy supplying robots to purchasers all over the world—for work, for
fighting, for any purpose at all, to anyone who could pay for them.
Domin declares:</p>

<div class="blockquot">
<p class="no-indent">“... in ten years, Rossum’s Universal Robots will
produce so much corn, so much cloth, so much everything that things
will be practically without price. There will be no poverty. All work
will be done by living machines. Everybody will be free from worry and
liberated from the degradation of labor. Everybody will live only to
perfect himself.... It’s bound to happen.”</p>
</div>

<p>In the second act, ten years later, it turns out that Domin and the
others in charge of the factory have been making some robots with
additional human characteristics, such as the capacity to feel pain.
The newer types of robots, however, have united all the robots against
man, for the robots declare that they are “more highly developed than
man, stronger, and more intelligent, and man is their parasite.”
<span class="pagenum" id="Page_200">[Pg 200]</span></p>

<p>In the last act, the robots conquer and slay all men except one—an
architect, Alquist, who in the epilogue provides a final quirk to the
plot.</p>

<h3>FACT AND FANCY</h3>

<p>Now what is fact and what is fancy in these two warnings given to us a
hundred years apart?</p>

<p>Of course, it is very doubtful that a Frankenstein monster or a Rossum
robot will soon be constructed with nerves, flesh, and blood like an
animal body. But we know that many types of robot machines can even
now be constructed out of hardware—wheels, motors, wires, electronic
tubes, etc. They can handle many kinds of information and are able to
perform many kinds of actions, and they are stronger and swifter than man.</p>

<p>Of course, it is doubtful that the robot machines, by themselves and
of their own “free will,” will be dangerous to human beings. But as
soon as antisocial human beings have access to the controls over robot
machines, the danger to society becomes great. We want to escape that danger.</p>

<h4>Escape from Danger</h4>

<p>A natural longing of many of us is to escape to an earlier, simpler
life on this earth. Victor Frankenstein longed to undo the past. He said:</p>

<p class="blockquot">“Learn from me, if not by my precepts, at least
by my example, how dangerous is the acquirement of knowledge, and how
much happier that man is who believes his native town to be the world,
than he who aspires to become greater than his nature will allow.”</p>

<p>Any sort of return to the past is, of course, impossible. It is
doubtful that men could, even if they wanted to, stop the great flood
of technical knowledge that science is now producing. We all must
now face the fact that the kind of world we used to live in, even so
recently as 1939, is gone. There now exist weapons and machines so
powerful and dangerous in the wrong hands that in a day or two most of
the people of the earth could be put to death. Giant brains are closely
related to at least two of these weapons: scientists have already used
mechanical brains for solving problems about atomic explosives and
<span class="pagenum" id="Page_201">[Pg 201]</span>
guided missiles. In addition, thinking mechanisms designed for the
automatic control of gunfire were an important part of the winning of
World War II. They will be a still more important part of the fighting
of any future war.</p>

<p>Nor can we escape to another part of the earth which the new weapons
will not reach. At 300 miles an hour, any spot on earth can be reached
from any other in less than 48 hours. A modern plane exceeds this
speed; a rocket or guided missile doubles or trebles it.</p>

<p>Nor can we trust that some kind of good luck will pull us through and
help men to escape the consequences of what men do. Both Frankenstein
and Domin reaped in full the consequences of what they did. The history
of life on this earth that is recorded in the rocks is full of evidence
of races of living things that have populated the earth for a time
and then become extinct, such as the dinosaurs. In that long history,
rarely does a race survive. In our own day, insects and fungi rather
than men have shown fitness to survive and spread over the earth:
witness the blight that destroyed the chestnut trees of North America,
in spite of the best efforts of scientists to stop it.</p>

<p>There seems to be no kind of escape possible. It is necessary to
grapple with the problem: How can we be safe against the threat of
physical harm from robot machines?</p>

<h3>UNEMPLOYMENT</h3>

<p>The other chief threat from robot machines is against our economic
life. Harry Domin, in <i>R.U.R.</i>, you remember, prophesied: “All
work will be done by living machines.” As an example, in the magazine
<i>Modern Industry</i> for Feb. 15, 1947, appeared a picture of a
machine for selling books, and under the picture were the words:</p>

<p class="blockquot"><i>Another new product in robot
salesmen</i>—Latest in the parade of mechanical vending machines is
this book salesman.... It is designed for use in hospitals, rail
terminals, and stores. It offers 15 different titles, selected
manually, and obtained by dropping quarter in slot. Cabinet stores 96
books.</p>

<p class="no-indent">Can you feel the breath of the robot salesman,
workman, engineer,—&mdash;, on the back of your neck?
<span class="pagenum" id="Page_202">[Pg 202]</span></p>

<p>At the moment when we combine automatic producing machinery and
automatic controlling machinery, we get a vast saving in labor and
a great increase in technological unemployment. In extreme cases,
perhaps, the effect of robot machines will be the disappearance of men
from a factory. Such a factory will be like a modern power plant that
turns a waterfall into electricity: once the machinery is installed,
only one watchman is ordinarily needed. But, in most cases, this will
be the effect: in a great number of factories, mines, farms, etc., the
labor force needed will be cut by a great proportion. The effect is not
different in quality, because the new development is robot machinery;
but the amount of technological unemployment coming from robot machines
is likely to be considerably greater than previously.</p>

<p>The robot machine raises the two questions that hang like swords over
a great many of us these days. The first one is for any employee: What
shall I do when a robot machine renders worthless all the skill I have
spent years in developing? The second question is for any businessman:
How shall I sell what I make if half the people to whom I sell lose
their jobs to robot machines?</p>

<h3>SOCIAL CONTROL<br />AND ITS TWO SIDES</h3>

<p>The two chief harmful effects upon humanity which are to be expected
from robot machines are physical danger and unemployment. These are
serious risks, and some degree of social control is needed to guard
against them.</p>

<p>There will also be very great advantages from robot machines. The
monster in <i>Frankenstein</i> is right when he says, “Do your duty
towards me, and I will do mine towards you and the rest of mankind.”
And Harry Domin in <i>R.U.R.</i> is right as to possibility when he
says, “There will be no poverty.... Everybody will be free from worry.”
Social control must also be concerned with how the advantages from
robot machines are to be shared.</p>

<p>The problem of social control over men and their devices has always had
two sides. The first side deals with what we might plan for control
if men were reasonable and tolerant. This part of the problem seems
<span class="pagenum" id="Page_203">[Pg 203]</span>
relatively easy. The other side deals with what we must ordinarily
arrange, since most men are often unreasonable and prejudiced and, as a
result, often act in antisocial ways. This part of the problem is hard.
Let us begin with the easier side first.</p>

<h3>TYPES OF CONTROL—<br />IF MEN WERE REASONABLE</h3>

<p>In seeking to fulfill wants and achieve safety, men have used hundreds
of types of control. The main types are usually called political and
economic systems, but there are always great quantities of exceptions.
The more mature and freer the society, the greater the variety of types
of control that can be found in it.</p>

<p>Probably the most widely used type of control in this country is
private and public control working together, as private ownership
and public regulation—for example, railroads, banks, airlines, life
insurance companies, telephone systems, and many others. It would be
reasonable to expect private ownership and public regulation of a
great many classes of robot machines, to the end that they would never
threaten the safety of people.</p>

<p>Another common type of control is public ownership and operation;
examples are toll bridges, airports, city transit systems, and
water-supply systems. Atomic energy was so clearly fraught with
serious implications that in 1946 the Congress of the United States
placed it entirely under public control expressed as the Atomic
Energy Commission. There is a class of robot machinery which has
already reached the stage of acute public concern: guided missiles and
automatic fire-control. It would be reasonable that in this country
all activity in this subdivision should be under close control by the
Department of Defense.</p>

<p>In the international arena, again, the problem becomes soluble if
we assume men to be reasonable. An international agency, such as an
organ of the United Nations, would take over inspection and control of
robot machine activities closely affecting the public safety anywhere
in the world. Particularly, this agency would concern itself with
guided missiles, robot pilots for planes, automatic gunfire control,
etc. Much manufacturing skill is needed to make such products as
these: the factories where they could be manufactured would thereby be
<span class="pagenum" id="Page_204">[Pg 204]</span>
determined. Also, a giant brain is a useful device for solving
scientific problems about weapons of mass destruction. So the agency
would need to inspect the problems being solved on such machines. This
agency would be responsible to a legislature or an executive body
representing all the people in the world—if men were reasonable.</p>

<p>In regard to the effects of robot machines on unemployment, again,
if men were reasonable, the problem would be soluble. The problem is
equivalent to the problem of abundance: how should men distribute the
advantages of a vast increase in production among all the members of
society in a fair and sensible way? A vast increase in production is
not so impossible as it may seem. For example, in 1939, with 45 million
employed, the United States index of industrial production was at 109,
and, in 1943, with 52½ million employed, the index of production
was at 239.</p>

<p>If men were reasonable, the net profits from robot machinery would
be divided among (1) those who had most to do with devising the new
machinery, and (2) all of society. A rule would be adopted (probably
it could be less complicated than some existing tax rules) which would
take into account various factors such as rewards to the inventors,
incentives to continue inventing, adequate assistance to those made
unemployed by the robot machines, reduction of prices to benefit
consumers, and contributions to basic and applied scientific research.</p>

<p>In fact, under the assumption “if men were reasonable,” it would hardly
be necessary to devote a chapter to the problem of social control over
robot machines!</p>

<h3>OBSTACLES</h3>

<p>The discussion above of how robot machines could be controlled
supposing that men were reasonable, seems, of course, to be glaringly
impractical. Men are not reasonable on most occasions most of the time.
If we stopped at this point, again we would be dodging the issue. What
are the obstacles to reasonable control?</p>

<p>There are, it seems, two big obstacles and one smaller one to
reasonable types of social control over robot machines. The smaller one
<span class="pagenum" id="Page_205">[Pg 205]</span>
is ignorance, and the two big obstacles are prejudice and a narrow
point of view.</p>

<h4>Ignorance</h4>

<p>By ignorance we mean lack of knowledge and information. Now mechanical
brains are a new and intricate subject. A great many people will,
through no fault of their own, naturally remain uninformed about
mechanical brains and robot machines for a long time. However, there is
a widespread thirst for knowledge these days: witness in magazines, for
example, the growth of the article and the decline of the essay. There
is also a fairly steady surge of knowledge from the austere scientific
fountain of new technology. We can thus see both a demand and a supply
for information in such fields as mechanical brains and robot machines.
We can expect, therefore, a fairly steady decline in ignorance.</p>

<h4>Prejudice</h4>

<p>Prejudice is a much more serious obstacle to reasonable control over
robot machines. It will be worth our while to examine it at length.</p>

<p>Prejudice is frequent in human affairs. For example, in some countries,
but not in all, there is conflict among men, based on their religious
differences. Again, in other countries, but not in all, there is
wide discrimination among men, based on the color of their skin.
Over the whole world today, there is a sharp lack of understanding
between conservatives, grading over to reactionaries, on the one
hand, and liberals, grading over to radicals, on the other hand. All
these differences are based on men’s attitudes, on strongly held
sets of beliefs. These attitudes are not affected by “information”;
the “information” is not believed. The attitudes are not subject to
“judgment”; they come “before judgment”: they are prejudices. Even
in the midst of all the science of today, prejudice is widespread.
In Germany, from 1933 to 1939, we saw one of the most scientific of
countries become one of the most prejudiced.</p>

<p>Prejudice is often difficult to detect. We find it hard to recognize
even in ourselves. For a prejudice always seems, to the person who has
<span class="pagenum" id="Page_206">[Pg 206]</span>
it, the most natural attitude in the world. As we listen to other
people, we are often uncertain how to separate information, guesses,
humor, prejudice, etc. Circumstances compel us to accept provisionally
quantities of statements just on other people’s say-so. A good test
of a statement for prejudice, however, is to compare it with the
scientific view.</p>

<p>Prejudice is most dangerous for society. Its more extreme
manifestations are aggressive war, intolerance (especially of strange
people and customs), violence, race hatred, etc. In the consuming
hatred that a prejudiced man has towards the object of his prejudice,
he is likely to destroy himself and destroy many more people besides.
In former days, the handy weapon was a sword or a pistol; not too much
damage could be done when one man ran amuck. But nowadays a single use
of a single weapon has slain 70,000 people (the atom bomb dropped at
Hiroshima), and so a great many people live anxious and afraid.</p>

<p>What is prejudice? How does it arise? How can it be cured, and thus
removed from obstructing reasonable control over robot machines and the
rest of today’s amazing scientific developments?</p>

<p>Prejudice is a disease of men’s minds. It is infectious. The cause and
development of the disease are about as follows: Deprive someone of
something he deeply needs, such as affection, food, or opportunity.
In this way hurt him, make him resentful, hostile; but prevent him
from expressing his resentments in a reasonable way, giving him
instead false outlets, such as other people to hurt, myths to believe,
hostile behavior patterns to imitate. He will then break out with
prejudices as if they were measles. The process of curing the disease
of prejudice is about as follows: Make friends with the patient; win
his trust. Encourage him to pour out his half-forgotten hates. Help him
to talk them over freely, by means of questions but not criticisms,
until finally the patient achieves insight, sees through his former
prejudices, and drops them.</p>

<p>In these days prejudice is a cardinal problem of society. It is
perhaps conservative to say that a chief present requirement for the
survival of human society—with the atom bomb, bacterial warfare,
guided missiles, etc., near at hand—is cure of prejudice and its
consequences, irrational and unrestrained hate.
<span class="pagenum" id="Page_207">[Pg 207]</span></p>

<h4>Narrow Point of View</h4>

<p>A narrow point of view regarding what is desirable or good is the third
obstacle to rational control over robot machines. What do we mean by
this?</p>

<p>Our point of view as a two-year-old is based on pure self-interest.
If we see a toy, we grab it. There is no prejudice about this; it is
entirely natural—for two-year-olds. As we grow older, our point of
view concerning what is good or desirable rapidly broadens: we think
of others and their advantage besides our own. For example, we may
become interested in a conservation program to conserve birds, or soil,
or forests, and our point of view expands, embraces these objectives,
which become part of our personality and loyalties.</p>

<p>Unfortunately, it seems to be true that the expanding point of view,
the expanding loyalties, of most people as they grow up are arrested
somewhere along the line of: self, family, neighborhood, community,
section of country, nation. An honorable exception is the scientists’
old and fine tradition of world-wide unity and loyalty in the search
for objective truth.</p>

<p>Now the problem of rational control over robot machines and other
parts of the new technology is no respecter of national boundaries. To
be solved it requires a world-wide point of view, a loyalty to human
society and its best interests, a social point of view.</p>

<p>Almost all that you and I have and do and think is the result of a long
history of human society on this earth. All men on the earth today are
descendants of other men who lived 1000, 2000, 3000 ... years ago,
whether they were Romans or Chinese or Babylonians or Mayas or members
of any other race. To ride in a subway or an airplane, to talk on the
telephone, to speak a language, to calculate, to survive smallpox or
the black death, etc.—all these privileges are our inheritance from
countless thousands of other human beings, of many countries, and
nearly all of whom are now dead. During our lives we pass on to our own
children an inheritance in which our own contribution is remarkably
small. Since each person is the child of two others, the number of our
forefathers is huge, and we are all undoubtedly blood cousins. Because
<span class="pagenum" id="Page_208">[Pg 208]</span>
of this relationship, and because we owe to the rest of society
nearly all that we are, we have a social responsibility—we need to
hold a social point of view. Each of us needs to accept and welcome
a world-wide social responsibility, as a member of human society, as
a beneficiary and trustee of our human inheritance. Otherwise we are
drones, part of the hive without earning our keep. The social point of
view is equitable, it is inspiring, and it is probably required now in
order for human beings to survive. We need to let go of a narrow point
of view.</p>

<h3>CONCLUSION</h3>

<p>We have now outlined the problem of social control over robot machines,
supposing that human beings were reasonable. We have also discussed the
practical obstacles that obstruct reasonable control.</p>

<p>It is not easy to think of any yet organized group of people anywhere
that would have both the strength and the vision needed to solve this
problem through its own efforts. For example, a part of the United
Nations might have some of the vision needed, but it does not have the
power. Consequently, it is necessary and desirable for individuals
and groups everywhere to take upon themselves an added load of social
responsibility—just as they tend to do in time of war. People often
“want to do their share.” Through encouragement and education, the
basic attitude of a number of people can contain more of “This is our
business; we have a responsibility for helping to solve this problem.”
We also need public responsibility; we need a public body responsible
for study, education, advice, and some measure of control. It might
be something like an Atomic Energy Commission, Bacterial Defense
Commission, Mental Health Commission, and Robot Machine Commission, all
rolled into one.</p>

<p>When, at last, there is an effective guarantee of the two elements
physical safety and adequate employment, then at last we shall all
be free from the threat of the robot machine. We can then welcome
the robot machine as our deliverer from the long hard chores of many
centuries.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_209">[Pg 209]</span></p>
<h2 class="nobreak" id="SUPPL_1">Supplement 1<br />
<span class="h_subtitle">WORDS AND IDEAS</span></h2>
</div>

<p>The purpose of this book is to explain machines that think, without
using technical words any more than necessary. This supplement is a
digression. Its purposes are to consider how to explain in this way and
to discuss the attempt made in this book to achieve simple explanation.</p>

<h3>WORDS AS INSTRUMENTS<br /> FOR EXPLAINING</h3>

<p>Words are the chief instruments we use for explaining. Of course, many
other devices—pictures, numbers, charts, models, etc.—are also used;
but words are the prime tools. We do most of our explaining with them.</p>

<p>Words, however, are not very good instruments. Like a stone
arrow-head, a word is a clumsy weapon. In the first place, words
mean different things on different occasions. The word “line,” for
example, has more than fifty meanings listed in a big dictionary. How
do we handle the puzzle of many meanings? As we grow older we gather
experience and we develop a truly marvelous capacity to listen to a
sentence and then fit the words together into a pattern that makes
sense. Sometimes we notice the time lag while our brain hunts for the
meaning of a word we have heard but not grasped. Then suddenly we guess
the needed meaning, whereupon we grasp the meaning of the sentence as
a whole in much the same way as the parts of a puzzle click into place
when solved.</p>

<p>Another trouble with words is that often there is no good way to tell
someone what a word means. Of course, if the word denotes a physical
object, we can show several examples of the object and utter the word
each time. In fact, several good illustrations of a word denoting a
physical thing often tell most of its meaning. But the rest of its
meaning we often do not learn for years, if ever. For instance, two
people would more likely disagree than agree about what should be
<span class="pagenum" id="Page_210">[Pg 210]</span>
called a “rock” and what should be called a “stone,” if we showed them
two dozen examples.</p>

<p>In the case of words not denoting physical objects, like “and,” “heat,”
“responsibility,” we are worse off. We cannot show something and say,
“That is a ···.” The usual dictionary is of some help, but it has a
tendency to tell us what some word <i>A</i> means by using another
word <i>B</i>, and when we look up the other word <i>B</i> we find the
word <i>A</i> given as its meaning. Mainly, however, to determine the
meanings of words, we gather experience: we soak up words in our brains
and slowly establish their meanings. We seem to use an unconscious
reasoning process: we notice how words are used together in patterns,
and we conclude what they must mean. Clearly, then, words being clumsy
instruments, the more experience we have had with a word, the more
likely we are to be able to use it, work with it, and understand it.
Therefore explanation should be based chiefly on words with which we
have had the most experience. What words are these? They will be the
well-known words. A great many of them will be short.</p>

<h3>SET OF WORDS FOR EXPLAINING</h3>

<p>Now what is the set of all the words needed to explain simply a
technical subject like machines that think? For we shall need more
words than just the well-known and short ones. This question doubtless
has many answers; but the answer used in this book was based on the
following reasoning. In a book devoted to explanation, there will be
a group of words (1) that are supposed to be known already or to be
learned while reading, and (2) that are used as building blocks in
later explanation and definitions. Suppose that we call these words the
<i>words for explaining.</i> There are at least three groups of such
words:</p>

<div class="blockquot">
<p class="neg-indent"><i>Group 1.</i> Words not specially defined that
are so familiar that every reader will know all of them; for example,
“is,” “much,” “tell.”</p>

<p class="neg-indent"><i>Group 2.</i> Words not specially defined that
are familiar, but perhaps some reader may not know some of them; for
example, “alternative,” “continuous,” “indicator.”</p>

<p class="neg-indent"><i>Group 3.</i> Words that are not familiar,
that many readers are not expected to know, and that are specially
defined and explained in the body of the book; for example, “abacus,”
“trajectory,” “torque.”</p>
</div>

<p>In writing this book, it was not hard to keep track of the words in the
third group. These words are now listed in the index, together with the
<span class="pagenum" id="Page_211">[Pg 211]</span>
page where they are defined or explained. (The index, of course,
also lists phrases that are specially defined.)</p>

<p>But what division should be made between the other two groups?
A practical, easy, and conservative way to separate most words between
the first and second groups seemed to be on the basis of number of
syllables. All words of one syllable—if not specially defined—were put
in Group 1. Also, if a word became two syllables only because of the
addition of one of the endings “-es,” “-ed,” “-ing,” it was kept in
Group 1, for these endings probably do not make a word any harder to
understand. In addition, there were put into Group 1:</p>

<ul class="index no-wrap">
<li class="isub2">1. Numbers; for example, “186,000”; “<big>³/₁₀</big>”.</li>
<li class="isub2">2. Places: “Philadelphia”; “Massachusetts”.</li>
<li class="isub2">3. Nations, organizations, people, etc.: “Swedish”; “Bell”.</li>
<li class="isub2">4. Years and dates: “February”; “1946”.</li>
<li class="isub2">5. Names of current books or articles and their authors.</li>
</ul>

<p class="no-indent">Of course, not all these words would be familiar
to every reader (for example, “Maya”), but in the way they occur, they
are usually not puzzling, for we can tell from the context just about
what they must mean.</p>

<p>All remaining words for explaining—chiefly, words of two or more
syllables and not specially defined—were put in Group 2 and were
listed during the writing of this book. Many Group 2 words, of course,
would be entirely familiar to every reader; but the list had several
virtues. No hard words would suddenly be sprung like a trap. The
same word would be used for the same idea. Every word of two or more
syllables was continually checked: is it needed? can it be replaced by
a shorter word? It is perhaps remarkable that there were fewer than
1800 different words allowed to stay in this list. This fact should be
a comfort to a reader, as it was to the author.</p>

<p>Now there are more words in this book than <i>words for explaining</i>.
So we shall do well to recognize:</p>

<div class="blockquot">
<p class="neg-indent"><i>Group 4.</i> Words that do not need to be known or
learned and that are not used in later explanation and definitions.</p>
</div>

<p class="no-indent">These words occur in the book in such a way that
understanding them, though helpful, is not essential. One subdivision
of Group 4 are names that appear just once in the book, as a kind of
side remark, for example, “a chemical, called <i>acetylcholine</i>.”
Such a name will also appear in the index, but it is not a <i>word for
explaining</i>. Another subdivision of Group 4 are words occurring only
in quotations. For example, in the quotation from <i>Frankenstein</i>
<span class="pagenum" id="Page_212">[Pg 212]</span>
on page 198, a dozen words appear that occur nowhere else in the book,
including “daemon,” “dissoluble,” “maw,” “satiate.” Clearly we would
destroy the entire flavor of the quotation if we changed any of these
words in any way. But only the general drift of the quotation is needed
for understanding the book, and so these words are Group 4 words.</p>

<p>In this way the effort to achieve simple explanation in this book
proceeded. But even supposing that we could reach the best set of words
for explaining, there is more to be done. How do we go from simple
explanation to understanding?</p>

<h3>UNDERSTANDING IDEAS</h3>

<p><i>Understanding</i> an idea is basically a standard process. First, we
find the name of the idea, a word or phrase that identifies it. Then,
we collect true statements about the idea. Finally, we practice using
them. The more true statements we have gathered, and the more practice
we have had in applying them, the more we understand the idea.</p>

<p>For example, do you understand zero? Here are some true statements
about zero.</p>

<div class="blockquot">
<p class="neg-indent">1. Zero is a number.</p>

<p class="neg-indent">2. It is the number that counts none or
nothing.</p>

<p class="neg-indent">3. It is marked 0 in our usual numeral
writing.</p>

<p class="neg-indent">4. The ancient Romans, however, had no numeral
for it. Apparently, they did not think of zero as a number.</p>

<p class="neg-indent">5. 0 is what you get when you take away 17 from
17, or when you subtract any number from itself.</p>

<p class="neg-indent">6. If you add 0 to 23, you get 23; and if you add
0 to any number, you get that number unchanged.</p>

<p class="neg-indent">7. If you subtract 0 from 48, you get 48; and if
you subtract 0 from any number, you get that number unchanged.</p>

<p class="neg-indent">8. If you multiply 0 by 71, you get 0; and if you
multiply together 0 and any number, you get 0.</p>

<p class="neg-indent">9. Usually you are not allowed to divide by 0:
that is against the rules of arithmetic.</p>

<p class="neg-indent">10. But if you do, and if you divide 12 by 0, for
example—and there are times when this is not wrong—the result is called
<i>infinity</i> and is marked <big>∞</big>, a sign that is like an 8 on
its side.</p>
</div>

<p class="no-indent">This is not all the story of zero; it is one of
the most important of numbers. But, if you know these statements about
zero, and have had some practice in applying them, you have a good
<span class="pagenum" id="Page_213">[Pg 213]</span>
<i>understanding</i> of zero. Incidentally, a mechanical brain knows all
these statements about zero and a few more; they must be built into it.</p>

<p>For us to understand any idea, then, we pursue three aims:</p>

<ul class="index no-wrap">
<li class="isub2">1. We find out what it is called.</li>
<li class="isub2">2. We collect true statements about it.</li>
<li class="isub2">3. We apply those statements—we use them in situations.</li>
</ul>

<p class="no-indent">We can do this about any idea. Therefore, we can
understand any idea, and the degree of our understanding increases as
the number of true statements mastered increases.</p>

<p>Perhaps this seems to be a rash claim. Of course, it may take a good
deal of time to collect true statements about many ideas. In fact, a
scientist may spend thirty years of his life trying to find out from
experiment the truth or falsehood of one statement, though, when he has
succeeded, the fact can be swiftly told to others. Also, we all vary in
the speed, perseverance, skill, etc., with which we can collect true
statements and apply them. Besides, some of us have not been taught
well and have little faith in our ability to carry out this process:
this is the greatest obstacle of all. But, there is in reality no idea
in the field of existing science and knowledge which you or I cannot
understand. The road to understanding lies clear before us.</p>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_214">[Pg 214]</span></p>
<h2 class="nobreak" id="SUPPL_2">Supplement 2<br />
<span class="h_subtitle">MATHEMATICS</span></h2>
</div>

<p>In the course of our discussion of machines that think, we have had to
refer without much explanation to a number of mathematical ideas. The
purpose of this supplement is to explain a few of these ideas a little
more carefully than seemed easy to do in the text and, at the end of
the supplement, to put down briefly some additional notes for reference.</p>

<h3>DEVICES FOR MULTIPLICATION</h3>

<p>Suppose that we have to multiply 372 by 465. With the ordinary school
method, we write 465 under the 372 and proceed about as follows: 5
times 2 is 10, put down the 0 and carry the 1; 5 times 7 is 35, 35 and
1 is 36, put down the 6 and carry the 3; 5 times 3 is 15, 15 and 3 is
18, put down the 8 and carry the 1; ... The method is based mainly on a
well-learned subroutine of continually changing steps:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">1. Select a multiplicand digit.</li>
<li class="isub2">2. Select a multiplier digit.</li>
<li class="isub2">3. Refer to the multiplication table with these digits.</li>
<li class="isub2">4. Obtain the value of their product, called a <i>partial product</i>.</li>
<li class="isub2">5. Add the preceding carry.</li>
<li class="isub2">6. Set down the right-hand digit.</li>
<li class="isub2">7. Carry the left-hand digit.</li>
</ul>

<p class="no-indent">We can, however, simplify this subroutine for
a machine by delaying the carrying. We collect in one place all the
right-hand digits of partial products, collect in another place all the
left-hand digits, and delay all addition until the end.</p>

<p>For example, let us multiply 372 by 465 with this method:
<span class="pagenum" id="Page_215">[Pg 215]</span></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc">&nbsp;<span class="smcap">Right-Hand&nbsp;<br />Digits</span></th>
      <th class="tdc">&nbsp;<span class="smcap">Left-Hand&nbsp;<br />Digits</span></th>
      <th class="tdc"><span class="smcap">&nbsp;&nbsp;Usual Method<br />&nbsp;&nbsp;for Comparison</span></th>
   </tr>
  </thead>
  <tbody><tr>
      <td class="tdr_ws1">372</td>
      <td class="tdr_ws1">372</td>
      <td class="tdr">372</td>
   </tr><tr>
      <td class="tdr_ws1 u">× 465</td>
      <td class="tdr_ws1 u">× 465</td>
      <td class="tdr u">× 465</td>
   </tr><tr>
      <td class="tdr_ws1">550</td>
      <td class="tdr_ws1">131</td>
      <td class="tdr">1860</td>
   </tr><tr>
      <td class="tdr_ws1">822&#8199;</td>
      <td class="tdr_ws1">141&#8199;</td>
      <td class="tdr">2232&#8199;</td>
   </tr><tr>
      <td class="tdr_ws1 u">288&#8199;&#8199;</td>
      <td class="tdr_ws1 u">120&#8199;&#8199;</td>
      <td class="tdr u">1488&#8199;&#8199;</td>
   </tr><tr>
      <td class="tdr_ws1">37570</td>
      <td class="tdr_ws1">13541</td>
      <td class="tdr">172980</td>
   </tr><tr>
      <td class="tdc" colspan="3"><br /><b><span class="smcap">Final Addition</span></b></td>
   </tr><tr>
      <td class="tdc" colspan="3">37570</td>
   </tr><tr>
      <td class="tdc u" colspan="3">+ 13541&#8199;&#8199;&#8199;</td>
   </tr><tr>
      <td class="tdc" colspan="3">172980</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">37570 is called the <i>right-hand component</i>
of the product. It is convenient to fill in with 0 the space at the
end of 13541 and to call 135410 the <i>left-hand component</i> of the
product.</p>

<p>This process is called <i>multiplying by right- and left-hand
components</i>. It has the great advantage that no carrying is
necessary to complete any line of the original multiplications. Some
computing machines use this process. Built into the hardware of the
machine is a multiplication table up to 9 × 9. The machine, therefore,
can find automatically the right-hand digit and the left-hand digit of
any partial product. In a computing machine that uses this process,
all the left-hand digits are automatically added in one register, and
all the right-hand digits are added in another register. The only
carrying that is needed is the carrying as the right-hand digits are
accumulated and as the left-hand digits are accumulated. At the end of
the multiplication, one of the registers is automatically added into
the other, giving the product.</p>

<p>Another device used in computing machines for multiplying is to change
the multiplier into a set of digits 0 to 5 that are either positive or
negative. For example, suppose that we want to multiply 897 by 182. We
note that 182 equals 200 minus 20 plus 2, and so we can write it as</p>

<ul class="index fontsize_120">
<li class="isub2">2<span class="over">2</span>2.</li>
</ul>

<p>The minus over the 2 marks it as a <i>negative digit</i> 2. Then to
multiply we have:</p>

<ul class="index fontsize_110">
<li class="isub3">897</li>
<li class="isub3">2<span class="over">2</span>2</li>
<li class="isub2 over">&#8199;1794</li>
<li class="isub1">&#8199;-1794</li>
<li class="isub1">&#8199;1794</li>
<li class="isub1 over">&#8199;163254</li>
</ul>

<p class="no-indent">The middle 1794 is subtracted. This process is
usually called <i>short-cut multiplication</i>. Everybody discovers
this trick when he decides that multiplying by 99 is too much work,
that it is easier to multiply by 100 and subtract once.
<span class="pagenum" id="Page_216">[Pg 216]</span></p>

<h3>BINARY OR TWO NUMBERS</h3>

<p>We are well accustomed to decimal notation in which we use 10 decimal
digits 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 and write them in combinations to
designate decimal numbers. In <i>binary notation</i> we use two binary
digits 0, 1 and write them in combinations to designate <i>binary
numbers</i>. For example, the first 17 numbers, from 0 to 16 in the
decimal notation, correspond with the following numbers in binary notation:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Decimal</span>&nbsp;&nbsp;</th>
      <th class="tdc">&nbsp;<span class="smcap">Binary</span>&nbsp;</th>
      <th class="tdc">&nbsp;<span class="smcap">Decimal</span>&nbsp;</th>
      <th class="tdc">&nbsp;&nbsp;<span class="smcap">Binary</span></th>
   </tr>
  </thead>
  <tbody><tr>
      <td class="tdc">0</td>
      <td class="tdr_ws1">0</td>
      <td class="tdc">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdc">1</td>
      <td class="tdr_ws1">1</td>
      <td class="tdc">&#8199;9</td>
      <td class="tdc">1001</td>
   </tr><tr>
      <td class="tdc">2</td>
      <td class="tdr_ws1">10</td>
      <td class="tdc">10</td>
      <td class="tdc">1010</td>
   </tr><tr>
      <td class="tdc">3</td>
      <td class="tdr_ws1">11</td>
      <td class="tdc">11</td>
      <td class="tdc">1011</td>
   </tr><tr>
      <td class="tdc">4</td>
      <td class="tdr_ws1">100</td>
      <td class="tdc">12</td>
      <td class="tdc">1100</td>
   </tr><tr>
      <td class="tdc">5</td>
      <td class="tdr_ws1">101</td>
      <td class="tdc">13</td>
      <td class="tdc">1101</td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdr_ws1">110</td>
      <td class="tdc">14</td>
      <td class="tdc">1110</td>
   </tr><tr>
      <td class="tdc">7</td>
      <td class="tdr_ws1">111</td>
      <td class="tdc">15</td>
      <td class="tdc">1111</td>
   </tr><tr>
      <td class="tdc">8</td>
      <td class="tdr_ws1">1000</td>
      <td class="tdc">16</td>
      <td class="tdc">10000&#8199;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">In decimal notation, 101 means one times a
hundred, no tens, and one. In binary notation, 101 means one times
four, no twos, and one. The successive digits in a decimal number
from right to left count 1, 10, 100, 1000, 10000, ...—successive
<i>powers</i> of 10 (for this term, see the end of this supplement).
The successive digits in a binary number from right to left count 1, 2,
4, 8, 16, ...—powers of 2.</p>

<p>The decimal notation is convenient when equipment for computing
has ten positions, like the fingers of a man, or the positions of
a counter wheel. The binary notation is convenient when equipment
for computing has just two positions, like “yes” or “no,” or current
flowing or no current flowing.</p>

<p>Addition, subtraction, multiplication, and division can all be carried
out unusually simply in binary notation. The addition table is simple
and consists only of four entries.</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="4" summary=" " cellpadding="4" >
  <tbody><tr>
      <td class="tdc">&nbsp;+&nbsp;</td>
      <td class="tdc bb">0</td>
      <td class="tdc bb">&#8199;1</td>
   </tr><tr>
      <td class="tdc br">0</td>
      <td class="tdc">0</td>
      <td class="tdc">&#8199;1</td>
   </tr><tr>
      <td class="tdc br">1</td>
      <td class="tdc">1</td>
      <td class="tdc">10</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The multiplication table is also simple and
contains only four entries.
<span class="pagenum" id="Page_217">[Pg 217]</span></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="4" summary=" " cellpadding="4" >
  <tbody><tr>
      <td class="tdc">&nbsp;×&nbsp;</td>
      <td class="tdc bb">0</td>
      <td class="tdc bb">1</td>
   </tr><tr>
      <td class="tdc br">0</td>
      <td class="tdc">0</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc br">1</td>
      <td class="tdc">0</td>
      <td class="tdc">1</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Suppose that we add in binary notation 101 and 1001:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Binary<br /> Addition</span></th>
      <th class="tdc"><span class="ws2"><span class="smcap">Check</span></span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdr">101</td>
      <td class="tdr">5</td>
   </tr><tr>
      <td class="tdr u">+ 1001</td>
      <td class="tdr u">&nbsp;9</td>
   </tr><tr>
      <td class="tdr">1110</td>
      <td class="tdr">14</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">We proceed: 1 and 1 is 10; write down 0 and carry
1; 0 and 0 is 0, and 1 to carry is 1; and 1 and 0 is 1; and then we
just copy the last 1. To check this we can convert to decimal and see
that 101 is 5, 1001 is 9, and 1110 is 14, and we can verify that 5 and
9 is 14.</p>

<p>One of the easiest ways to subtract in binary notation is to add a
<i>ones complement</i> (that is, the analogue of the nines complement)
and use end-around-carry (for these two terms, see the end of this
supplement). A ones complement can be written down at sight by just
putting 1 for 0 and 0 for 1. For example, suppose that we subtract 101
from 1110:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Direct<br />Subtraction</span></th>
      <th class="tdc"><span class="ws2"><span class="smcap">Check</span></span></th>
      <th class="tdc">&nbsp;&nbsp;<span class="smcap">Subtraction by<br />Adding Ones<br />Complement</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdr">1110</td>
      <td class="tdr">14</td>
      <td class="tdl_ws1">&nbsp;&#8199;&#8199;1110</td>
   </tr><tr>
      <td class="tdr u">- 101</td>
      <td class="tdr u">-&nbsp;5</td>
      <td class="tdl_ws1 u">&nbsp;+ 1010</td>
   </tr><tr>
      <td class="tdr">1001</td>
      <td class="tdr">9</td>
      <td class="tdl_ws1">(1)1000</td>
   </tr><tr>
      <td class="tdr" rowspan="3">&nbsp;</td>
      <td class="tdr" rowspan="3">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;<big>↓</big></td>
   </tr><tr>
      <td class="tdl_ws1">&nbsp;<big>⎯→</big>&nbsp;1</td>
   </tr><tr>
      <td class="tdl_ws1 over">&#8199;&#8199;1001</td>
   </tr>
 </tbody>
</table>

<p>Multiplication in the binary notation is simple. It amounts to (1)
adding if the multiplier digit is 1 and not adding if the multiplier
digit is 0, and (2) moving over or shifting. For example, let us
multiply 111 by 101:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Binary<br />Multiplication</span></th>
      <th class="tdc"><span class="ws2"><span class="smcap">Check</span></span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdr">111</td>
      <td class="tdr">7</td>
   </tr><tr>
      <td class="tdr u">× 101</td>
      <td class="tdr">&nbsp;× 5</td>
   </tr><tr>
      <td class="tdr">111</td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr">111&#8199;&#8199;</td>
      <td class="tdr">&nbsp;</td>
   </tr><tr>
      <td class="tdr over">100011</td>
      <td class="tdr over">&nbsp;35</td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_218">[Pg 218]</span>
The digit 1 in the 6th (or <i>n</i>th) <i>binary</i> place from the
right in 100011 stands for 1 times 2 to the 5th (or <i>n</i>-1 th)
power, 2 × 2 × 2 × 2 × 2 = 32. The result 100011 is translated into 32
plus 2 plus 1, which equals 35 and verifies.</p>

<p>Division in the binary notation is also simple. It amounts to (1)
subtracting (yielding a quotient digit 1) or not subtracting (yielding
a quotient digit 0), and (2) shifting. We never need to try multiples
of the divisor to find the largest that can be subtracted yet leave a
positive remainder. For example, let us divide 1010 (10 in decimal)
into 10001110 (142 in decimal):</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub6">&#8199;1110 (14 in decimal)</li>
<li class="isub4">————</li>
<li class="isub2">1010)10001110</li>
<li class="isub5 u">1010</li>
<li class="isub5">&#8199;1111</li>
<li class="isub5 u">&#8199;1010</li>
<li class="isub6">1011</li>
<li class="isub6 u">1010</li>
<li class="isub7">10 (remainder, 2 in decimal)</li>
</ul>

<p>In decimal notation, digits to the right of the decimal point count
powers of ⅒. In binary notation, digits to the right of the <i>binary
point</i> count powers of <big>½: ½, ¼, ⅛, ¹/₁₆</big>.... For example, 0.1011
equals <big>½ + ⅛ + ¹/₁₆, or ¹¹/₁₆</big>.</p>

<p>If we were accustomed to using binary numbers, all our arithmetic
would be very simple. Furthermore, binary numbers are in many ways
much better for calculating machinery than any other numbers. The main
problem is converting numbers from decimal notation to binary. One
method depends on storing the powers of 2 in decimal notation. The rule
is: subtract successively smaller powers of 2; start with the largest
that can be subtracted, and count 1 for each power that goes and 0 for
each power that does not. For example, 86 in decimal becomes 1010110 in
binary:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <tbody><tr>
      <td class="tdr">86</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
   </tr><tr>
      <td class="tdr u">64</td>
      <td class="tdl_ws1">64 goes</td>
      <td class="tdl_ws1">1</td>
   </tr><tr>
      <td class="tdr">22</td>
      <td class="tdl_ws1">32 does not go</td>
      <td class="tdl_ws1">0</td>
   </tr><tr>
      <td class="tdr u">16</td>
      <td class="tdl_ws1">16 goes</td>
      <td class="tdl_ws1">1</td>
   </tr><tr>
      <td class="tdr">6</td>
      <td class="tdl_ws1">8 does not go</td>
      <td class="tdl_ws1">0</td>
   </tr><tr>
      <td class="tdr u">&nbsp;4</td>
      <td class="tdl_ws1">4 goes</td>
      <td class="tdl_ws1">1</td>
   </tr><tr>
      <td class="tdr">2</td>
      <td class="tdl_ws1">2 goes</td>
      <td class="tdl_ws1">1</td>
   </tr><tr>
      <td class="tdr u">&nbsp;2</td>
      <td class="tdl_ws1">1 does not go</td>
      <td class="tdl_ws1">0</td>
   </tr><tr>
      <td class="tdr">0</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent"><span class="pagenum" id="Page_219">[Pg 219]</span>
It is a little troublesome to remember long series of 1’s and 0’s; in
fact, to write any number in binary notation takes about 3⅓ times
as much space as decimal notation. For this reason we can separate
binary numbers into triples beginning at the right and label each
triple as follows:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Triple</span>&nbsp;&nbsp;</th>
      <th class="tdc">&nbsp;&nbsp;<span class="smcap">Label</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">000</td>
      <td class="tdc">0</td>
   </tr><tr>
      <td class="tdc">001</td>
      <td class="tdc">1</td>
   </tr><tr>
      <td class="tdc">010</td>
      <td class="tdc">2</td>
   </tr><tr>
      <td class="tdc">011</td>
      <td class="tdc">3</td>
   </tr><tr>
      <td class="tdc">100</td>
      <td class="tdc">4</td>
   </tr><tr>
      <td class="tdc">101</td>
      <td class="tdc">5</td>
   </tr><tr>
      <td class="tdc">110</td>
      <td class="tdc">6</td>
   </tr><tr>
      <td class="tdc">111</td>
      <td class="tdc">7</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">For example, 1010110 would become 1 010 110 or
126. This notation is often called <i>octal notation</i>, because it is
notation in the scale of eight.</p>

<h3>BIQUINARY OR <i>TWO-FIVE</i> NUMBERS</h3>

<p>Another kind of notation for numbers is <i>biquinary notation</i>, so
called because it uses both 2’s and 5’s. Essentially this notation is
very like Roman numerals, ancient style. By ancient style we mean, for
example, VIIII instead of IX. In the following table we show the first
two dozen numbers in decimal, biquinary, and ancient Roman notation:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc"><span class="smcap">Decimal</span></th>
      <th class="tdc">&nbsp;&nbsp;<span class="smcap">Biquinary</span>&nbsp;&nbsp;</th>
      <th class="tdc"><span class="smcap">Roman</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">&#8199;0</td>
      <td class="tdc">&#8199;&#8199;0</td>
      <td class="tdl_ws1">&nbsp;</td>
   </tr><tr>
      <td class="tdc">&#8199;1</td>
      <td class="tdc">&#8199;&#8199;1</td>
      <td class="tdl_ws1">I</td>
   </tr><tr>
      <td class="tdc">&#8199;2</td>
      <td class="tdc">&#8199;&#8199;2</td>
      <td class="tdl_ws1">II</td>
   </tr><tr>
      <td class="tdc">&#8199;3</td>
      <td class="tdc">&#8199;&#8199;3</td>
      <td class="tdl_ws1">III</td>
   </tr><tr>
      <td class="tdc">&#8199;4</td>
      <td class="tdc">&#8199;&#8199;4</td>
      <td class="tdl_ws1">IIII</td>
   </tr><tr>
      <td class="tdc">&#8199;5</td>
      <td class="tdc">&#8199;10</td>
      <td class="tdl_ws1">V</td>
   </tr><tr>
      <td class="tdc">&#8199;6</td>
      <td class="tdc">&#8199;11</td>
      <td class="tdl_ws1">VI</td>
   </tr><tr>
      <td class="tdc">&#8199;7</td>
      <td class="tdc">&#8199;12</td>
      <td class="tdl_ws1">VII</td>
   </tr><tr>
      <td class="tdc">&#8199;8</td>
      <td class="tdc">&#8199;13</td>
      <td class="tdl_ws1">VIII</td>
   </tr><tr>
      <td class="tdc">&#8199;9</td>
      <td class="tdc">&#8199;14</td>
      <td class="tdl_ws1">VIIII</td>
   </tr><tr>
      <td class="tdc">10</td>
      <td class="tdc">100</td>
      <td class="tdl_ws1">X</td>
   </tr><tr>
      <td class="tdc">11</td>
      <td class="tdc">101</td>
      <td class="tdl_ws1">XI</td>
   </tr><tr>
      <td class="tdc">12</td>
      <td class="tdc">102</td>
      <td class="tdl_ws1">XII</td>
   </tr><tr>
      <td class="tdc">13</td>
      <td class="tdc">103</td>
      <td class="tdl_ws1">XIII</td>
   </tr><tr>
      <td class="tdc">14</td>
      <td class="tdc">104</td>
      <td class="tdl_ws1">XIIII</td>
   </tr><tr>
      <td class="tdc">15</td>
      <td class="tdc">110</td>
      <td class="tdl_ws1">XV</td>
   </tr><tr>
      <td class="tdc">16</td>
      <td class="tdc">111</td>
      <td class="tdl_ws1">XVI</td>
   </tr><tr>
      <td class="tdc">17</td>
      <td class="tdc">112</td>
      <td class="tdl_ws1">XVII</td>
   </tr><tr>
      <td class="tdc">18</td>
      <td class="tdc">113</td>
      <td class="tdl_ws1">XVIII</td>
   </tr><tr>
      <td class="tdc">19</td>
      <td class="tdc">114</td>
      <td class="tdl_ws1">XVIIII</td>
   </tr><tr>
      <td class="tdc">20</td>
      <td class="tdc">200</td>
      <td class="tdl_ws1">XX</td>
   </tr><tr>
      <td class="tdc">21</td>
      <td class="tdc">201</td>
      <td class="tdl_ws1">XXI</td>
   </tr><tr>
      <td class="tdc">22</td>
      <td class="tdc">202</td>
      <td class="tdl_ws1">XXII</td>
   </tr><tr>
      <td class="tdc">23</td>
      <td class="tdc">203</td>
      <td class="tdl_ws1">XXIII</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The biquinary columns alternate in going from 0 to
4 and from 0 to 1. The digits from 0 to 4 are not changed. The digits
from 5 to 9 are changed into 10 to 14. We see that the <i>biquinary
digits</i> are 0 to 4 in odd columns and 0, 1 in even columns, counting
from the right.</p>

<p>This is the notation actually expressed by the <i>abacus</i>. The beads
of the abacus show by their positions groups of 2 and 5 (<a href="#FIG_1-S">see Fig. 1</a>).
<span class="pagenum" id="Page_220">[Pg 220]</span></p>

<div class="figcenter">
  <img id="FIG_1-S" src="images/i_220.jpg" alt="" width="600" height="460" />
  <p class="f120 space-below2"><span class="smcap">Fig. 1.</span> Abacus and notations.</p>
</div>

<h3>SOME OPERATIONS OF ALGEBRA</h3>

<p>One of the operations of algebra that is important for a mechanical
brain is <i>approximation</i>, the problem of getting close to the
right value of a number. Take, for example, finding <i>square root</i>
(see the end of this supplement). The ordinary process taught in school
is rather troublesome. We can set down another process, however, using
a desk calculator to do division, which gives us square root with great speed.</p>

<p>Suppose that we want to find the square root of a number <i>N</i>, and
suppose that we have <i>x</i>₀ as a guessed square root correct to one
figure. For example, <i>N</i> might be 67.2 and <i>x</i>₀ might be
8, chosen because 8 × 8 is 64, and 9 × 9 is 81, and it seems as if 8
should be near the square root of 67.2. Here is the process:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">1. Divide <i>x</i>₀ into <i>N</i>, and obtain <i>N</i> / <i>x</i>₀.</li>
<li class="isub2">2. Multiply <i>x</i>₀ + <i>N</i> / <i>x</i>₀ by 0.5 and call the result <i>x</i>₁.</li>
</ul>

<p class="no-indent">Now repeat:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">1. Divide <i>x</i>₁ into <i>N</i> and obtain <i>N</i> / <i>x</i>₁.</li>
<li class="isub2">2. Multiply <i>x</i>₁ + <i>N</i> / <i>x</i>₁ by 0.5 and call the result <i>x</i>₂.</li>
</ul>

<p class="no-indent">Every time this process is repeated, the new
<i>x</i> comes a great deal closer to the correct square root. In fact
it can be shown that, if <i>x</i>₀ is correct to one figure, then:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <thead><tr>
      <th class="tdc"><span class="smcap">&nbsp;Approximation&nbsp;</span></th>
      <th class="tdc"><span class="smcap">&nbsp;Is Correct To&nbsp;<br />··· Figures</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc"><i>x</i>₁</td>
      <td class="tdc">&#8199;2</td>
   </tr><tr>
      <td class="tdc"><i>x</i>₂</td>
      <td class="tdc">&#8199;4</td>
   </tr><tr>
      <td class="tdc"><i>x</i>₃</td>
      <td class="tdc">&#8199;8</td>
   </tr><tr>
      <td class="tdc"><i>x</i>₄</td>
      <td class="tdc">16</td>
   </tr>
 </tbody>
</table>

<p>Let us see how this actually works out with 67.2 and a 10-column desk
calculator.
<span class="pagenum" id="Page_221">[Pg 221]</span></p>

<div class="blockquot">
<p class="neg-indent">Round 1: 8 divided into 67.2 gives 8.4. One half
of 8 plus 8.4 is 8.2. This is <i>x</i>₁.</p>

<p class="neg-indent">Round 2: 8.2 divided into 67.2 gives 8.195122.
One half of 8.2 plus 8.195122 is 8.197561. This is <i>x</i>₂.</p>

<p class="neg-indent">Round 3: 8.197561 divided into 67.2 gives
8.197560225. One half of 8.197561 and 8.197560225 is 8.1975606125. This
is <i>x</i>₃.</p>

<p class="neg-indent">Checking <i>x</i>₃, we find that 8.1975606125
divided into 67.2 gives 8.1975606126 approximately.</p>
</div>

<p class="no-indent">In this case, then, <i>x</i>₃ is correct to more
than 10 figures. In other words, with a reasonable guess and two or
three divisions we can obtain all the accuracy we can ordinarily use.
This process is called <i>rapid approximation</i>, or <i>rapidly
convergent approximation</i>, since it <i>converges</i> (points or
comes together) very quickly to the number we are seeking.</p>

<p>Another important operation of algebra is <i>interpolation</i>, the
problem of putting values smoothly in between other values. For
example, suppose that we have the table:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</th>
      <th class="tdc">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc">5</td>
      <td class="tdc">26</td>
   </tr><tr>
      <td class="tdc">6</td>
      <td class="tdc">37</td>
   </tr><tr>
      <td class="tdc">7</td>
      <td class="tdc">50</td>
   </tr><tr>
      <td class="tdc">8</td>
      <td class="tdc">65</td>
   </tr><tr>
      <td class="tdc">9</td>
      <td class="tdc">82</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">Suppose that we want to find the value that
<i>y</i> (or <i>yₓ</i>) ought to have when <i>x</i> has the value
of 7.2. This is the problem of <i>interpolating y</i> so as to find
<i>y</i> at the value of 7.2, <i>y</i>₇ˌ₂.</p>

<p>One way of doing this is to discover the formula that expresses
<i>y</i> and then to put <i>x</i> into that formula. This is not always
easy. Another way is to take the difference between <i>y</i>₇ and
<i>y</i>₈, 15, and share the difference appropriately over the distance
7 to 7.2 and 7.2 to 8. We can, for example, take ²/₁₀ of 15 = 3, add
that to <i>y</i>₇ = 50, and obtain an estimated <i>y</i>₇ˌ₂ = 53. This
is called <i>linear interpolation</i>, since the difference 0.2 in
the value of <i>x</i> is used only to the first power. It is a good
practical way to carry out most interpolation quickly and approximately.</p>

<p>Actually here <i>y</i> = <i>x</i>² + 1, and so the true value of
<i>y</i>₇ˌ₂ is (7.2 × 7.2) + 1, or 52.84, which is rather close to
53. Types of interpolation procedures more accurate than linear
interpolation will come much nearer still to the true value.</p>

<h3>ALGEBRA OF LOGIC</h3>

<p>We turn now to the <i>algebra of logic</i>. The first half of <a href="#CHAPTER_9">Chapter 9</a>,
“Reasoning” (through the section “Logical-Truth Calculation by
<span class="pagenum" id="Page_222">[Pg 222]</span>
Algebra”), introduces this subject. There the terms <i>truth
values</i>, <i>truth tables</i>, <i>logical connectives</i>,
and <i>algebra of logic</i> are explained. The part of <a href="#CHAPTER_3">Chapter 3</a>,
“A Machine That Will Think,” that discusses the operations
<i>greater-than</i> and <i>selection</i>, also explains some of the
algebra of logic. It introduces, for example, the formula</p>

<p class="f120"><i>p</i> = <i>T</i>(<i>a</i> &gt; <i>b</i>) = 1, 0</p>

<p>This is a way of saying briefly that the truth value of the statement
“<i>a</i> is greater than <i>b</i>” equals <i>p</i>; <i>p</i> is 1 if
the statement is true and 0 if the statement is false. The truth value
1 corresponds with “yes.” The truth value 0 corresponds with “no.”</p>

<p>With mechanical brains we are especially interested in handling
mathematics and logic without any sharp dividing line between them.
For example, suppose that we have a register in which a ten-digit
number like 1,765,438,890 may be stored. We should be able to use
that register to store a number consisting of only 1’s and 0’s, like
1,100,100,010. Such a number may designate the answers to 10 successive
questions: yes, yes, no, no, yes, no, no, no, yes, no. Or it may
tell 10 successive binary digits. The register then is three times
as useful: it can store either decimal numbers or truth values or
binary digits. We need, of course, a way to obtain from the register
any desired digit. For this purpose we may have two instructions to
the machine: (1) read the left-hand end digit; (2) shift the number
around in a circle. The second instruction is the same as multiplying
by 10 and then putting the left-most digit at the right-hand end.
For example, suppose that we want the 3rd digit from the left in
1,100,100,010. The result of the first circular shift is 1,001,000,101;
the result of the second circular shift is 0,010,001,011; and reading
the left-most digit gives 0. A process like this has been called
<i>extraction</i> and is being built into the newest mechanical brains.</p>

<p>Using truth values, we can put down very neatly some truths of ordinary
algebra. For example:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">(the <i>absolute value</i> of <i>a</i>) =</li>
<li class="isub5"><i>a</i> × (the truth of <i>a</i> greater than or equal to 0)</li>
<li class="isub4">- <i>a</i> × (the truth of <i>a</i> less than 0)</li>
</ul>

<p class="f120">|<i>a</i>| = <i>a</i> · <i>T</i>(<i>a</i> ≥ 0) - <i>a</i> · <i>T</i>(<i>a</i> &lt; 0)</p>

<p class="no-indent">For another example:</p>

<ul class="index fontsize_110 no-wrap">
<li class="isub2">Either <i>a</i> is greater than <i>b</i>,</li>
<li class="isub4">or else <i>a</i> equals <i>b</i>,</li>
<li class="isub4">or else <i>a</i> is less than <i>b</i></li>
</ul>

<p class="f120 space-below2"><i>T</i>(<i>a</i> &gt; <i>b</i>) + <i>T</i>(<i>a</i> =
<i>b</i>) + <i>T</i>(<i>a</i> &lt; <i>b</i>) = 1</p>

<p class="no-indent"><span class="pagenum" id="Page_223">[Pg 223]</span>
Many common logical operations, like selecting and comparing, and
the behavior of many simple mechanisms, like a light or a lock, can
be expressed by truth values. <a href="#CHAPTER_4">Chapter 4</a>, on
punch-card mechanisms, contains a number of examples.</p>

<hr class="tb" />

<h4>pronoun, variable</h4>

<p>In ordinary language, a <i>pronoun</i>, like “he,” “she,” “it,” “the
former,” “the latter,” is a word that usually stands for a noun
previously referred to. A pronoun usually stands for the last preceding
noun that the grammar allows. In mathematics, a <i>variable</i>, like
“<i>a</i>,” “<i>b</i>,” “<i>x</i>,” “<i>m₁</i>,” “<i>m₂</i>” closely
resembles a pronoun in ordinary language. A variable is a symbol that
usually stands for a number previously referred to, and usually it
stands for the same number throughout a particular discussion.</p>

<h4>multiplicand, dividend, augend, etc.</h4>

<table class="fontsize_120 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc"><span class="smcap">In the<br />Equation</span></th>
      <th class="tdc"><span class="smcap">The Name<br />of</span> <i>a</i> <span class="smcap">is:</span></th>
      <th class="tdc"><span class="smcap">The Name<br />of</span> <i>b</i> <span class="smcap">is:</span></th>
      <th class="tdc"><span class="smcap">The Name<br />of</span> <i>c</i> <span class="smcap">is:</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdl"><i>a</i> + <i>b</i> = <i>c</i></td>
      <td class="tdl_ws1">augend</td>
      <td class="tdl_ws1">addend</td>
      <td class="tdl_ws1">sum</td>
   </tr><tr>
      <td class="tdl"><i>a</i> - <i>b</i> = <i>c</i></td>
      <td class="tdl_ws1">minuend</td>
      <td class="tdl_ws1">subtrahend</td>
      <td class="tdl_ws1">remainder</td>
   </tr><tr>
      <td class="tdl"><i>a</i> × <i>b</i> = <i>c</i></td>
      <td class="tdl_ws1">multiplicand</td>
      <td class="tdl_ws1">multiplier</td>
      <td class="tdl_ws1">product</td>
   </tr><tr>
      <td class="tdl"><i>a</i> ÷ <i>b</i> = <i>c</i></td>
      <td class="tdl_ws1">dividend</td>
      <td class="tdl_ws1">divisor</td>
      <td class="tdl_ws1">quotient</td>
   </tr>
 </tbody>
</table>

<p><i>Augend</i> and <i>addend</i> are names of registers in the Harvard
Mark II calculator (<a href="#CHAPTER_10">see Chapter 10</a>).</p>

<h4>subtraction by adding, nines complement</h4>

<p>Two digits that add to 9 (0 and 9, 1 and 8, 2 and 7, 3 and 6, 4 and
5) are called <i>nines complements</i> of each other. The <i>nines
complement</i> of a number <i>a</i> is the number <i>b</i> in which
each digit of <i>b</i> is the nines complement of the corresponding
digit of <i>a</i>; for example, the nines complement of 173 is
826. Ordinary subtraction is the same as addition as of the nines
complement, with a simple correction; for example, 562 less 173 (equal
to 389) is the same as 562 plus 826 (equal to 1388) less 1000 plus 1.</p>

<h4>end-around-carry</h4>

<p>The correction “less 1000 plus 1” of the foregoing example may be
thought of as carrying the 1 (in the result 1388) around from the
left-hand end to the right-hand end, where it is there added. So the 1
is called <i>end-around-carry</i>.
<span class="pagenum" id="Page_224">[Pg 224]</span></p>

<h4>tens complement</h4>

<p>Two digits that add to 10 are called <i>tens complements</i> of each
other. The <i>tens complement</i> of a number <i>a</i>, however, is
equal to the nines complement of the number plus 1. For example, the
tens complement of 173 is 827. When subtracting by adding a tens
complement, the left-most digit 1 in the result is dropped. For
example, 562 less 173 (equal to 389) is the same as 562 plus 827 (equal
to 1389) less 1000.</p>

<h4>power, square, cube, reciprocal, etc.</h4>

<p>A <i>power</i> of any number <i>a</i> is <i>a</i> multiplied by itself
some number of times. <i>a</i> × <i>a</i> × <i>a</i> ... × <i>a</i>
where <i>a</i> appears <i>b</i> times is written <i>a</i>ᵇ and is read
<i>a</i> to the <i>b</i>th power. <i>a</i>², a to the 2nd power, is
<i>a</i> × <i>a</i> and is called <i>a squared</i> or the <i>square</i>
of <i>a</i>. <i>a</i>³, <i>a</i> to the 3rd power, <i>a</i> × <i>a</i>
× <i>a</i>, is called <i>a cubed</i>, or the <i>cube</i> of <i>a</i>.
<i>a</i>⁰, <i>a</i> to the zero power, is equal to 1 for every
<i>a</i>. <i>a</i>¹, <i>a</i> to the power 1, is <i>a</i> itself. The
first power is often called <i>linear</i>. <i>a</i> to some negative
power is the same as 1 divided by that power; that is, <i>a</i>⁻ᵇ =
1/<i>a</i>ᵇ. <i>a</i>⁻¹, <i>a</i> to the power minus 1, is 1/<i>a</i>,
and is called the <i>reciprocal</i> of <i>a</i>. <i>a</i>¹ᐟ², <i>a</i>
to the one-half power, is a number <i>c</i> such that <i>c</i> ×
<i>c</i> = <i>a</i>, and is called the <i>square root</i> of <i>a</i>
and often denoted by √<i>a</i>.</p>

<h4>table, tabular value, argument, etc.</h4>

<p>An example of a <i>table</i> is:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="4" summary=" " cellpadding="4" >
  <tbody><tr>
      <td class="tdc">&nbsp;</td>
      <td class="tdc bb">0.025</td>
      <td class="tdc bb">0.03</td>
   </tr><tr>
      <td class="tdc br">1</td>
      <td class="tdc">1.02500</td>
      <td class="tdc">1.03000</td>
   </tr><tr>
      <td class="tdc br">2</td>
      <td class="tdc">1.05063</td>
      <td class="tdc">1.06090</td>
   </tr><tr>
      <td class="tdc br">3</td>
      <td class="tdc">1.07689</td>
      <td class="tdc">1.09273</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The numbers in the body of the table, called
<i>tabular values</i>, depend on or are determined by the numbers along
the edge of the table, called <i>arguments</i>. In this example, if 1,
2, 3 are choices of a number <i>n</i>, and if 0.025, 0.03 are choices
of a number <i>i</i>, then each tabular value <i>y</i> is equal to 1
plus <i>i</i> raised to the <i>n</i>th power. <i>n</i> and <i>i</i>
are also called <i>independent variables</i>, and <i>y</i> is called
the <i>dependent variable</i>. The table expresses a <i>function</i>
or <i>formula</i> or <i>rule</i>. The rule could be stated as: add
<i>i</i> to 1; raise the result to the <i>n</i>th power.</p>

<h4>constant</h4>

<p>A number is said to be a <i>constant</i> if it has the same value under
all conditions. For example, in the formula:</p>

<p class="f120">(area of a circle) = π × (radius)²,<br />
π is a constant, equal to 3.14159 ...,</p>

<p class="no-indent"> applying equally well to all circles.
<span class="pagenum" id="Page_225">[Pg 225]</span></p>

<h4>infinity</h4>

<p>Mathematics recognizes several kinds of infinity. One of them occurs
when numbers become very large. For example, the quotient of 12 divided
by a number <i>x</i>, as <i>x</i> becomes closer and closer to 0,
becomes indefinitely large, and the limit is called <i>infinity</i> and
is denoted <span class="fontsize_150">∞</span>.</p>

<h4>equation, simultaneous, linear</h4>

<p>An example of two linear simultaneous <i>equations</i> is:</p>

<p class="f120">7<i>x</i> + 8<i>t</i> = 22</p>

<p class="f120">3<i>x</i> + 5<i>t</i> = 11</p>

<p class="no-indent"><i>x</i> and <i>t</i> are called
<i>unknowns</i>—that is, unknown variables—because the objective of
solving the equations is to find them. These equations are called
<i>simultaneous</i> because they are to be solved together, at the
same time, for values of <i>x</i> and <i>t</i> which will fit in
both equations. The equations are called <i>linear</i> because the
only powers of the unknowns that appear are the first power. Values
that solve equations are said to <i>satisfy</i> them. It is easy to
solve these two equations and find that <i>x</i> = 2 and <i>t</i>
= 1 is their solution. But it is a long process to solve 10 linear
simultaneous equations in 10 unknowns, and it is almost impossible
(without using a mechanical brain) to solve 100 linear simultaneous
equations in 100 unknowns.</p>

<h4>derivative, integral,<br />differential equation, etc.</h4>

<p>See the sections in <a href="#CHAPTER_5">Chapter 5</a> entitled “Differential
Equations,” “Physical Problems,” and “Solving Physical Problems.” There these
ideas and, to some extent, also the following ideas were explained:
formula, equation, function, differential function, instantaneous rate
of change, interval, inverse, integrating. See also a textbook on
calculus. If <i>y</i> is a function of <i>x</i>, then a mathematical
symbol for the derivative of <i>y</i> with respect to <i>x</i> is
<i>Dₓ y</i>, and a symbol for the integral of <i>y</i> with respect to
<i>x</i>, is ∫<i>y dx</i>. An integral with given initial conditions
(<a href="#Page_83">see p. 83</a>) is a <i>definite integral</i>.</p>

<h4>exponential</h4>

<p>A famous mathematical function is the <i>exponential</i>. It equals
the constant <i>e</i> raised to the <i>x</i> power, <i>eˣ</i>, where
<i>e</i> equals 2.71828.... The exponential lies between the powers of
2 and the powers of 3. It can be computed from:</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr" rowspan="2"><i>eˣ</i> = 1 +&nbsp;</td>
      <td class="tdc"><i>x</i>²</td>
      <td class="tdr" rowspan="2">&nbsp;+&nbsp;</td>
      <td class="tdc"><i>x</i>³</td>
      <td class="tdr" rowspan="2">&nbsp;+&nbsp;. . .</td>
   </tr><tr>
      <td class="tdc bt">1 · 2</td>
      <td class="tdc bt">1 · 2 · 3</td>
   </tr>
 </tbody>
</table>

<p><span class="pagenum" id="Page_226">[Pg 226]</span>
It is a solution of the differential equation <big><i>Dₓy</i> = <i>y</i></big>.
See also a textbook on calculus. The <i>exponential to the base 10</i>
is <big>10ˣ</big>.</p>

<h4>logarithm</h4>

<p>Another important mathematical function is the <i>logarithm</i>. It is
written <big>log <i>x</i></big> or <big>logₑ <i>x</i></big> and can be
computed from the two equations:</p>

<p class="f120">log <i>uv</i> = log <i>u</i> + log <i>v</i></p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr" rowspan="2">log(1 + <i>x</i>) = <i>x</i> -&nbsp;</td>
      <td class="tdc"><i>x</i>²</td>
      <td class="tdr" rowspan="2">&nbsp;+&nbsp;</td>
      <td class="tdc"><i>x</i>³</td>
      <td class="tdr" rowspan="2">&nbsp;-&nbsp;. . .&emsp;<i>x</i>² &lt; 1</td>
   </tr><tr>
      <td class="tdc bt">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
      <td class="tdc bt">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">It is a solution of the differential equation
<big><i>Dₓy</i> = 1/<i>y</i></big>. If <i>y</i> is the logarithm of <i>x</i>,
then <i>x</i> is the <i>antilogarithm</i> of <i>y</i>. The <i>logarithm to
the base 10</i> of <i>x</i>, log₁₀ <i>x</i>, equals the <i>logarithm to
the base e</i> of <i>x</i>, logₑ <i>x</i>, divided by logₑ 10. See also
textbooks on algebra and calculus.</p>

<h4>sine, cosine, tangent, antitangent</h4>

<p>These also are important mathematical functions. The <i>sine</i>
and <i>cosine</i> are solutions of the differential equation
<big><i>Dₓ</i>(<i>Dₓy</i>) =-<i>y</i></big> and are written as sin <i>x</i>
and cos <i>x</i>. They can be computed from</p>

<table class="fontsize_120 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr" rowspan="2">sin <i>x</i> = <i>x</i> -&nbsp;</td>
      <td class="tdc"><i>x</i>³</td>
      <td class="tdr" rowspan="2">&nbsp;+&nbsp;</td>
      <td class="tdc"><i>x</i>⁵</td>
      <td class="tdr" rowspan="2">&nbsp;-&nbsp;. . .</td>
   </tr><tr>
      <td class="tdc bt">1 · 2· 3</td>
      <td class="tdc bt">1 · 2 · 3· 4· 5</td>
   </tr><tr>
      <td class="tdc" colspan="5">&nbsp;</td>
   </tr><tr>
      <td class="tdr" rowspan="2">cos <i>x</i> = 1 -&nbsp;</td>
      <td class="tdc"><i>x</i>²</td>
      <td class="tdr" rowspan="2">&nbsp;+&nbsp;</td>
      <td class="tdc"><i>x</i>₄</td>
      <td class="tdr" rowspan="2">&nbsp;-&nbsp;. . .</td>
   </tr><tr>
      <td class="tdc bt">1 · 2</td>
      <td class="tdc bt">1 · 2 · 3· 4</td>
   </tr>
 </tbody>
</table>

<p class="no-indent">The <i>tangent</i> of <i>x</i> is simply sine of
<i>x</i> divided by cosine of <i>x</i>. If <i>y</i> is the tangent of
<i>x</i>, then <i>x</i> is the <i>antitangent</i> of <i>y</i>. See also
references on trigonometry and on calculus. <i>Trigonometric</i> tables
include sine, cosine, tangent, and related functions.</p>

<h4>Bessel functions</h4>

<p>These are mathematical functions that were named after Friedrich W.
Bessel, a Prussian astronomer who lived from 1784 to 1846. Bessel
functions are found as some of the solutions of the differential
equation</p>

<p class="f120 no-wrap"><i>x</i>² <i>Dₓ</i>(<i>Dₓy</i>) + x <i>Dₓy</i> + (<i>x</i>² - <i>n</i>²)<i>y</i> = O</p>

<p class="no-indent">This equation arises in a number of physical
problems in the fields of electricity, sound, heat flow, air flow, etc.
<span class="pagenum" id="Page_227">[Pg 227]</span></p>

<h4>matrix</h4>

<p>A <i>matrix</i> is a table (or <i>array</i>) of numbers in rows and
columns, for which addition, multiplication, etc., with similar tables
is specially defined. For example, the matrix</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr_ws1 bl">&nbsp;1</td>
      <td class="tdl_ws1 br">2&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr_ws1 bl">&nbsp;</td>
      <td class="tdl_ws1 br">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr_ws1 bl">&nbsp;3</td>
      <td class="tdl_ws1 br">4&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="f120">plus the matrix</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr_ws1 bl">&nbsp;5</td>
      <td class="tdl_ws1 br">&#8199;20&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr_ws1 bl">&nbsp;</td>
      <td class="tdl_ws1 br">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr_ws1 bl">&nbsp;60</td>
      <td class="tdl_ws1 br">100&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="f120">equals the matrix</p>

<table class="fontsize_150 no-wrap" border="0" cellspacing="0" summary=" " cellpadding="0" >
  <tbody><tr>
      <td class="tdr_ws1 bl">&nbsp;6</td>
      <td class="tdl_ws1 br">&#8199;22&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr_ws1 bl">&nbsp;</td>
      <td class="tdl_ws1 br">&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr><tr>
      <td class="tdr_ws1 bl">&nbsp;63</td>
      <td class="tdl_ws1 br">104&nbsp;</td>
      <td class="tdc">&nbsp;</td>
   </tr>
 </tbody>
</table>

<p class="f120">(Can you guess the rule defining addition?)</p>

<p class="no-indent">Calculations using matrices are useful in physics, engineering,
psychology, statistics, etc. To add a <i>square matrix</i> of 100 terms
in an array of 10 columns and 10 rows to another such matrix, 100
ordinary additions of numbers are needed. To multiply one such matrix
by another, 1000 ordinary multiplications and 900 ordinary additions
are needed. See references on matrix algebra and matrix calculus.</p>

<h4>differences, smoothness, checking</h4>

<p>On <a href="#Page_221">p. 221</a>, a sequence of values of <i>y</i>
is shown: 26, 37, 50, 65, 82. Suppose, however, the second value of
<i>y</i> was reported as 47 instead of 37. Then the <i>differences</i>
of <i>y</i> as we pass down the sequence would not be 11, 13, 15, 17
(which is certainly regular or <i>smooth</i>) but 21, 3, 15, 17 (which
is certainly not smooth). The second set of differences would strongly
suggest a mistake in the reporting of <i>y</i>. The <i>smoothness</i>
of differences is often a useful check on a sequence of reported
values.</p> <hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_228">[Pg 228]</span></p>
<h2 class="nobreak" id="SUPPL_3">Supplement 3<br />
<span class="h_subtitle">REFERENCES</span></h2>
</div>

<p>A book like the present one can cover only a part of the subject of
machines that think. To obtain more information about these machines
and other topics to which they are related there are many references
that may be consulted. There are still few books directly on the
subject of machines that think, but there are many articles and papers,
most of them rather specialized.</p>

<p>The purpose of this supplement is to give a number of these references
and to provide a brief, general introduction to some of them. The
references are subdivided into groups, each dealing with a branch of
the subject. The references in each group are in alphabetical order
by name of author (with “anonymous” last), and under each author they
are in chronological order by publication date. Some publications,
especially a forum or symposium, are listed more than once, according
as the topic discussed falls in different groups. In this supplement,
the sign three dots ( ...) next to the page numbers for an article
indicates that the article is continued on later, nonconsecutive pages.</p>

<p>It seemed undesirable to try to make the group of references dealing
with a subject absolutely complete, so long as enough were given to
provide a good introduction to the subject. It proved impractical
to try to make the citation of every single reference technically
complete, so long as enough citation was given so that the reference
could certainly be found. Furthermore, in a list of more than 250
references, errors are almost certain to occur. If any reader should
send me additions or corrections, I shall be more than grateful.
<span class="pagenum" id="Page_229">[Pg 229]</span></p>

<h3>THE HUMAN BRAIN</h3>

<p>No one yet knows specifically how particular ideas are thought about
in the human brain. The references listed in this section, however,
contain some information about such topics as:</p>

<div class="blockquot">
<p class="neg-indent">The structural differences, development, and
evolution of the brains of animals, apes, primitive man, and modern
man.</p>

<p class="neg-indent">The effect on the brain of blood composition,
body temperature, supply of oxygen, and other biochemical factors.</p>

<p class="neg-indent">The structure and physiology of the brain, the
nervous system, and nerve impulses.</p>

<p class="neg-indent">The theory of learning, intelligence, and
memory.</p>
</div>
<hr class="tb" />

<div class="blockquot2">
<p class="neg-indent"><span class="smcap">Barcroft, Joseph</span>,
<i>The Brain and Its Environment</i>, New Haven: Yale University
Press, 1948, 117 pp.</p>

<p class="neg-indent"><span class="smcap">Beach, Frank A.</span>,
Payday for Primates, <i>Natural History</i>, vol. 56, no. 10, Dec.
1947, pp. 448-451.</p>

<p class="neg-indent"><span class="smcap">Beach, Frank A.</span>, Can
Animals Reason? <i>Natural History</i>, vol. 57, no. 3, Mar. 1948, pp.
112-116 ...</p>

<p class="neg-indent"><span class="smcap">Berry, R. J. A.</span>,
<i>Brain and Mind, or the Nervous System of Man</i>, New York:
The Macmillan Co., 1928, 608 pp.</p>

<p class="neg-indent"><span class="smcap">Boring, Edwin G.</span>, <i>A
History of Experimental Psychology</i>, New York: Century Co.,
1929, 699 pp.</p>

<p class="neg-indent"><span class="smcap">Franz, Shepherd I.</span>,
<i>The Evolution of an Idea; How the Brain Works</i>, Los Angeles:
University of California, 1929, 35 pp.</p>

<p class="neg-indent"><span class="smcap">Herrick, C. Judson</span>,
<i>The Thinking Machine</i>, Chicago: University of Chicago
Press, 1929, 374 pp.</p>

<p class="neg-indent"><span class="smcap">Herrick, C. Judson</span>,
<i>Brains of Rats and Men</i>, Chicago: University of Chicago
Press, 1930, 382 pp.</p>

<p class="neg-indent"><span class="smcap">Lashley, Karl S.</span>,
<i>Brain Mechanisms and Intelligence</i>, Chicago: University of
Chicago Press, 1929, 186 pp.</p>

<p class="neg-indent"><span class="smcap">Pieron, Henri</span>,
<i>Thought and the Brain</i>, London: Kegan, Paul, Trench, Trübner
&amp; Co., 1927, 262 pp. Also New York: Harcourt, Brace &amp; Co.</p>

<p class="neg-indent"><span class="smcap">Schrödinger, Erwin</span>,
<i>What is Life?</i>, New York: The Macmillan Co., 1945, 90 pp.</p>

<p class="neg-indent"><span class="smcap">Sherrington, Charles
S.</span>, <i>The Brain and Its Mechanism</i>, Cambridge,
England: The University Press, 1933, 35 pp.</p>

<p class="neg-indent"><span class="smcap">Tilney, Frederick</span>,
<i>The Brain from Ape to Man</i>, New York: P. B. Hoeber, Inc.,
1928, 2 vol., 1075 pp.</p>

<p class="neg-indent"><span class="smcap">Wiener, Norbert</span>,
<i>Cybernetics, or Control and Communication in the Animal and
the Machine</i>, New York: John Wiley &amp; Sons, 1948, 194 pp.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Ten Billion
Relays, <i>Time</i>, Feb. 14, 1949, p. 67.</p>
</div>

<hr class="chap" />
<p><span class="pagenum" id="Page_230">[Pg 230]</span></p>
<h3>MATHEMATICAL BIOPHYSICS</h3>

<p class="blockquot">There has recently been another approach to the
problem: How does a brain think? A group of men, many of them in and
near Chicago, have been saying: “We know the properties of nerves,
nerve impulses, and simple nerve networks. We know the activity of
the brain. What mathematical model of nerve networks is necessary
to account for the activity of the brain?” These men have used
mathematics, statistics, and mathematical logic in the effort to
attack this problem, and they support a <i>Bulletin of Mathematical
Biophysics</i>.</p>

<hr class="tb" />

<div class="blockquot2">
<p class="neg-indent"><span class="smcap">Householder, Alston
S.</span>, A Neural Mechanism for Discrimination, <i>Psychometrika</i>,
vol. 4, no. 1, Dec. 1939, pp. 45-58.</p>

<p class="neg-indent"><span class="smcap">Householder, Alston
S.</span>, and Herbert D. Landahl, <i>Mathematical Biophysics of the
Central Nervous System</i>, Bloomington, Ind.: Principia Press, 1945.</p>

<p class="neg-indent"><span class="smcap">Landahl, Herbert D.</span>,
Contributions to the Mathematical Biophysics of the Central Nervous
System, <i>Bulletin of Mathematical Biophysics</i>, vol. 1, no. 2,
June 1939, pp. 95-118.</p>

<p class="neg-indent"><span class="smcap">Landahl, Herbert
D.</span>, <span class="smcap">Warren S. McCulloch</span>, and
<span class="smcap">Walter Pitts</span>, A Statistical Consequence of
the Logical Calculus of Nervous Nets, <i>Bulletin of Mathematical
Biophysics</i>, vol. 5, no. 4, Dec. 1943, pp. 135-137.</p>

<p class="neg-indent"><span class="smcap">Landahl, Herbert D.</span>,
A Note on the Mathematical Biophysics of Central Excitation and
Inhibition, <i>Bulletin of Mathematical Biophysics</i>, vol. 7,
no. 4, Dec. 1945, pp. 219-221.</p>

<p class="neg-indent"><span class="smcap">Lettvin, Jerome Y.</span>,
and <span class="smcap">Walter Pitts</span>, A Mathematical Theory of
the Affective Psychoses, <i>Bulletin of Mathematical Biophysics</i>,
vol. 5, no. 4, Dec. 1943, pp. 139-148.</p>

<p class="neg-indent"><span class="smcap">McCulloch, Warren S.</span>,
and <span class="smcap">Walter Pitts</span>, A Logical Calculus of the
Ideas Immanent in Nervous Activity, <i>Bulletin of Mathematical
Biophysics</i>, vol. 5, no. 4, Dec. 1943, pp. 115-133.</p>

<p class="neg-indent"><span class="smcap">Rashevsky, N.</span>,
<i>Mathematical Biophysics</i>, Chicago: University of Chicago Press.
Revised edition, 1948, 669 pp.</p>

<p class="neg-indent"><span class="smcap">Rashevsky, N.</span>,
Mathematical Biophysics of Abstraction and Logical Thinking,
<i>Bulletin of Mathematical Biophysics</i>, vol. 7, no. 3,
Sept. 1945, pp. 133-148.</p>

<p class="neg-indent"><span class="smcap">Rashevsky, N.</span>,
Some Remarks on the Boolean Algebra of Nervous Nets in Mathematical
Biophysics, <i>Bulletin of Mathematical Biophysics</i>, vol. 7, no. 4,
Dec. 1945, pp. 203-211.</p>

<p class="neg-indent"><span class="smcap">Rashevsky, N.</span>, A
Suggestion for Another Statistical Interpretation of the Fundamental
Equations of the Mathematical Biophysics of the Central Nervous System,
<i>Bulletin of Mathematical Biophysics</i>, vol. 7, no. 4,
Dec. 1945, pp. 223-226.</p>

<p class="neg-indent"><span class="smcap">Rashevsky, N.</span>, The
Neural Mechanism of Logical Thinking, <i>Bulletin of Mathematical
Biophysics</i>, vol. 8, no. 1, Mar. 1946, pp. 29-40.</p>
</div>

<hr class="chap" />
<p><span class="pagenum" id="Page_231">[Pg 231]</span></p>
<h3>LANGUAGES: WORDS AND SYMBOLS<br />FOR THINKING</h3>

<p class="blockquot">Hardly any field of techniques for thinking is
more fascinating than language. The following list of references, of
course, is short; it is meant chiefly as an introduction pointing out
a number of different paths into the field of language and languages.
Such topics as the following are introduced by the references in this
list:</p>

<ul class="index no-wrap">
<li class="isub6">The origin of languages and alphabets.</li>
<li class="isub6">The languages of the world, and speech communities.</li>
<li class="isub6">The comparison of words and structure from language to language.</li>
<li class="isub6">The significance of grammar and syntax.</li>
<li class="isub6">The problem of clear meanings.</li>
<li class="isub6">Writing and speaking that is easy to understand.</li>
</ul>

<hr class="tb" />

<div class="blockquot2">
<p class="neg-indent"><span class="smcap">Bloomfield, Leonard</span>,
<i>Language</i>, New York: Henry Holt &amp; Co., 1933, 564 pp.</p>

<p class="neg-indent"><span class="smcap">Bodmer, Frederick</span>,
and <span class="smcap">Launcelot Hogben</span>, <i>The Loom of
Language</i>, New York: W. W. Norton &amp; Co., 1944, 692 pp.</p>

<p class="neg-indent"><span class="smcap">Flesch, Rudolf</span>,
<i>The Art of Plain Talk</i>, New York: Harper &amp; Brothers, 1946,
210 pp.</p>

<p class="neg-indent"><span class="smcap">Graff, Willem L.</span>,
<i>Language and Languages: An Introduction to Linguistics</i>,
New York: D. Appleton &amp; Co., 1932, 487 pp.</p>

<p class="neg-indent"><span class="smcap">Hayakawa, S. I.</span>,
<i>Language in Action</i>, New York: Harcourt, Brace &amp; Co., 1941,
345 pp.</p>

<p class="neg-indent"><span class="smcap">Jespersen, Otto</span>,
<i>The Philosophy of Grammar</i>, New York: Henry Holt &amp;
Co., 1929 (third printing), 359 pp.</p>

<p class="neg-indent space-above1"><span class="smcap">Jespersen, Otto</span>,
<i>Analytic Syntax</i>,</p>

<p class="neg-indent space-below1">In this book, by means of a
well-contrived system of letters and signs, the great linguistic
scholar Jespersen depicts all the important inter-relations of English
words and parts of words in connected speech.</p>

<p class="neg-indent"><span class="smcap">Ogden, C. K.</span>,
<i>The System of Basic English</i>, New York: Harcourt,
Brace &amp; Co., 1934, 320 pp.</p>

<p class="neg-indent"><span class="smcap">Schlauch, Margaret</span>,
<i>The Gift of Tongues</i>, New York: Modern Age Books, 1942,
342 pp.</p>

<p class="neg-indent"><span class="smcap">Walpole, Hugh R.</span>,
<i>Semantics: The Nature of Words and Their Meanings</i>,
New York: W. W. Norton &amp; Co., 1941, 264 pp.</p>
</div>

<p><span class="pagenum" id="Page_232">[Pg 232]</span></p>
<hr class="chap" />
<h3>LANGUAGES:<br />MACHINES FOR THINKING</h3>

<p class="blockquot">For many years, nearly all references about
machines as a language for thinking have been specialized and limited.
Colleges with scholars who write textbooks usually have not had a
variety of expensive and versatile computing machinery. As a result,
the main environment for stimulating possible authors has until
recently been missing. The list of references is accordingly brief.</p>

<hr class="tb" />

<div class="blockquot2">
<p class="neg-indent"><span class="smcap">Aiken, Howard H.</span>, and
others, <i>Proceedings of a Symposium on Large-Scale Digital
Calculating Machinery</i>, Cambridge, Mass.: Harvard University
Press, 1948, 302 pp.</p>

<p class="neg-indent"><span class="smcap">Comrie, John Leslie</span>,
The Application of Commercial Calculating Machines to Scientific
Computing, <i>Mathematical Tables and Other Aids to Computation</i>,
vol. 2, no. 16, Oct. 1946, pp. 149-159.</p>

<p class="neg-indent"><span class="smcap">Crew, E. W.</span>,
Calculating Machines, <i>The Engineer</i>, vol. 172,
Dec. 1941, pp. 438-441.</p>

<p class="neg-indent"><span class="smcap">Fry, Macon</span>,
<i>Designing Computing Mechanisms</i>, Cleveland, Ohio:
Penton Publishing Co., 1946, 48 pp. (Reprinted from <i>Machine
Design</i>, Aug. 1945 through Feb. 1946.)</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>,
<i>Calculating Machines: Recent and Prospective Developments and
Their Impact on Mathematical Physics</i>, Cambridge, England:
The University Press, 1947, 40 pp.</p>

<p class="neg-indent"><span class="smcap">Horsburgh, E. H.</span>,
<i>Modern Instruments and Methods of Calculation</i>,
London: G. Bell and Sons, Ltd., 1914, 343 pp.</p>

<p class="neg-indent"><span class="smcap">Lilley, S.</span>,
Mathematical Machines, <i>Nature</i>, vol. 149, Apr. 25, 1942,
pp. 462-465.</p>

<p class="neg-indent"><span class="smcap">Murray, Francis J.</span>,
<i>The Theory of Mathematical Machines</i>,
New York: King’s Crown Press, 1947, 116 pp.</p>

<p class="neg-indent">The author states that a mathematical machine
is a mechanism that provides information concerning the relationships
among a specified set of mathematical concepts.</p>

<p class="neg-indent"><span class="smcap">Turck, J. A. V.</span>,
<i>The Origin of Modern Calculating Machines</i>, Chicago:
Western Society of Engineers, 1921.</p>

<p class="neg-indent">Recently, however, some magazine and newspaper
publishers have seen news value in machines that think, and some good
general articles with appeal to a wide audience have appeared. For
the references to these articles, see the section of this supplement
entitled “Digital Machines—Miscellaneous.”</p>
</div>

<hr class="chap" />
<h3>PUNCH-CARD CALCULATING MACHINES</h3>

<p class="blockquot">There are a few general references on punch-card calculating machines:
<span class="pagenum" id="Page_233">[Pg 233]</span></p>

<hr class="tb" />

<div class="blockquot2">
<p class="neg-indent"><span class="smcap">Baehne, G. Walter</span>,
editor, and others, <i>Practical Applications of the Punched Card
Method in Colleges and Universities</i>, New York: Columbia
University Press, 1935, 442 pp.</p>

<p class="neg-indent">This is a collection of many contributions
from a number of authors, describing various applications, chiefly
educational.</p>

<p class="neg-indent"><span class="smcap">Eckert, W. J.</span>,
<i>Punched-Card Methods in Scientific Computation</i>, New
York: Columbia University, The Thomas J. Watson Astronomical Computing
Bureau, 1940, 136 pp.</p>

<p class="neg-indent">This is a scientific treatise, chiefly relating
to the computation of orbits in astronomy.</p>

<p class="neg-indent"><span class="smcap">Hartkemeier, Harry
Pelle</span>, <i>Principles of Punch-Card Machine Operation</i>
(Subtitle: <i>How to Operate Punch-Card Tabulating and
Alphabetic Accounting Machines</i>), New York: Thomas Y. Crowell Co.,
1942, 269 pp.</p>

<p class="neg-indent">This is based on the author’s experience in
teaching statistical analysis using IBM tabulators. The book does not
deal with the collator or multiplying punch.</p>

<p class="neg-indent"><span class="smcap">Hedley, K. J.</span>, <i>The
Development of the Punched-Card Method</i>, Actuarial Society of
Australasia, 1946, 20 pp.</p>

<p class="neg-indent"><span class="smcap">International Business
Machines Corporation</span>, <i>International Business Machines</i>
(form no. A-4036-6-45), New York: International Business Machines
Corporation, 1945, 65 pp.</p>

<p class="neg-indent">Pages 6 to 31 show pictures and brief
descriptions of about 20 punch-card machines, available in 1945.</p>

<p class="neg-indent"><span class="smcap">Schnackel, H. G.</span>,
and <span class="smcap">H. C. Lang</span>, <i>Accounting by Machine
Methods</i>, New York: Ronald Press Co., 1939, 53 pp.</p>

<p class="neg-indent"><span class="smcap">Wolf, Arthur W.</span>, and
<span class="smcap">Edmund C. Berkeley</span>, <i>Advanced Course in
Punched Card Operations</i>, Newark, N. J.: Prudential Insurance
Company of America, 1942, 98 pp.</p>

<p class="neg-indent">A useful and authoritative description of IBM
punch-card calculating machinery is the following:</p>

<p class="neg-indent"><span class="smcap">International Business
Machines Corporation, Department of Education</span>, <i>Machine
Methods of Accounting</i>, Endicott, N. Y.: International
Business Machines Corporation, 1936-41, 385 pp.</p>

<p class="neg-indent">This is a collection of 28 separate booklets
telling the detailed operation of IBM punch-card machinery. They were
written for employees of IBM and users of IBM equipment. The following
list of the booklets is useful in locating them:</p>
</div>

<p><span class="pagenum" id="Page_234">[Pg 234]</span></p>

<table class="fontsize_90 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc bb"><span class="smcap">Title</span></th>
      <th class="tdc bb"><span class="smcap">Form No.</span></th>
      <th class="tdc bb"><span class="smcap">&nbsp;Date&nbsp;</span></th>
      <th class="tdc bb"><span class="smcap">No. of<br />Pages</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdl">Machine Methods of Accounting—Foreword</td>
      <td class="tdl_ws1">AM</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">6</td>
   </tr><tr>
      <td class="tdl">Development of IBM Corporation</td>
      <td class="tdl_ws1">AM-1-1</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">14</td>
   </tr><tr>
      <td class="tdl">Principles of the Electric Accounting Machine Method</td>
      <td class="tdl_ws1">AM-2</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">12</td>
   </tr><tr>
      <td class="tdl">The Tabulating Card</td>
      <td class="tdl_ws1">AM-3-1</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">20</td>
   </tr><tr>
      <td class="tdl">Design of Tabulating Cards</td>
      <td class="tdl_ws1">AM-4-1</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">16</td>
   </tr><tr>
      <td class="tdl">Preparation and Use of Codes</td>
      <td class="tdl_ws1">AM-5</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">28</td>
   </tr><tr>
      <td class="tdl">Organization and Supervision of the Tabulating Department</td>
      <td class="tdl_ws1">AM-6</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">16</td>
   </tr><tr>
      <td class="tdl">Selection and Training of Key Punch Operators</td>
      <td class="tdl_ws1">AM-7</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">12</td>
   </tr><tr>
      <td class="tdl">Accounting Control</td>
      <td class="tdl_ws1">AM-8</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">8</td>
   </tr><tr>
      <td class="tdl">Punches</td>
      <td class="tdl_ws1">AM-9</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">12</td>
   </tr><tr>
      <td class="tdl">Alphabetic Printing Punches</td>
      <td class="tdl_ws1">AM-10</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">7</td>
   </tr><tr>
      <td class="tdl">Facts to Know about Key Punches</td>
      <td class="tdl_ws1">AM-11</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">4</td>
   </tr><tr>
      <td class="tdl">Verifiers</td>
      <td class="tdl_ws1">AM-12</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">4</td>
   </tr><tr>
      <td class="tdl">Gang Punches</td>
      <td class="tdl_ws1">AM-13</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">8</td>
   </tr><tr>
      <td class="tdl">Card-Operated Sorting Machines</td>
      <td class="tdl_ws1">AM-14</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">12</td>
   </tr><tr>
      <td class="tdl">Facts to Know about Sorters</td>
      <td class="tdl_ws1">AM-14a</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">4</td>
   </tr><tr>
      <td class="tdl">Electric Tabulating Machines</td>
      <td class="tdl_ws1">AM-15</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">20</td>
   </tr><tr>
      <td class="tdl">Electric Accounting Machines (Type 285 and Type 297)</td>
      <td class="tdl_ws1">AM-16</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">16</td>
   </tr><tr>
      <td class="tdl">Alphabetic Direct Subtraction Accounting Machine</td>
      <td class="tdl_ws1">AM-17</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">28</td>
   </tr><tr>
      <td class="tdl">Numerical Interpreters</td>
      <td class="tdl_ws1">AM-18</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">8</td>
   </tr><tr>
      <td class="tdl">Electric Punched-Card Interpreter (Type 552)</td>
      <td class="tdl_ws1">AM-18a</td>
      <td class="tdc">1941</td>
      <td class="tdr_ws1">8</td>
   </tr><tr>
      <td class="tdl">Reproducing Punches (Type 512)</td>
      <td class="tdl_ws1">AM-19</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">16</td>
   </tr><tr>
      <td class="tdl">Automatic Summary Punches for Use with</td>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr><tr>
      <td class="tdl_ws1">the Numerical Accounting Machines (Type 285-297)</td>
      <td class="tdl_ws1">AM-20</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">16</td>
   </tr><tr>
      <td class="tdl">Automatic Summary Punches for Use with the</td>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr><tr>
      <td class="tdl_ws1">Alphabetic Accounting Machines (Type 405)</td>
      <td class="tdl_ws1">AM-20a</td>
      <td class="tdc">1940</td>
      <td class="tdr_ws1">16</td>
   </tr><tr>
      <td class="tdl">Multiplying Punches</td>
      <td class="tdl_ws1">AM-21</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">16</td>
   </tr><tr>
      <td class="tdl">Application of Machines to Accounting Functions</td>
      <td class="tdl_ws1">AM-22</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">24</td>
   </tr><tr>
      <td class="tdl">Other International Products</td>
      <td class="tdl_ws1">AM-23-2</td>
      <td class="tdc">1936</td>
      <td class="tdr_ws1">19</td>
   </tr><tr>
      <td class="tdl">The International Automatic Carriage (Type 921)</td>
      <td class="tdl_ws1">AM-24</td>
      <td class="tdc">1938</td>
      <td class="tdr_ws1">15</td>
   </tr>
 </tbody>
</table>

<p class="space-above2">The Department of Education of IBM has begun a
second series of booklets on the principles of operation of punch-card
calculating machinery:</p>

<p class="neg-indent"><span class="smcap">International Business
Machines Corporation, Department of Education</span>, <i>Principles
of Operation</i>, Endicott, N. Y.: International Business Machines
Corporation, 1942 and later (except for one published in 1939).</p>

<p>Many of the booklets in this series have good examples of machine
operation and applications. Also, for the first time, letters and
numbers have been used as coordinates to label the hubs on the
plugboards. This series includes the following:
<span class="pagenum" id="Page_235">[Pg 235]</span></p>

<table class="fontsize_90 no-wrap" border="0" cellspacing="2" summary=" " cellpadding="2" >
  <thead><tr>
      <th class="tdc bb"><span class="smcap">Title</span></th>
      <th class="tdc bb"><span class="smcap">Form No.</span></th>
      <th class="tdc bb"><span class="smcap">&nbsp;Date&nbsp;</span></th>
      <th class="tdc bb"><span class="smcap">No. of<br />Pages</span></th>
   </tr>
 </thead>
  <tbody><tr>
      <td class="tdc" colspan="4"><br /><b>CARD PUNCHES AND VERIFIERS</b></td>
   </tr><tr>
      <td class="tdl">Card-Punching and Verifying Machines</td>
      <td class="tdl_ws1">52-3176-0</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">21</td>
   </tr><tr>
      <td class="tdl">Alphabetical Verifier, Type 055</td>
      <td class="tdl_ws1">52-3295-1</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">4</td>
   </tr><tr>
      <td class="tdc" colspan="4"><br /><b>INTERPRETERS</b></td>
   </tr><tr>
      <td class="tdl">Card Interpreters, Type 550, 551, and 552</td>
      <td class="tdl_ws1">52-3178-0</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">14</td>
   </tr><tr>
      <td class="tdc" colspan="4"><br /><b>REPRODUCERS</b></td>
   </tr><tr>
      <td class="tdl">Automatic Reproducing Punch, Type 513</td>
      <td class="tdl_ws1">52-3180-0</td>
      <td class="tdc">1945</td>
      <td class="tdr_ws1">22</td>
   </tr><tr>
      <td class="tdl">End Printing Reproducing Punch, Type 519</td>
      <td class="tdl_ws1">52-3292-1</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">26</td>
   </tr><tr>
      <td class="tdl bt">Electric Document-Originating Machine,</td>
      <td class="tdl_ws1 bt">&nbsp;</td>
      <td class="tdc bt">June</td>
      <td class="tdr_ws1 bt">&nbsp;</td>
   </tr><tr>
      <td class="tdl_ws1">&emsp;Type 519</td>
      <td class="tdl_ws1">52-3292-2</td>
      <td class="tdc">1948</td>
      <td class="tdr_ws1">26</td>
   </tr><tr>
      <td class="tdc" colspan="4"><br /><b>COLLATORS</b></td>
   </tr><tr>
      <td class="tdl">Collator</td>
      <td class="tdl_ws1">AM-25</td>
      <td class="tdc">1943</td>
      <td class="tdr_ws1">31</td>
   </tr><tr>
      <td class="tdl">Collator Counting Device</td>
      <td class="tdl_ws1">C.R. 9178</td>
      <td class="tdc">1942</td>
      <td class="tdr_ws1">12</td>
   </tr><tr>
      <td class="tdc" colspan="4"><br /><b>CALCULATING PUNCHES</b></td>
   </tr><tr>
      <td class="tdl">Electric Multiplier, Type 601</td>
      <td class="tdl_ws1">52-3408-1</td>
      <td class="tdc">1947</td>
      <td class="tdr_ws1">47</td>
   </tr><tr>
      <td class="tdl">Calculating Punch, Type 602</td>
      <td class="tdl_ws1">52-3409-0</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">83</td>
   </tr><tr>
      <td class="tdl">Calculating Punch, Type 602</td>
      <td class="tdl_ws1">52-3409-5</td>
      <td class="tdc">1947</td>
      <td class="tdr_ws1">93</td>
   </tr><tr>
      <td class="tdl">Calculating Punch, Type 602-A (Preliminary Manual)</td>
      <td class="tdl_ws1">22-5489-0</td>
      <td class="tdc">1948</td>
      <td class="tdr_ws1">59</td>
   </tr><tr>
      <td class="tdl">Electronic Multiplier, Type 603</td>
      <td class="tdl_ws1">52-3561-0</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">5</td>
   </tr><tr>
      <td class="tdl">Electronic Calculating Punch, Type 604</td>
      <td class="tdl_ws1">22-5279-0</td>
      <td class="tdc">1948</td>
      <td class="tdr_ws1">51</td>
   </tr><tr>
      <td class="tdc" colspan="4"><br /><b>TABULATORS</b></td>
   </tr><tr>
      <td class="tdl">Accounting Machine, Type 402 and 403 (Preliminary Manual)</td>
      <td class="tdl_ws1">22-5654-0</td>
      <td class="tdc">1949</td>
      <td class="tdr_ws1">146</td>
   </tr><tr>
      <td class="tdl">Alphabetical Accounting Machine, Type 404</td>
      <td class="tdl_ws1">52-3395-1</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">96</td>
   </tr><tr>
      <td class="tdl">Typical Applications, Alphabetical Accounting Machine,</td>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr><tr>
      <td class="tdl_ws1">&emsp;Type 404, with Multiple Line Printing</td>
      <td class="tdl_ws1">22-3771-1</td>
      <td class="tdc">1947</td>
      <td class="tdr_ws1">47</td>
   </tr><tr>
      <td class="tdl bt">Alphabetical Accounting Machine, Type 405</td>
      <td class="tdl_ws1 bt">AM 17 (1),</td>
      <td class="tdc bt">1943</td>
      <td class="tdr_ws1 bt">90</td>
   </tr><tr>
      <td class="tdl">&nbsp;</td>
      <td class="tdl_ws1">Revised</td>
      <td class="tdc">1/1/43</td>
      <td class="tdr_ws1">&nbsp;</td>
   </tr><tr>
      <td class="tdl bt">Alphabetical Accounting Machine,</td>
      <td class="tdc bt">&nbsp;</td>
      <td class="tdc bt">Nov.</td>
      <td class="tdc bt">&nbsp;</td>
   </tr><tr>
      <td class="tdl_ws1">&emsp;Type 405</td>
      <td class="tdl_ws1">52-3179-2</td>
      <td class="tdc">1948</td>
      <td class="tdr_ws1">81
                        <span class="pagenum" id="Page_236">[Pg 236]</span></td>
   </tr><tr>
      <td class="tdc" colspan="4"><br /><b>AUTOMATIC PRINTING CARRIAGES</b></td>
   </tr><tr>
      <td class="tdl">Bill Feed, Type 920</td>
      <td class="tdl_ws1">52-3184-0</td>
      <td class="tdc">1945</td>
      <td class="tdr_ws1">21</td>
   </tr><tr>
      <td class="tdl">Form Feeding Device</td>
      <td class="tdl_ws1">52-3235-0</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">11</td>
   </tr><tr>
      <td class="tdl">Automatic Carriage, Type 921</td>
      <td class="tdl_ws1">52-3183-0</td>
      <td class="tdc">1945</td>
      <td class="tdr_ws1">36</td>
   </tr><tr>
      <td class="tdl">Tape-Controlled Carriage</td>
      <td class="tdc" colspan="3">&nbsp;</td>
   </tr><tr>
      <td class="tdl_ws1">&emsp;(Preliminary Manual, Revised)</td>
      <td class="tdl_ws1">22-5415-1</td>
      <td class="tdc">1948</td>
      <td class="tdr_ws1">27</td>
   </tr><tr>
      <td class="tdc" colspan="4"><br /><b>TEST SCORING MACHINE</b></td>
   </tr><tr>
      <td class="tdl bb">Test Scoring Machine</td>
      <td class="tdl_ws1 bb">94-2333-0</td>
      <td class="tdc bb">1939</td>
      <td class="tdr_ws1 bb">19</td>
   </tr><tr>
      <td class="tdl">&nbsp;</td>
      <td class="tdl_ws1">&nbsp;</td>
      <td class="tdc">May</td>
      <td class="tdr_ws1">&nbsp;</td>
   </tr><tr>
      <td class="tdl">Test Scoring Machine</td>
      <td class="tdl_ws1">32-9145-1</td>
      <td class="tdc">1946</td>
      <td class="tdr_ws1">20</td>
   </tr><tr>
      <td class="tdl bt">Published Tests Adapted for Use with</td>
      <td class="tdl_ws1 bt">&nbsp;</td>
      <td class="tdc bt">June</td>
      <td class="tdr_ws1 bt">&nbsp;</td>
   </tr><tr>
      <td class="tdl_ws1">the IBM Electric Test Scoring Machine</td>
      <td class="tdl_ws1">27-4286-9</td>
      <td class="tdc">1948</td>
      <td class="tdr_ws1">8</td>
   </tr>
 </tbody>
</table>

<div class="blockquot">
<p>In addition to the new types of punch-card machines referred to in the
above list, an elaborate punch-card calculating machine is described in
the following reference:</p>

<p class="neg-indent"><span class="smcap">Eckert, W. J.</span>, The IBM Pluggable Sequence
Relay Calculator, <i>Mathematical Tables and Other
Aids to Computation</i>, vol. 3, no. 23, July 1948,
pp. 149-161.</p>

<p class="space-above2">A description of punch-card machinery in rather
a light vein is contained in:</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Speaking of Pictures:
New Mechanical Monsters Ease <i>Life’s</i> Growing Pains, <i>Life</i>,
Sept. 15, 1947, pp. 15-16.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, <i>540</i>, Chicago:
Time-Life-Fortune Magazine, Subscription Fulfillment Office, 1948, 15 pp.</p>
</div>

<p>New types of punch-card machinery are continually coming into use.
Among them are: machines that take in punch cards and make punched
paper tape (such as teletype tape), and vice versa—useful for
transmitting punch-card information over wires; an electric typewriter
operated by punch cards—useful for preparing almanacs for sea and air
navigation, etc.; a calculator programmed by punch cards, consisting
of an assembly of a tabulator, an electronic calculating punch, and
an auxiliary storage unit, all cabled together—useful for some types
of long calculation; etc. For information about such machinery, the
manufacturers may be consulted.</p>

<h3>PUNCH-CARD CALCULATING MACHINERY:<br /> APPLICATIONS</h3>

<div class="blockquot">
<p>There are many articles in scientific journals on applications of
punch-card calculating machinery to technical problems. The fields of
<span class="pagenum" id="Page_237">[Pg 237]</span>
engineering, education, indexing, mathematics, surveying, statistics,
and others are all represented in the following list of sample references:</p>

<p class="neg-indent"><span class="smcap">Alt, Franz L.</span>,
Multiplication of Matrices, <i>Mathematical Tables and Other Aids
to Computation</i>, vol. 2, no. 13, Jan. 1946, pp. 12-13.</p>

<p class="neg-indent"><span class="smcap">Bailey, C. F.</span>, and
others, Punch Cards for Indexing Scientific Data, <i>Science</i>,
vol. 104, Aug. 23, 1946, p. 181.</p>

<p class="neg-indent"><span class="smcap">Bower, E. C.</span>, On
Subdividing Tables, <i>Lick Observatory Bulletin</i>, vol. 16,
no. 455, Nov. 1933, pp. 143-144.</p>

<p class="neg-indent"><span class="smcap">Bower, E. C.</span>,
Systematic Subdivision of Tables, <i>Lick Observatory Bulletin</i>,
vol. 17, no. 467, Apr. 1935, pp. 65-74.</p>

<p class="neg-indent"><span class="smcap">Clemence, G. M.</span>,
and <span class="smcap">Paul Herget</span>, Optimum-Interval
Punched-Card Tables, <i>Mathematical Tables and Other Aids to
Computation</i>, vol. 1, no. 6, Apr. 1944, pp. 173-176.</p>

<p class="neg-indent"><span class="smcap">Culley, Frank L.</span>,
Use of Accounting Machines for Mass-Transformation from Geographic
to Military-Grid Coordinates, Washington, D. C.: National Research
Council, <i>American Geophysical Union Transactions of 1942</i>,
part 2, pp. 190-197.</p>

<p class="neg-indent"><span class="smcap">Deming, W. Edwards</span>,
and <span class="smcap">Morris H. Hansen</span>, On Some Census
Aids to Sampling, <i>Journal of the American Statistical
Association</i>, vol. 38, no. 225, Sept. 1943, pp. 353-357.</p>

<p class="neg-indent"><span class="smcap">Dunlap, Jack W.</span>,
The Computation of Means, Standard Deviations, and Correlations
by the Tabulator When the Numbers Are Both Positive and Negative,
<i>Proceedings of the Educational Research Forum</i>,
International Business Machines Corporation, Aug. 1940, pp. 16-19.</p>

<p class="neg-indent"><span class="smcap">Dwyer, Paul S.</span>,
The Use of Tables in the Form of Prepunched Cards, <i>Proceedings of
the Educational Research Forum</i>, International Business
Machines Corporation, Aug. 1940, pp. 125-127.</p>

<p class="neg-indent"><span class="smcap">Dwyer, Paul S.</span>,
Summary of Problems in the Computation of Statistical Constants
with Tabulating and Sorting Machines, <i>Proceedings of the
Educational Research Forum</i>, International Business Machines
Corporation, Aug. 1940, pp. 20-28.</p>

<p class="neg-indent"><span class="smcap">Dwyer, Paul S.</span>,
and <span class="smcap">Alan D. Meacham</span>, The Preparation of
Correlation Tables on a Tabulator Equipped with Digit Selection,
<i>Journal of the American Statistical Association</i>, vol. 32,
1937, pp. 654-662.</p>

<p class="neg-indent"><span class="smcap">Dyer, H. S.</span>, Making
Test Score Data Effective in the Admission and Course Placement
of Harvard Freshmen, <i>Proceedings of the Research Forum</i>,
International Business Machines Corporation, 1946, pp. 55-62.</p>

<p class="neg-indent"><span class="smcap">Eckert, W. J.</span>,
and <span class="smcap">Ralph F. Haupt</span>, The Printing of
Mathematical Tables, <i>Mathematical Tables and Other Aids to
Computation</i>, vol. 2, no. 17, Jan. 1947, pp. 196-202.</p>

<p class="neg-indent"><span class="smcap">Feinstein, Lillian</span>,
and <span class="smcap">Martin Schwarzchild</span>, Automatic
Integration of Linear Second-Order Differential Equations by Means of
Punched-Card Machines, <i>Review of Scientific Instruments</i>,
vol. 12, no. 8, Aug. 1941, pp. 405-408.</p>

<p class="neg-indent"><span class="smcap">Hotelling, Harold</span>,
Some New Methods in Matrix Calculation, <i>The Annals of
Mathematical Statistics</i>, vol. 14, no. 1, Mar. 1943, pp. 1-34.

<span class="pagenum" id="Page_238">[Pg 238]</span></p>

<p class="neg-indent"><span class="smcap">International Business
Machines Corporation</span>, editor, and others, <i>Proceedings
of the Educational Research Forum</i>, Endicott, N. Y.:
International Business Machines Corporation, 1941.</p>

<p class="neg-indent"><span class="smcap">International Business
Machines Corporation</span>, editor, and others, <i>Proceedings of the
Research Forum</i>, Endicott, N. Y.: International Business
Machines Corporation, 1946, 94 pp.</p>

<p class="neg-indent"><span class="smcap">King, Gilbert W.</span>,
Punched-Card Tables of the Exponential Function, <i>Review of
Scientific Instruments</i>, vol. 15, no. 12, Dec. 1944, pp.
349-350.</p>

<p class="neg-indent"><span class="smcap">King, Gilbert W.</span>,
and <span class="smcap">George B. Thomas</span>, Preparation of
Punched-Card Tables of Logarithms, <i>Review of Scientific
Instruments</i>, vol. 15, no. 12, Dec. 1944, p. 350.</p>

<p class="neg-indent"><span class="smcap">Kormes, Mark</span>, A Note
on the Integration of Linear Second-Order Differential Equations by
Means of Punched Cards, <i>Review of Scientific Instruments</i>,
vol. 14, no. 4, Apr. 1943, p. 118.</p>

<p class="neg-indent"><span class="smcap">Kormes, Mark</span>,
Numerical Solution of the Boundary Value Problem for the Potential
Equation by Means of Punched Cards, <i>Review of Scientific
Instruments</i>, vol. 14, no. 8, Aug. 1943, pp. 248-250.</p>

<p class="neg-indent"><span class="smcap">Kormes, Mark</span>, and
<span class="smcap">Jennie P. Kormes</span>, Numerical Solution of
Initial Value Problems by Means of Punched-Card Machines, <i>Review
of Scientific Instruments</i>, vol. 16, no. 1, Jan. 1945, pp.
7-9.</p>

<p class="neg-indent"><span class="smcap">Kuder, G. Frederic</span>,
Use of the IBM Scoring Machine for Rapid Computation of Tables of
Intercorrelations, <i>Journal of Applied Psychology</i>, vol.
22, no. 6, Dec. 1938, pp. 587-596.</p>

<p class="neg-indent"><span class="smcap">Maxfield, D. K.</span>,
Library Punched Card Procedures, <i>Library Journal</i>, vol. 71, no.
12, June 15, 1946, pp. 902-905 ...</p>

<p class="neg-indent"><span class="smcap">McLaughlin, Kathleen</span>,
Adding Machines Nip AEF Epidemics, New York: <i>New York Times</i>,
Apr. 27, 1945.</p>

<p class="neg-indent"><span class="smcap">McPherson, John C.</span>,
On Mechanical Tabulation of Polynomials, <i>Annals of Mathematical
Statistics</i>, Sept. 1941, pp. 317-327.</p>

<p class="neg-indent"><span class="smcap">McPherson, John C.</span>,
Mathematical Operations with Punched Cards, <i>Journal of the
American Statistical Association</i>, vol. 37, June 1942, pp.
275-281.</p>

<p class="neg-indent"><span class="smcap">Milliman, Wendell A.</span>,
Mechanical Multiplication by the Use of Tabulating Machines,
<i>Transactions of the Actuarial Society of America</i>,
vol. 35, part 2, Oct. 1934, pp. 253-264; for discussion see
also vol. 36, part 1, May 1935, pp. 77-84.</p>

<p class="neg-indent"><span class="smcap">Royer, Elmer B.</span>, A
Machine Method for Computing the Biserial Correlation Coefficient in
Item Validation, <i>Psychometrika</i>, vol. 6, no. 1, Feb. 1941, pp. 55-59.</p>

<p class="neg-indent"><span class="smcap">Whitten, C. A.</span>,
Triangulation Adjustment by International Business Machines,
Washington, D. C.: National Research Council, <i>American
Geophysical Union Transactions of 1943</i>, part 1, p. 31.</p>

<p class="space-above2">The following bibliography may be obtained
on request to the Watson Scientific Computing Laboratory, Columbia
University, 612 West 116 Street, New York 27, N. Y.:
<span class="pagenum" id="Page_239">[Pg 239]</span></p>

<p class="neg-indent"><span class="smcap">Watson Scientific Computing
Laboratory</span>, <i>Bibliography: The Use of IBM Machines in
Scientific Research, Statistics, and Education</i>, New York:
International Business Machines Corporation (form no. 50-3813-0),
Sept. 1947, 25 pp.</p>

<p>The organization and equipment of this laboratory are described in:</p>

<p class="neg-indent"><span class="smcap">Eckert, W. J.</span>,
Facilities of the Watson Scientific Computing Laboratory,
<i>Proceedings of the Research Forum</i>, International Business
Machines Corporation, 1946, pp. 75-80.</p>
</div>

<h3>THE DIFFERENTIAL ANALYZER</h3>

<div class="blockquot">
<p>The basic scientific articles on the two differential analyzers at
Massachusetts Institute of Technology are:</p>

<p class="neg-indent"><span class="smcap">Bush, Vannevar</span>,
The Differential Analyzer: A New Machine for Solving Differential
Equations, <i>Journal of the Franklin Institute</i>, vol. 212,
no. 4, Oct. 1931, pp. 447-488.</p>

<p class="neg-indent"><span class="smcap">Bush, Vannevar</span>,
and <span class="smcap">Samuel H. Caldwell</span>, A New Type of
Differential Analyzer, <i>Journal of the Franklin Institute</i>, vol.
240, no. 4, Oct. 1945, pp. 255-326.</p>

<p>Some of the less technical articles about the second differential
analyzer at M.I.T. are:</p>

<p class="neg-indent"><span class="smcap">Caldwell, Samuel H.</span>,
Educated Machinery, <i>Technology Review</i>, vol. 48, no. 1, Nov.
1945, pp. 31-34.</p>

<p class="neg-indent"><span class="smcap">Genet, N.</span>, 100-Ton
Brain at M.I.T., <i>Scholastic</i>, vol. 48, Feb. 4, 1946, p. 36.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Mathematical Machine; New Electronic Differential Analyzer,
<i>Science News Letter</i>, vol. 48, Nov. 10, 1945, p. 291.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Robot
Einstein: Differential Analyzer at M.I.T., <i>Newsweek</i>, vol. 26,
Nov. 12, 1945, p. 93.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, M.I.T.’s
100-Ton Mathematical Brain is Now to Tackle Problems of Peace,
<i>Popular Science</i>, vol. 148, Jan. 1946, p. 81.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, The Great
Electro-Mechanical Brain; M.I.T.’s Differential Analyzer, <i>Life</i>,
vol. 20, Jan. 14, 1946, pp. 73-74 ...</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, All the
Answers at Your Fingertips; in the Laboratory of M.I.T., <i>Popular
Mechanics</i>, vol. 85, Mar. 1946, pp. 164-167 ...</p>

<p>A differential analyzer was built at the Moore School of Electrical
Engineering:</p>

<p class="neg-indent"><span class="smcap">Travis, Irven</span>,
Differential Analyzer Eliminates Brain Fag, <i>Machine Design</i>,
July 1935, pp. 15-18.</p>

<p>A differential analyzer was built at the General Electric Company,
Schenectady, N. Y. Instead of using a mechanical or electrical
amplifier of the motion of the little turning wheel riding on the disc,
<span class="pagenum" id="Page_240">[Pg 240]</span>
this machine follows the motion using polarized light. This machine is
described in:</p>

<p class="neg-indent"><span class="smcap">Berry, T. M.</span>,
Polarized Light Servo System, <i>Transactions of the American Institute
of Electrical Engineers</i>, vol. 63, Apr. 1944, pp. 195-197.</p>

<p class="neg-indent"><span class="smcap">Kuehni, H. P.</span>, and
<span class="smcap">H. A. Peterson</span>, A New Differential Analyzer,
<i>Transactions of the American Institute of Electrical
Engineers</i>, vol. 63, May 1944, pp. 221-227.</p>

<p>A differential analyzer has been put into use at the University of
California:</p>

<p class="neg-indent"><span class="smcap">Boelter, L. M. K.</span>, and
others, <i>The Differential Analyzer of the University of
California</i>, Los Angeles: University of California, 1947, 25 pp.</p>

<p>A differential analyzer was built at Manchester University, England.
It was built first from “Meccano” parts, at a total cost of about 20
pounds, and later refined for more exact work. Some articles dealing
with this differential analyzer are:</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>, The
Differential Analyzer, <i>Nature</i>, vol. 135, June 8, 1935, p. 940.</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>,
The Mechanical Integration of Differential Equations, <i>The
Mathematical Gazette</i>, vol. 22, 1938, pp. 342-364.</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>, and
<span class="smcap">A. Porter</span>, The Construction of a Model
Differential Analyser, <i>Memoirs and Proceedings of the Manchester
Literary and Philosophical Society</i>, vol. 79, July 1935, pp.
51-72.</p>

<p>Other small scale differential analyzers built in England are
covered in:</p>

<p class="neg-indent"><span class="smcap">Beard, R. E.</span>, The
Construction of a Small Scale Differential Analyser and Its Application
to the Calculation of Actuarial Functions, <i>Journal of the
Institute of Actuaries</i>, vol. 71, 1942, pp. 193-227.</p>

<p class="neg-indent"><span class="smcap">Massey, H. S. W.</span>,
<span class="smcap">J. Wylie</span>, and <span class="smcap">R.
A. Buckingham</span>, A Small Scale Differential Analyser: Its
Construction and Operation, <i>Proceedings of the Royal Irish
Academy</i>, vol. 45, 1938, pp. 1-21.</p>

<p>A differential analyzer constructed in Germany is briefly described
in the following:</p>

<p class="neg-indent"><span class="smcap">Sauer, R.</span>, and <span
class="smcap">H. Poesch</span>, Integrating Machine for Solving
Ordinary Differential Equations, <i>Engineers Digest</i> (American
Edition), vol. 1, May 1944, pp. 326-328.</p>

<p>From the historical point of view there are some interesting papers
on a machine for solving differential equations by Sir William Thomson
(Lord Kelvin), including one by his brother James Thomson. They are in
the <i>Proceedings of the Royal Society</i>, vol. 24, Feb. 1876, pp.
262-275. The method of integration by a machine is described, but the
<span class="pagenum" id="Page_241">[Pg 241]</span>
state of machine tools at the time was such that no accurate mechanism
was constructed. Another interesting paper foreshadowing the
differential analyzer is:</p>

<p class="neg-indent"><span class="smcap">Wainwright, Lawrence
L.</span>, <i>A Ballistic Engine</i>, Chicago: University of
Chicago, thesis for Master’s Degree, 1923, 28 pp.</p>

<p>Some of the applications and mathematical limitations of
differential analyzers are covered in:</p>

<p class="neg-indent"><span class="smcap">Bush, V.</span>, and
<span class="smcap">S. H. Caldwell</span>, Thomas-Fermi Equation Solution
by the Differential Analyzer, <i>Physical Review</i>, vol. 38, no. 10,
1931, pp. 1898-1902.</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>, A
Great Calculating Machine: the Bush Differential Analyser and Its
Applications in Science and Industry, <i>Proceedings of the
Royal Institution of Great Britain</i>, vol. 31, 1940, pp. 151-170.</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>,
and <span class="smcap">A. Porter</span>, The Application of the
Differential Analyser to Transients on a Distortionless Transmission
Line, <i>Journal of the Institute of Electrical Engineering</i>,
vol. 83, no. 503, Nov. 1938, pp. 648-656.</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>, and
<span class="smcap">J. R. Womersley</span>, A Method for the Numerical
or Mechanical Solution of Certain Types of Partial Differential
Equations, <i>Proceedings of the Royal Society of London</i>, series A,
vol. 161, 1937, pp. 353-366.</p>

<p class="neg-indent"><span class="smcap">Maginniss, F. J.</span>,
Differential Analyzer Applications, <i>General Electric Review</i>,
vol. 48, no. 5, May 1945, pp. 54-59.</p>

<p class="neg-indent"><span class="smcap">Shannon, Claude E.</span>,
Mathematical Theory of the Differential Analyzer, <i>Journal of
Mathematics and Physics</i>, Cambridge, Mass.: Massachusetts
Institute of Technology, vol. 20, no. 4, 1941, pp. 337-354.</p>
</div>

<h3>HARMONIC ANALYZERS AND SYNTHESIZERS</h3>

<div class="blockquot">
<p>Another branch of the analogue calculating machine is the harmonic
analyzer and synthesizer. These are machines that study wave motions
and related physical and mathematical functions. A brief list of
articles on this type of machine follows:</p>

<p class="neg-indent"><span class="smcap">Archer, R. M.</span>,
Projecting Apparatus for Compounding Harmonic Vibrations, <i>Journal
of Scientific Instruments</i>, vol. 14, 1937, pp. 408-410.</p>

<p class="neg-indent"><span class="smcap">Brown, S. L.</span>,
A Mechanical Harmonic Synthesizer-Analyzer, <i>Journal of the
Franklin Institute</i>, vol. 228, 1939, pp. 675-694.</p>

<p class="neg-indent"><span class="smcap">Brown, S. L.</span>, and
<span class="smcap">L. L. Wheeler</span>, A Mechanical Method for
Graphical Solution of Polynomials, <i>Journal of the Franklin
Institute</i>, vol. 231, 1941, pp. 223-243.</p>

<p class="neg-indent"><span class="smcap">Brown, S. L.</span>, and
<span class="smcap">L. L. Wheeler</span>, Use of the Mechanical
Multiharmonograph for Graphing Types of Functions and for Solution
of Pairs of Non-Linear Simultaneous Equations, <i>Review of
Scientific Instruments</i>, vol. 13, Nov. 1942, pp. 493-495.
<span class="pagenum" id="Page_242">[Pg 242]</span></p>

<p class="neg-indent"><span class="smcap">Brown, S. L.</span>, and
<span class="smcap">L. L. Wheeler</span>, The Use of a Mechanical
Synthesizer to Solve Trigonometric and Certain Types of Transcendental
Equations, and for the Double Summations Involved in Patterson
Contours, <i>Journal of Applied Physics</i>, vol. 14, Jan. 1943, pp. 30-36.</p>

<p class="neg-indent"><span class="smcap">Fürth, R.</span>, and <span
class="smcap">R. W. Pringle</span>, A New Photo-Electric Method for
Fourier Synthesis and Analysis, <i>London, Edinburgh and Dublin
Philosophical Magazine and Journal of Science</i>, vol. 35,
series 7, 1944, pp. 643-656.</p>

<p class="neg-indent"><span class="smcap">International Hydrographic
Bureau</span>, <i>Tide Predicting Machines</i>, International
Hydrographic Bureau, Special Publication 13, July 1926.</p>

<p class="neg-indent"><span class="smcap">Kranz, Frederick W.</span>,
A Mechanical Synthesizer and Analyzer, <i>Journal of the Franklin
Institute</i>, vol. 204, 1927, pp. 245-262.</p>

<p class="neg-indent"><span class="smcap">Marble, F. G.</span>,
An Automatic Vibration Analyzer, <i>Bell Laboratories Record</i>,
vol. 22, Apr. 1944, pp. 376-380.</p>

<p class="neg-indent"><span class="smcap">Maxwell, L. R.</span>,
An Electrical Method for Compounding Sine Functions, <i>Review of
Scientific Instruments</i>, vol. 11, Feb. 1940, pp. 47-54.</p>

<p class="neg-indent"><span class="smcap">Miller, Dayton C.</span>,
A 32-Element Harmonic Synthesizer, <i>Journal of the Franklin
Institute</i>, vol. 181, 1916, pp. 51-81.</p>

<p class="neg-indent"><span class="smcap">Miller, Dayton C.</span>,
The Henrici Harmonic Analyzer and Devices for Extending and Facilitating
Its Use, <i>Journal of the Franklin Institute</i>, vol. 182, 1916,
pp. 285-322.</p>

<p class="neg-indent"><span class="smcap">Milne, J. R.</span>, A
“Duplex” Form of Harmonic Synthetiser and Its Mathematical Theory,
<i>Proceedings of the Royal Society of Edinburgh</i>, vol. 39,
1918-19, pp. 234-242.</p>

<p class="neg-indent"><span class="smcap">Montgomery, H. C.</span>, An
Optical Harmonic Analyzer, <i>Bell System Technical Journal</i>,
vol. 17, no. 3, July 1938, pp. 406-415.</p>

<p class="neg-indent"><span class="smcap">Raymond, W. J.</span>, An
Harmonic Synthesizer Having Components of Incommensurable Period and
Any Desired Decrement, <i>Physical Review</i>, vol. 11, series 2, 1918,
pp. 479-481.</p>

<p class="neg-indent"><span class="smcap">Robertson, J. M.</span>,
A Simple Harmonic Continuous Calculating Machine, <i>London,
Edinburgh and Dublin Philosophical Magazine and Journal of
Science</i>, vol. 13, 1932, pp. 413-419.</p>

<p class="neg-indent"><span class="smcap">Somerville, J. M.</span>,
Harmonic Synthesizer for Demonstrating and Studying Complex Wave Forms,
<i>Journal of Scientific Instruments</i>, vol. 21, Oct. 1944,
pp. 174-177.</p>

<p class="neg-indent"><span class="smcap">Straiton, A. W.</span>,
and <span class="smcap">G. K. Terhune</span>, Harmonic Analysis by
Photographic Method, <i>Journal of Applied Physics</i>, vol. 14, 1943,
pp. 535-536.</p>

<p class="neg-indent"><span class="smcap">Wegel, R. L.</span>, and
<span class="smcap">C. R. Moore</span>, An Electrical Frequency
Analyzer, <i>Bell System Technical Journal</i>, vol. 3, 1924,
pp. 299-323.</p>
</div>

<h3>NETWORK ANALYZERS</h3>

<div class="blockquot">
<p>A third branch of the analogue calculating machine is the network
analyzer. To solve problems, this machine uses the laws governing a
network of electrical circuits. For example, an electric power company
with a system of power lines over hundreds of miles may have a problem
about electrical power: will an accident or a sudden demand cause a
<span class="pagenum" id="Page_243">[Pg 243]</span>
breakdown anywhere in the system? In the General Electric Company
in Schenectady, N. Y., there is a machine called the A.C. Network
Analyzer. All the properties of the power company’s network of lines
can be fed on a small scale into the analyzer. Certain dials are turned
and certain plugwires are connected. Then various kinds of “accidents”
and “sudden demands” are fed into the machine, and the response of the
system is noted. The answers given by the machine are multiplied by the
proper scale factor, and in this way the problem of the power company
is solved.</p>

<p>There are two kinds of problems that network analyzers are built to
solve: the steady state conditions and the transient conditions. For
example, you may not overload a fuse with an electric iron when it is
plugged in and being used, but as you pull out the cord, you may blow
the fuse: the steady state does not overstrain the system, but the
transient does.</p>

<p>Some articles on network analyzers are:</p>

<p class="neg-indent"><span class="smcap">Enns, W. E.</span>,
A New Simple Calculator of Load Flow in A.C. Networks, <i>Transactions
of the American Institute of Electrical Engineers</i>,
vol. 62, 1943, pp. 786-790.</p>

<p class="neg-indent"><span class="smcap">Hazen, H. L.</span>, and
others, <i>The M.I.T. Network Analyzer</i>, Cambridge, Mass.:
Massachusetts Institute of Technology, Department of Electrical
Engineering, Serial No. 69, Apr. 1931.</p>

<p class="neg-indent"><span class="smcap">Kuehni, H. P.</span>, and
<span class="smcap">R. G. Lorraine</span>, A New A.C. Network Analyzer,
<i>Transactions of the American Institute of Electrical
Engineers</i>, vol. 57, 1938, pp. 67-73.</p>

<p class="neg-indent"><span class="smcap">Parker, W. W.</span>, Dual
A.C. Network Calculator, <i>Electrical Engineering</i>, May 1945,
pp. 182-183.</p>

<p class="neg-indent"><span class="smcap">Parker, W. W.</span>,
The Modern A.C. Network Calculator, <i>Transactions of the American
Institute of Electrical Engineers</i>, vol. 60, Nov. 1941,
pp. 977-982.</p>

<p class="neg-indent"><span class="smcap">Peterson, H. A.</span>,
An Electric Circuit Transient Analyzer, <i>General Electric Review</i>,
Sept. 1939, pp. 394-400.</p>

<p class="neg-indent"><span class="smcap">Varney, R. N.</span>,
An All-Electric Integrator for Solving Differential Equations, <i>Review
of Scientific Instruments</i>, vol. 13, Jan. 1942, pp. 10-16.</p>

<p>Some of the articles on applications of network analyzers to various
problems are:</p>

<p class="neg-indent"><span class="smcap">Kron, Gabriel</span>,
Equivalent Circuits of the Elastic Field, <i>Journal of Applied
Mechanics</i>, vol. A11, Sept. 1944, pp. 146-161.</p>

<p class="neg-indent"><span class="smcap">Kron, Gabriel</span>,
Tensorial Analysis and Equivalent Circuits of Elastic Structures,
<i>Journal of the Franklin Institute</i>, vol. 238, Dec. 1944, pp.
399-442.</p>

<p class="neg-indent"><span class="smcap">Kron, Gabriel</span>,
Numerical Solution of Ordinary and Partial Differential Equations
by Means of Equivalent Circuits, <i>Journal of Applied Physics</i>,
vol. 16, 1945, pp. 172-186.

<span class="pagenum" id="Page_244">[Pg 244]</span></p>

<p class="neg-indent"><span class="smcap">Kron, Gabriel</span>,
Electric Circuit Models for the Vibration Spectrum of Polyatomic
Molecules, <i>Journal of Chemical Physics</i>, vol. 14, no. 1, Jan.
1946, pp. 19-31.</p>

<p class="neg-indent"><span class="smcap">Kron, G.</span>, and
<span class="smcap">G. K. Carter</span>, A.C. Network Analyzer Study
of the Schrödinger Equation, <i>Physical Review</i>, vol. 67, 1945,
pp. 44-49.</p>

<p class="neg-indent"><span class="smcap">Kron, G.</span>, and <span
class="smcap">G. K. Carter</span>, Network Analyzer Tests of Equivalent
Circuits of Vibrating Polyatomic Molecules, <i>Journal of Chemical
Physics</i>, vol. 14, no. 1, Jan. 1946, pp. 32-34.</p>

<p class="neg-indent"><span class="smcap">Peterson, H. A.</span>,
and <span class="smcap">C. Concordia</span>, Analyzers for Use in
Engineering and Scientific Problems, <i>General Electric Review</i>,
vol. 48, no. 9, Sept. 1945, pp. 29-37.</p>
</div>

<h3>MACHINES FOR SOLVING<br /> ALGEBRAIC EQUATIONS</h3>

<div class="blockquot">
<p>Another branch of the analogue calculating machine is a type of machine
that will solve various kinds of algebraic equations (<a href="#SUPPL_2">see Supplement 2</a>).
A list of some articles follows. The article by Mallock describes
a machine for solving up to 10 linear simultaneous equations in 10
unknowns, and the article by Wilbur, a machine for solving up to 9.</p>

<p class="neg-indent"><span class="smcap">Dietzold, Robert L.</span>,
The Isograph—A Mechanical Root-Finder, <i>Bell Laboratories
Record</i>, vol. 16, no. 4, Dec. 1937, pp. 130-134.</p>

<p class="neg-indent"><span class="smcap">Duncan, W. J.</span>,
Some Devices for the Solution of Large Sets of Simultaneous Linear
Equations, <i>London, Edinburgh, and Dublin Philosophical
Magazine and Journal of Science</i>, vol. 35, series 7, 1944,
pp. 660-670.</p>

<p class="neg-indent"><span class="smcap">Frame, J. Sutherland</span>,
Machines for Solving Algebraic Equations, <i>Mathematical Tables
and Other Aids to Computation</i>, vol. 1, no. 9, Jan. 1945,
pp. 337-353.</p>

<p class="neg-indent"><span class="smcap">Hart, H. C.</span>, and
<span class="smcap">Irven Travis</span>, Mechanical Solution of Algebraic
Equations, <i>Journal of the Franklin Institute</i>, vol. 225,
Jan. 1938, pp. 63-72.</p>

<p class="neg-indent"><span class="smcap">Herr, D. L.</span>, and
<span class="smcap">R. S. Graham</span>, An Electrical Algebraic Equation
Solver, <i>Review of Scientific Instruments</i>, vol. 9,
Oct. 1938, pp. 310-315.</p>

<p class="neg-indent"><span class="smcap">Mallock, R. R. M.</span>,
An Electrical Calculating Machine, <i>Proceedings of the Royal
Society</i>, series A, vol. 140, 1933, pp. 457-483.</p>

<p class="neg-indent"><span class="smcap">Mercner, R. O.</span>,
The Mechanism of the Isograph, <i>Bell Laboratories Record</i>,
vol. 16, no. 4, Dec. 1937, pp. 135-140.</p>

<p class="neg-indent"><span class="smcap">Stibitz, George R.</span>,
Electric Root-finder, <i>Mathematical Tables and Other Aids to
Computation</i>, vol. 3, no. 24, Oct. 1948, pp. 328-329.</p>

<p class="neg-indent"><span class="smcap">Wilbur, J. B.</span>,
The Mechanical Solution of Simultaneous Equations, <i>Journal of the
Franklin Institute</i>, vol. 222, Dec. 1936, pp. 715-724.</p>
</div>

<h3>ANALOGUE MACHINES—<br />MISCELLANEOUS</h3>

<div class="blockquot">
<p>Some articles referring to various other kinds of analogue machines
and their applications are here listed together:
<span class="pagenum" id="Page_245">[Pg 245]</span></p>

<p class="neg-indent"><span class="smcap">Bush, V.</span>,
<span class="smcap">F. D. Gage</span>, and <span class="smcap">R. R.
Stewart</span>, A Continuous Integraph, <i>Journal of the
Franklin Institute</i>, vol. 203, 1927, pp. 63-84.</p>

<p class="neg-indent"><span class="smcap">Gray, T. S.</span>, A
Photo-Electric Integraph, <i>Journal of the Franklin Institute</i>,
vol. 212, 1931, pp. 77-102.</p>

<p class="neg-indent"><span class="smcap">Hazen, H. L.</span>,
<span class="smcap">G. S. Brown</span>, and <span class="smcap">W. R.
Hedeman</span>, The Cinema Integraph: A Machine for Evaluating a
Parametric Product Integral (two parts and appendix), <i>Journal of the
Franklin Institute</i>, vol. 230, July 1940, pp. 19-44, and Aug.
1940, pp. 183-205.</p>

<p class="neg-indent"><span class="smcap">McCann, G. D.</span>, and
<span class="smcap">H. E. Criner</span>, Mechanical Problems Solved
Electrically, <i>Westinghouse Engineer</i>, vol. 6, no. 2, March 1946,
pp. 49-56.</p>

<p class="neg-indent"><span class="smcap">Myers, D. M.</span>,
An Integraph for the Solution of Differential Equations of the
Second-Order, <i>Journal of Scientific Instruments</i>, vol. 16, 1939,
pp. 209-222.</p>

<p class="neg-indent"><span class="smcap">Pekeris, C. L.</span>, and
<span class="smcap">W. T. White</span>, Differentiation with the Cinema
Integraph, <i>Journal of the Franklin Institute</i>, vol. 234,
July 1942, pp. 17-29.</p>

<p class="neg-indent"><span class="smcap">Smith, C. E.</span>, and
<span class="smcap">E. L. Gove</span>, An Electromechanical Calculator
for Directional-Antenna Patterns, <i>Transactions of the
American Institute of Electrical Engineers</i>, vol. 62, 1943,
pp. 78-82.</p>

<p class="neg-indent"><span class="smcap">Yavne, R. O.</span>,
High Accuracy Contour Cams, <i>Product Engineering</i>, vol. 19,
part 2, Aug. 1948, 3 pp.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Electrical
Gun Director Demonstrated, <i>Bell Laboratories Record</i>, vol. 22,
no. 4, Dec. 1943, pp. 157-167.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Development
of the Electric Director, <i>Bell Laboratories Record</i>, vol. 22,
no. 5, Jan. 1944, pp. 225-230.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Old Field Fortune Teller: Electronic Oil Pool Analyzer,
<i>Popular Mechanics</i>, vol. 86, Sept. 1946, p. 154.</p>
</div>

<h3>HARVARD IBM AUTOMATIC<br />SEQUENCE-CONTROLLED CALCULATOR</h3>

<div class="blockquot">
<p>The basic scientific description of this machine as of
September 1, 1945, is contained in:</p>

<p class="neg-indent"><span class="smcap">Aiken, Howard H.</span>, and
<span class="smcap">Staff of the Computation Laboratory</span>, <i>A
Manual of Operation for the Automatic Sequence-Controlled Calculator</i>,
Cambridge, Mass.: Harvard University Press, 1946, 561 pp.</p>

<p>The machine has changed rather a good deal since Sept. 1, 1945.
Some circuits have been removed. Other circuits have been added. The
capacity of the machine to do problems has been greatly increased.
The Computation Laboratory at Harvard University is cordial towards
scientific inquiries, and some unpublished, mimeographed information is
available at the laboratory regarding the details of these changes.</p>

<p>Some shorter scientific and technical descriptions of the machine
are contained in:
<span class="pagenum" id="Page_246">[Pg 246]</span></p>

<p class="neg-indent"><span class="smcap">Aiken, Howard H.</span>, and
<span class="smcap">Grace M. Hopper</span>, The Automatic Sequence
Controlled Calculator (3 parts), <i>Electrical Engineering</i>,
vol. 65, nos. 8, 9, and 10, Aug. to Nov. 1946, p. 384 ... (21 pp.).</p>

<p class="neg-indent"><span class="smcap">Bloch, Richard M.</span>,
Mark I Calculator, <i>Proceedings of a Symposium on Large-Scale
Digital Calculating Machinery</i>, Harvard University Press, 1948,
pp. 23-30.</p>

<p class="neg-indent"><span class="smcap">Harrison, Joseph O.,
Jr.</span>, The Preparation of Problems for the Mark I Calculator,
<i>Proceedings of a Symposium on Large-Scale Digital Calculating Machinery</i>,
Harvard University Press, 1948, pp. 208-210.</p>

<p class="neg-indent"><span class="smcap">International Business
Machines Corporation</span>, <i>IBM Automatic Sequence-Controlled
Calculator</i>, Endicott, N. Y.: International Business Machines
Corporation, 1945, 6 pp.</p>

<p>Some of the less technical articles regarding the machine are:</p>

<p class="neg-indent"><span class="smcap">Genet, N.</span>,
Got a Problem? Harvard’s Amazing New Mathematical Robot,
<i>Scholastic</i>, vol. 45, Sept. 18, 1944, p. 35.</p>

<p class="neg-indent"><span class="smcap">Torrey, V.</span>, Robot
Mathematician Knows All the Answers, <i>Popular Science</i>, vol. 145,
Oct. 1944, pp. 86-89....</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Giant New
Calculator, <i>Science News Letter</i>, vol. 46, Aug. 12, 1944,
p. 111.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Mathematical Robot Presented to Harvard, <i>Time</i>, vol. 44,
Aug. 14, 1944, p. 72.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, World’s
Greatest Machine for Automatic Calculation, <i>Science News Letter</i>,
vol. 46, Aug. 19, 1944, p. 123.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Superbrain,
<i>Nation’s Business</i>, vol. 32, Sept. 1944, p. 8.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Robot Works
Problems Never Before Solved, <i>Popular Mechanics</i>, vol. 82,
Oct. 1944, p. 13.</p>
</div>

<h3>ENIAC, THE ELECTRONIC NUMERIC<br />INTEGRATOR AND CALCULATOR</h3>

<div class="blockquot">
<p>There is as yet no full-scale, published scientific account of the
Eniac. At the Ballistic Research Laboratories, Aberdeen, Md., where
the machine now is, there are a few copies of some long mimeographed
reports on the machine and the way it works. These were prepared by
H. H. Goldstine and others when at the Moore School of Electrical
Engineering, as a part of the contract under which the machine was
constructed for the U. S. Government. It is possible that these reports
might be consulted on request by serious students.
<span class="pagenum" id="Page_247">[Pg 247]</span></p>

<p>Some scientific descriptions of the machine and its properties
are:</p>

<p class="neg-indent"><span class="smcap">Burks, Arthur W.</span>,
Electronic Computing Circuits of the ENIAC, <i>Proceedings of the
Institute of Radio Engineers</i>, vol. 35, no. 8, Aug. 1947,
pp. 756-767.</p>

<p class="neg-indent"><span class="smcap">Clippinger, R. F.</span>,
<i>A Logical Coding System Applied to the Eniac</i>, B. R. L.
Report No. 673, Aberdeen, Md.: Ballistic Research Laboratories,
Sept. 29, 1948, 41 pp.</p>

<p class="neg-indent"><span class="smcap">Eckert, J. Presper,
Jr.</span>, <span class="smcap">John W. Mauchly</span>,
<span class="smcap">Herman H. Goldstine</span>, and <span class="smcap">J. G.
Brainerd</span>, Description of the ENIAC and Comments on Electronic
Digital Computing Machines, Applied Mathematics Panel Report 171.2R,
Washington, D. C.: National Defense Research Committee, Nov. 1945, 78
pp.</p>

<p class="neg-indent"><span class="smcap">Goldstine, Herman H.</span>,
and <span class="smcap">Adele Goldstine</span>, The Electronic
Numerical Integrator and Computer (ENIAC), <i>Mathematical Tables
and Other Aids to Computation</i>, vol. 2, no. 15, July 1946, pp. 97-110.</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>,
The ENIAC, an Electronic Computing Machine, <i>Nature</i>, vol. 158,
Oct. 12, 1946, pp. 500-506.</p>

<p class="neg-indent"><span class="smcap">Hartree, D. R.</span>,
<i>Calculating Machines: Recent and Prospective Developments and
Their Impact on Mathematical Physics</i>, Cambridge, England:
The University Press, 1947, 40 pp. (Pages 14 to 27 are devoted
to the Eniac.)</p>

<p class="neg-indent"><span class="smcap">Tabor, Lewis P.</span>,
Brief Description and Operating Characteristics of the ENIAC,
<i>Proceedings of a Symposium on Large-Scale Digital Calculating
Machinery</i>, Harvard University Press, 1948, pp. 31-39.</p>

<p>Some of the less technical articles on Eniac are:</p>

<p class="neg-indent"><span class="smcap">Rose, A.</span>, Lightning
Strikes Mathematics: ENIAC, <i>Popular Science</i>, vol. 148,
Apr. 1946, pp. 83-86.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Robot
Calculator: ENIAC, All Electronic Device, <i>Business Week</i>,
Feb. 16, 1946, p. 50 ...</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Answers
by ENY: Electronic Numerical Integrator and Computer, ENIAC,
<i>Newsweek</i>, vol. 27, Feb. 18, 1946, p. 76.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Adds in
¹/₅₀₀₀ Second: Electronic Computing Machine at the University of
Pennsylvania, <i>Science News Letter</i>, vol. 49, Feb. 23, 1946, p.
113 ...</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, ENIAC: at
the University of Pennsylvania, <i>Time</i>, vol. 47,
Feb. 25, 1946, p. 90.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, It Thinks
with Electrons; the ENIAC, <i>Popular Mechanics</i>, vol. 85, June
1946, p. 139.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Electronic
Calculator: ENIAC, <i>Scientific American</i>, vol. 174, June 1946,
p. 248.</p>
</div>

<h3>BELL LABORATORIES RELAY COMPUTERS</h3>

<div class="blockquot">
<p>As yet no full-scale scientific report is available on the Bell
Laboratories general-purpose relay computers that went to Aberdeen and
Langley Field. However, there is some information about these and other
Bell Laboratories relay computing machines in the following articles:
<span class="pagenum" id="Page_248">[Pg 248]</span></p>

<p class="neg-indent"><span class="smcap">Alt, Franz L.</span>,
A Bell Telephone Laboratories’ Computing Machine (two parts),
<i>Mathematical Tables and Other Aids to Computation</i>,
vol. 3, no. 21, Jan. 1948, pp. 1-13, and vol. 3, no. 22,
Apr. 1948, pp. 69-84.</p>

<p class="neg-indent"><span class="smcap">Cesareo, O.</span>, The Relay
Interpolator, <i>Bell Laboratories Record</i>, vol. 24, no. 12,
Dec. 1946, pp. 457-460.</p>

<p class="neg-indent"><span class="smcap">Juley, Joseph</span>,
The Ballistic Computer, <i>Bell Laboratories Record</i>, vol. 25,
no. 1, Jan. 1947, pp. 5-9.</p>

<p class="neg-indent"><span class="smcap">Williams, Samuel B.</span>,
A Relay Computer for General Application, <i>Bell Laboratories
Record</i>, vol. 25, no. 2, Feb. 1947, pp. 49-54.</p>

<p class="neg-indent"><span class="smcap">Williams, Samuel B.</span>,
Bell Telephone Laboratories’ Relay Computing System, <i>Proceedings of
a Symposium on Large-Scale Digital Calculating Machinery</i>,
Harvard University Press, 1948, pp. 40-68.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Complex
Computer Demonstrated, <i>Bell Laboratories Record</i>, vol. 19, no. 2,
Oct. 1940, pp. v-vi.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, <i>Computer
Mark 22 Mod. 0: Development and Description</i>, Navord Report
No. 178-45, Washington, D. C.: Navy Department,
Dec. 6, 1945, 225 pp.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Relay Computer for the Army, <i>Bell Laboratories Record</i>,
vol. 26, no. 5, May 1948, pp. 208-209.</p>
</div>

<h3>THE KALIN-BURKHART<br />LOGICAL-TRUTH CALCULATOR</h3>

<div class="blockquot">
<p>As yet there are no published references on the Kalin-Burkhart
Logical-Truth Calculator.</p>

<p>Some books covering a good deal of mathematical logic are:</p>

<p class="neg-indent"><span class="smcap">Quine, W. V.</span>,
<i>Mathematical Logic</i>, New York: W. W. Norton &amp; Co.,
1940, 348 pp.</p>

<p class="neg-indent"><span class="smcap">Reichenbach, Hans</span>,
<i>Elements of Symbolic Logic</i>, New York: The Macmillan Co.,
1947, 444 pp.</p>

<p class="neg-indent"><span class="smcap">Tarski, Alfred</span>,
<i>Introduction to Logic</i>, New York: Oxford University Press,
1941, 239 pp.</p>

<p class="neg-indent"><span class="smcap">Woodger, J. H.</span>,
<i>The Axiomatic Method in Biology</i>, Cambridge, England:
The University Press, 1937, 174 pp.</p>

<p>Chapter 2, <a href="#Page_18">pp. 18-52</a>, is an excellent
and understandable summary of the concepts of mathematical logic.</p>

<p>Several papers on the application of mathematical logic to the
analysis of practical situations are:</p>

<p class="neg-indent"><span class="smcap">Berkeley, Edmund C.</span>,
Boolean Algebra (The Technique for Manipulating “And,” “Or,” “Not,” and
Conditions) and Applications to Insurance, <i>Record of the American
Institute of Actuaries</i>, vol. 26, Oct. 1937, pp. 373-414.</p>

<p class="neg-indent"><span class="smcap">Berkeley, Edmund C.</span>,
Conditions Affecting the Application of Symbolic Logic, <i>Journal
of Symbolic Logic</i>, vol. 7, no. 4, Dec. 1942, pp. 160-168.</p>

<p class="neg-indent"><span class="smcap">Shannon, Claude E.</span>,
A Symbolic Analysis of Relay and Switching Circuits, <i>Transactions
of the American Institute of Electrical Engineers</i>, vol. 57,
1938, pp. 713-723.</p>

<p>This paper has had a good deal of influence here and there on the
development of electric circuits using relays.
<span class="pagenum" id="Page_249">[Pg 249]</span></p>

<p>The following report discusses the solution of some problems of
mathematical logic by means of a large-scale digital calculator:</p>

<p class="neg-indent"><span class="smcap">Tarski, Alfred</span>,
<i>A Decision Method for Elementary Algebra and Geometry</i>,
Report R-109, California: Rand Corporation, Aug. 1, 1948, 60 pp.</p>
</div>

<h3>OTHER DIGITAL MACHINES<br />FINISHED OR UNDER DEVELOPMENT</h3>

<div class="blockquot">
<p><b>The Aiken Mark II Relay Calculator</b></p>

<p>The Computation Laboratory of Harvard University finished during
1947 a second large relay calculator, called the Aiken Mark II Relay
Calculator. This machine is alluded to briefly at the end of <a href="#CHAPTER_10">Chapter 10</a>
and is described more fully in the following:</p>

<p class="neg-indent"><span class="smcap">Campbell, Robert V. D.</span>,
Mark II Calculator, <i>Proceedings of a Symposium on
Large-Scale Digital Calculating Machinery</i>, Cambridge, Mass.:
Harvard University Press, 1948, pp. 69-79.</p>

<p class="neg-indent"><span class="smcap">Freeland, Stephen L.</span>,
Inside the Biggest Man-Made Brain, <i>Popular Science</i>,
May 1947, pp. 95-100.</p>

<p class="neg-indent"><span class="smcap">Miller, Frederick G.</span>,
Application of Printing Telegraph Equipment to Large-Scale Calculating
Machinery, <i>Proceedings of a Symposium on Large-Scale Digital
Calculating Machinery</i>, Cambridge, Mass.: Harvard University Press,
1948, pp. 213-222.</p>

<p class="space-above1"><b>The Edsac</b></p>

<p>The Edsac is a machine under construction in England.</p>

<p class="neg-indent"><span class="smcap">Wilkes, M. V.</span>,
The Design of a Practical High-Speed Computing Machine: the EDSAC,
<i>Proceedings of the Royal Society</i>, series A, vol. 195, 1948,
pp. 274-279.</p>

<p class="neg-indent"><span class="smcap">Wilkes, M. V.</span>, and
<span class="smcap">W. Renwick</span>, An Ultrasonic Memory Unit for
the EDSAC, <i>Electronic Engineering</i>, vol. 20, no. 245,
July 1948, pp. 208-213.</p>

<p class="space-above1"><b>The Edvac</b></p>

<p>The Edvac is a machine under construction at the Moore School of
Electrical Engineering, Philadelphia.</p>

<p class="neg-indent"><span class="smcap">Koons, Florence</span>,
and <span class="smcap">Samuel Lubkin</span>, Conversion of Numbers
from Decimal to Binary Form in the EDVAC, <i>Mathematical Tables and
Other Aids to Computation</i>, vol. 3, no. 26,
Apr. 1949, pp. 427-431.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, EDVAC
Replaces ENIAC, <i>The Pennsylvania Gazette</i>, Philadelphia:
University of Pennsylvania, vol. 45, no. 8, Apr. 1947, pp. 9-10.</p>

<p class="space-above1"><b>The IBM Selective-Sequence Electronic Calculator</b></p>

<p>The IBM Selective-Sequence Electronic Calculator was finished and
announced in January 1948, and is alluded to briefly at the end of
<a href="#CHAPTER_10">Chapter 10</a>. More information about this machine
is in the following references:
<span class="pagenum" id="Page_250">[Pg 250]</span></p>

<p class="neg-indent"><span class="smcap">Eckert, W. J.</span>,
Electrons and Computation, <i>The Scientific Monthly</i>,
vol. 67, no. 5, Nov. 1948, pp. 315-323.</p>

<p class="neg-indent"><span class="smcap">International Business
Machines Corporation</span>, <i>IBM Selective-Sequence Electronic
Calculator</i>, New York: International Business Machines
Corporation (form no. 52-3927-0), 1948, 16 pp.</p>

<p class="space-above1"><b>The Raytheon Computer</b></p>

<p>The Raytheon Computer is a machine under construction at the
Raytheon Manufacturing Co., Waltham, Mass.</p>

<p class="neg-indent"><span class="smcap">Bloch, R. M.</span>,
<span class="smcap">R. V. D. Campbell</span>, and
<span class="smcap">M. Ellis</span>, The Logical Design of the
Raytheon Computer, <i>Mathematical Tables and Other Aids to Computation</i>,
vol. 3, no. 24, Oct. 1948, pp. 286-295.</p>

<p class="neg-indent"><span class="smcap">Bloch, R. M.</span>,
<span class="smcap">R. V. D. Campbell</span>, and <span class="smcap">M.
Ellis</span>, General Design Considerations for the Raytheon Computer,
<i>Mathematical Tables and Other Aids to Computation</i>, vol.
3, no. 24, Oct. 1948, pp. 317-323.</p>

<p class="space-above1"><b>A “System of Electric Remote-Control Accounting”</b></p>

<p>During the 1930’s a system using connected punch-card machinery was
experimented with in a department store in Pittsburgh. The purpose of
the system was automatic accounting and analysis of sales. This system
is described in:</p>

<p class="neg-indent"><span class="smcap">Woodruff, L. F.</span>,
A System of Electric Remote-Control Accounting, <i>Transactions of
the American Institute of Electrical Engineers</i>, vol. 57,
Feb. 1938, pp. 78-87.</p>

<p class="space-above1"><b>The Univac</b></p>

<p>The Univac is a machine under construction at the Eckert-Mauchly
Computer Corporation, Philadelphia. A similar but smaller digital
computer called the Binac is also being developed.</p>

<p class="neg-indent"><span class="smcap">Eckert-Mauchly Computer
Corporation</span>, <i>The Univac System</i>, Philadelphia:
Eckert-Mauchly Computer Corp., 1948, 8 pp.</p>

<p class="neg-indent"><span class="smcap">Electronic Control Co.</span>
(now <span class="smcap">Eckert-Mauchly Computer Corp.</span>),
<i>A Tentative Instruction Code for a Statistical Edvac</i>,
Philadelphia: Electronic Control Co. (now Eckert-Mauchly Computer Corp.),
May 7, 1947, 19 pp.</p>

<p class="neg-indent"><span class="smcap">Snyder, Frances E.</span>,
and <span class="smcap">Hubert M. Livingston</span>, Coding of a
Laplace Boundary Value Problem for the UNIVAC, <i>Mathematical Tables
and Other Aids to Computation</i>, vol. 3, no. 25, Jan. 1949,
pp. 341-350.</p>

<p class="space-above1"><b>The Zuse Computer</b></p>

<p>The Zuse Computer is a small digital computer constructed in
Germany.</p>

<p class="neg-indent"><span class="smcap">Lyndon, Roger C.</span>,
The Zuse Computer, <i>Mathematical Tables and Other Aids to
Computation</i>, vol. 2, no. 20, Oct. 1947, pp. 355-359.</p>
</div>

<p><span class="pagenum" id="Page_251">[Pg 251]</span></p>

<h3>THE DESIGN OF DIGITAL MACHINES</h3>

<div class="blockquot">
<p>Following are a number of references on various aspects of the
design of digital computing machines:</p>

<p class="space-above1"><b>Organization</b></p>

<p class="neg-indent"><span class="smcap">Burks, Arthur W.</span>,
Super-Electronic Computing Machine, <i>Electronic Industries</i>,
vol. 5, no. 7, July 1946, p. 62.</p>

<p class="neg-indent"><span class="smcap">Burks, Arthur W.</span>,
<span class="smcap">Herman H. Goldstine</span> and
<span class="smcap">John von Neumann</span>, <i>Preliminary Discussion
of the Logical Design of an Electronic Computing Instrument</i>,
Princeton, N. J.: Institute for Advanced Study, 2nd edition,
Sept. 1947, 42 pp.</p>

<p class="neg-indent"><span class="smcap">Eckert, J. Presper,
Jr.</span>, <span class="smcap">John W. Mauchly</span>, and
<span class="smcap">J. R. Weiner</span>, An Octal System Automatic Computer,
<i>Electrical Engineering</i>, vol. 68, no. 4, Apr. 1949, p. 335.</p>

<p class="neg-indent"><span class="smcap">Forrester, Jay W.</span>,
<span class="smcap">Warren S. Loud</span>, <span class="smcap">Robert
R. Everett</span>, and <span class="smcap">David R. Brown</span>,
<i>Lectures by Project Whirlwind Staff on Electronic Digital
Computation</i>, Cambridge, Mass.: Massachusetts Institute of
Technology, Servo-mechanisms Laboratory, Mar. and Apr. 1947, 149 pp.</p>

<p class="neg-indent"><span class="smcap">Lubkin, Samuel</span>,
Decimal Point Location in Computing Machines, <i>Mathematical Tables
and Other Aids to Computation</i>, vol. 3, no. 21,
Jan. 1948, pp. 44-50.</p>

<p class="neg-indent"><span class="smcap">Patterson, George
W.</span>, editor, and others, <i>Theory and Techniques for Design
of Electronic Digital Computers</i> (subtitle: <i>Lectures Given
at the Moore School 8 July 1946-31 August 1946</i>),
Philadelphia: The University of Pennsylvania, Moore School of
Electrical Engineering, vol. 1, lectures 1-10, Sept. 10, 1947,
161 pp.; vol. 2, lectures 11-21, Nov. 1, 1947, 173 pp.;
vol. 3 and 4 in preparation.</p>

<p class="neg-indent"><span class="smcap">Stibitz, George R.</span>,
<i>Relay Computers</i>, Applied Mathematics Panel Report 171.1R,
Washington, D. C.: National Defense Research Council,
Feb. 1945, 83 pp.</p>

<p class="neg-indent"><span class="smcap">Stibitz, George R.</span>,
Should Automatic Computers be Large or Small? <i>Mathematical Tables
and Other Aids to Computation</i>, vol. 2, no. 20, Oct. 1947,
pp. 362-364.</p>

<p class="neg-indent"><span class="smcap">Stibitz, George R.</span>,
The Organization of Large-Scale Calculating Machinery,
<i>Proceedings of a Symposium on Large-Scale Digital
Calculating Machinery</i>, Cambridge, Mass.:
Harvard University Press, 1948, pp. 91-100.</p>

<p class="neg-indent"><span class="smcap">Stibitz, George R.</span>,
A New Class of Computing Aids, <i>Mathematical Tables and Other Aids
to Computation</i>, vol. 3, no. 23, July 1948, pp. 217-221.</p>

<p class="space-above1"><b>Input and Output Devices</b></p>

<p class="neg-indent"><span class="smcap">Alexander, Samuel N.</span>,
Input and Output Devices for Electronic Digital Calculating Machinery,
<i>Proceedings of a Symposium on Large-Scale Digital Calculating
Machinery</i>, Cambridge, Mass.: Harvard University Press, 1948,
pp. 248-253.
<span class="pagenum" id="Page_252">[Pg 252]</span></p>

<p class="neg-indent"><span class="smcap">Fuller, Harrison W.</span>,
The Numeroscope, <i>Proceedings of a Symposium on Large-Scale
Digital Calculating Machinery</i>, Cambridge, Mass.:
Harvard University Press, 1948, pp. 238-247.</p>

<p class="neg-indent"><span class="smcap">O’neal, R. D.</span>,
Photographic Methods for Handling Input and Output Data,
<i>Proceedings of a Symposium on Large-Scale Digital Calculating
Machinery</i>, Cambridge, Mass.: Harvard University Press,
1948, pp. 260-266.</p>

<p class="neg-indent"><span class="smcap">Tyler, Arthur W.</span>,
Optical and Photographic Storage Techniques, <i>Proceedings of a
Symposium on Large-Scale Digital Calculating Machinery</i>,
Cambridge, Mass.: Harvard University Press, 1948, pp. 146-150.</p>

<p class="neg-indent"><span class="smcap">Zworykin, V. K.</span>,
<span class="smcap">L. E. Flory</span>, and <span class="smcap">W. S.
Pike</span>, Letter-Reading Machine, <i>Electronics</i>, vol. 22,
no. 6, June 1949, pp. 80-86.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Letter-Printing Cathode-Ray Tube, <i>Electronics</i>, vol. 22,
no. 6, June 1949, pp. 160-162.</p>

<p class="space-above1"><b>Storage Devices</b></p>

<p class="neg-indent"><span class="smcap">Brillouin, Leon N.</span>,
Electromagnetic Delay Lines, <i>Proceedings of a Symposium on
Large-Scale Digital Calculating Machinery</i>, Cambridge, Mass.:
Harvard University Press, 1948, pp. 110-124.</p>

<p class="neg-indent"><span class="smcap">Forrester, Jay W.</span>,
High-Speed Electrostatic Storage, <i>Proceedings of a Symposium on
Large-Scale Digital Calculating Machinery</i>, Cambridge, Mass.:
Harvard University Press, 1948, pp. 125-129.</p>

<p class="neg-indent"><span class="smcap">Haeff, Andrew V.</span>,
The Memory Tube and its Application to Electronic Computation,
<i>Mathematical Tables and Other Aids to Computation</i>,
vol. 3, no. 24, Oct. 1948, pp. 281-286.</p>

<p class="neg-indent"><span class="smcap">Kornei, Otto</span>, Survey
of Magnetic Recording, <i>Proceedings of a Symposium on Large-Scale
Digital Calculating Machinery</i>, Cambridge, Mass.:
Harvard University Press, 1948, pp. 223-237.</p>

<p class="neg-indent"><span class="smcap">Moore, Benjamin L.</span>,
Magnetic and Phosphor Coated Discs, <i>Proceedings of a Symposium
on Large-Scale Digital Calculating Machinery</i>,
Cambridge, Mass.: Harvard University Press, 1948,
pp. 130-132.</p>

<p class="neg-indent"><span class="smcap">Rajchman, Jan A.</span>,
The Selectron—A Tube for Selective Electrostatic Storage,
<i>Mathematical Tables and Other Aids to Computation</i>,
vol. 2, no. 20, Oct. 1947, pp. 359-361 and frontispiece.</p>

<p class="neg-indent"><span class="smcap">Sharpless, T. Kite</span>,
Mercury Delay Lines as a Memory Unit, <i>Proceedings of a Symposium
on Large-Scale Digital Calculating Machinery</i>, Cambridge,
Mass.: Harvard University Press, 1948, pp. 103-109.</p>

<p class="neg-indent"><span class="smcap">Sheppard, C. Bradford</span>,
Transfer Between External and Internal Memory, <i>Proceedings of
a Symposium on Large-Scale Digital Calculating Machinery</i>,
Cambridge, Mass.: Harvard University Press, 1948, pp. 267-273.</p>

<p class="space-above1"><b>Programming or Coding</b></p>

<p class="neg-indent"><span class="smcap">Everett, Robert R.</span>,
<i>Digital Computing Machine Logic</i> (memorandum M-63),
Cambridge, Mass.: Massachusetts Institute of Technology,
Servo-mechanisms Laboratory, Mar. 19, 1947, 48 pp.
<span class="pagenum" id="Page_253">[Pg 253]</span></p>

<p class="neg-indent"><span class="smcap">Goldstine, Herman H.</span>,
and <span class="smcap">John von Neumann</span>, <i>Planning and
Coding of Problems for an Electronic Computing Instrument</i>,
Princeton, N. J.: Institute for Advanced Study, 1947, 69 pp.</p>

<p class="neg-indent"><span class="smcap">Goldstine, Herman H.</span>,
and <span class="smcap">John von Neumann</span>, <i>Planning and
Coding of Problems for an Electronic Computing Instrument</i>,
Princeton, N. J.: Institute for Advanced Study, part 2, vol. 3,
1948, 23 pp.</p>

<p class="neg-indent"><span class="smcap">Mauchly, John W.</span>,
Preparation of Problems for Edvac-Type Machines, <i>Proceedings of a
Symposium on Large-Scale Digital Calculating Machinery</i>,
Cambridge, Mass.: Harvard University Press, 1948, pp. 203-207.</p>
</div>

<h3>DIGITAL MACHINES—<br />MISCELLANEOUS</h3>

<div class="blockquot">
<p>Many of the following articles are nontechnical and contain much
interesting information about machines that think:</p>

<p class="neg-indent"><span class="smcap">Alt, Franz L.</span>,
New High-Speed Computing Devices, <i>The American Statistician</i>,
vol. 1, no. 1, Aug. 1947, pp. 14-15.</p>

<p class="neg-indent"><span class="smcap">Bush, Vannevar</span>,
As We May Think, <i>Atlantic Monthly</i>, July 1945, pp. 101-108.</p>

<p class="neg-indent"><span class="smcap">Condon, Edward U.</span>,
<i>The Electronic Brain Means a Better Future for You</i>
(broadcast), Columbia Broadcasting System, Jan. 4, 1948.</p>

<p class="neg-indent"><span class="smcap">Davis, Harry M.</span>,
Mathematical Machines, <i>Scientific American</i>, vol. 180, no. 4,
Apr. 1949, pp. 29-39.</p>

<p class="neg-indent"><span class="smcap">Lagemann, John K.</span>,
It All Adds Up, <i>Collier’s Magazine</i>, May 31, 1947,
pp. 22-23 ...</p>

<p class="neg-indent"><span class="smcap">Locke, E. L.</span>,
Modern Calculators, <i>Astounding Science Fiction</i>, vol. 52,
no. 5, Jan. 1949, pp. 87-106.</p>

<p class="neg-indent"><span class="smcap">MacLaughlan, Lorne</span>,
Electrical Mathematicians, <i>Astounding Science Fiction</i>, vol. 53,
no. 3, May 1949, pp. 93-108.</p>

<p class="neg-indent"><span class="smcap">Mann, Martin</span>, Want to
Buy a Brain? <i>Popular Science</i>, vol. 154, no. 5, May 1949,
pp. 148-152.</p>

<p class="neg-indent"><span class="smcap">Newman, James R.</span>,
Custom-Built Genius, <i>New Republic</i>, June 23, 1947, pp. 14-18.</p>

<p class="neg-indent"><span class="smcap">Pfeiffer, John E.</span>,
The Machine That Plays Gin Rummy, <i>Science Illustrated</i>, vol. 4,
no. 3, Mar. 1949, pp. 46-48 ...</p>

<p class="neg-indent"><span class="smcap">Ridenour, Louis N.</span>,
Mechanical Brains, <i>Fortune</i>, vol. 39, no. 5, May 1949,
pp. 108-118.</p>

<p class="neg-indent"><span class="smcap">Tumbleson, Robert C.</span>,
Calculating Machines, <i>Federal Science Progress</i>, June 1947,
pp. 3-7.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Almost Human, <i>Home Office News</i>, Newark, N. J.:
Prudential Insurance Company of America, Feb. 1947, p. 8.</p>
</div>

<h3>APPLICATIONS OF DIGITAL MACHINES</h3>

<div class="blockquot">
<p>Some of the problems that mechanical brains can solve, some of the
methods for controlling them to solve problems, and some of the
<span class="pagenum" id="Page_254">[Pg 254]</span>
implications of mechanical brains for future problems are covered in
the following references:</p>

<p class="space-above1"><b>Solving Problems</b></p>

<p class="neg-indent"><span class="smcap">Berkeley, Edmund C.</span>,
Electronic Machinery for Handling Information, and its
Uses in Insurance, <i>Transactions of the Actuarial Society of
America</i>, vol. 48, May 1947, pp. 36-52.</p>

<p class="neg-indent"><span class="smcap">Berkeley, Edmund C.</span>,
Electronic Sequence Controlled Calculating Machinery and Applications
in Insurance, <i>Proceedings of 1947 Annual Conference, Life
Office Management Association</i>, New York: Life Office Management
Association, 1947, pp. 116-129.</p>

<p class="neg-indent"><span class="smcap">Curry, Haskell B.</span>,
and <span class="smcap">Willa A. Wyatt</span>, <i>A Study of Inverse
Interpolation of the Eniac</i>, B. R. L. Report No. 615,
Aberdeen, Md.: Ballistic Research Laboratories, Aug. 19,
1946, 100 pp.</p>

<p class="neg-indent"><span class="smcap">Harrison, Joseph O.,
Jr.</span>, and <span class="smcap">Helen Malone</span>, Piecewise
Polynomial Approximation for Large-Scale Digital Calculators,
<i>Mathematical Tables and Other Aids to Computation</i>,
vol. 3, no. 26, Apr. 1949, pp. 400-407.</p>

<p class="neg-indent"><span class="smcap">Hoffleit, Dorrit</span>,
A Comparison of Various Computing Machines Used in Reduction of
Doppler Observations, <i>Mathematical Tables and Other Aids to
Computation</i>, vol. 3, no. 25, Jan. 1949, pp. 373-377.</p>

<p class="neg-indent"><span class="smcap">Leontief, Wassily W.</span>,
Computational Problems Arising in Connection with Economic Analysis of
Interindustrial Relationships, <i>Proceedings of a Symposium on
Large-Scale Digital Calculating Machinery</i>, Cambridge, Mass.:
Harvard University Press, 1948, pp. 169-175.</p>

<p class="neg-indent"><span class="smcap">Lotkin, Max</span>,
<i>Inversion on the Eniac Using Osculatory Interpolation</i>, B.
R. L. Report No. 632, Aberdeen, Md.: Ballistic Research Laboratories,
July 15, 1947, 42 pp.</p>

<p class="neg-indent"><span class="smcap">Lowan, Arnold N.</span>,
The Computation Laboratory of the National Bureau of Standards,
<i>Scripta Mathematica</i>, vol. 15, no. 1, Mar. 1949,
pp. 33-63.</p>

<p class="neg-indent"><span class="smcap">Matz, Adolph</span>,
Electronics in Accounting, <i>Accounting Review</i>, vol. 21,
no. 4, Oct. 1946, pp. 371-379.</p>

<p class="neg-indent"><span class="smcap">McPherson, James L.</span>,
Applications of High-Speed Computing Machines to Statistical Work,
<i>Mathematical Tables and Other Aids to Computation</i>,
vol. 3, no. 22, Apr. 1948, pp. 121-126.</p>

<p class="neg-indent"><span class="smcap">Mitchell, Herbert F.,
Jr.</span>, Inversion of a Matrix of Order 38, <i>Mathematical Tables
and Other Aids to Computation</i>, vol. 3, no. 23, July 1948,
pp. 161-166.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Revolutionizing the Office, <i>Business Week</i>, May 28, 1949,
no. 1030, pp. 65-72.</p>

<p class="space-above1"><b>Speech</b></p>

<p>Some of the possibilities of machines dealing with voice and
speech are indicated in:
<span class="pagenum" id="Page_255">[Pg 255]</span></p>

<p class="neg-indent"><span class="smcap">Dudley, Homer</span>,
<span class="smcap">R. R. Riesz</span>, and <span class="smcap">S. S. A.
Watkins</span>, A Synthetic Speaker, <i>Journal of the Franklin
Institute</i>, vol. 227, June 1939, pp. 739-764.</p>

<p>This is an article on the <i>Voder</i>, which is an abbreviation
of <i>V</i>oice <i>O</i>peration <i>De</i>monstrator. The machine was
exhibited at the New York World’s Fair, 1939.</p>

<p class="neg-indent"><span class="smcap">Dudley, Homer</span>,
The Vocoder, <i>Bell Laboratories Record</i>, vol. 18, no. 4,
Dec. 1939, pp. 122-126.</p>

<p>This is a more general type of machine than the Voder. The
Vocoder is both an analyzer and synthesizer of human speech.</p>

<p class="neg-indent"><span class="smcap">Potter, Ralph K.</span>,
<span class="smcap">George A. Kopp</span>, and
<span class="smcap">Harriet C. Green</span>, <i>Visible Speech</i>,
New York: D. Van Nostrand Co., 1947, 441 pp.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Pedro the
Voder: A Machine that Talks, <i>Bell Laboratories Record</i>, vol. 17,
no. 6, Feb. 1939, pp. 170-171.</p>

<p class="space-above1"><b>Weather</b></p>

<p>Some of the possibilities of machines dealing with weather
information are covered in:</p>

<p class="neg-indent"><span class="smcap">Lagemann, John K.</span>,
Making Weather to Order, <i>New York Herald Tribune: This Week</i>,
Feb. 23, 1947.</p>

<p class="neg-indent"><span class="smcap">Shalett, Sidney</span>,
Electronics to Aid Weather Figuring, <i>The New York Times</i>,
Jan. 11, 1946.</p>

<p class="neg-indent"><span class="smcap">Zworykin, V. K.</span>,
<i>Outline of Weather Proposal</i>, Princeton, N. J.: Radio
Corporation of America Research Laboratories, Oct. 1945, 11 pp.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>, Weather
Under Control, <i>Fortune</i>, Feb. 1948, pp. 106-111 ...</p>

<p class="space-above1"><b>The Robot Machine</b></p>

<p class="neg-indent"><span class="smcap">Čapek, Karel</span>,
<i>R. U. R.</i> (translated from the Czech by Paul Selver),
New York: Doubleday, Page &amp; Co., 1923.</p>

<p class="neg-indent"><span class="smcap">Lagemann, John K.</span>,
From Piggly Wiggly to Keedoozle, <i>Collier’s Magazine</i>, vol. 122,
no. 18, Oct. 30, 1948, pp. 20-21 ...</p>

<p class="neg-indent"><span class="smcap">Leaver, E. W.</span>,
and <span class="smcap">J. J. Brown</span>, Machines Without Men,
<i>Fortune</i>, vol. 34, no. 5, Nov. 1946, pp. 165 ...</p>

<p class="neg-indent"><span class="smcap">Pease, M. C.</span>, Devious
Weapon, <i>Astounding Science Fiction</i>, vol. 53, no. 2,
Apr. 1949, pp. 34-43.</p>

<p class="neg-indent"><span class="smcap">Shannon, Claude E.</span>,
<i>Programming a Computer for Playing Chess</i>, Bell Telephone
Laboratories, Oct. 8, 1948, 34 pp.</p>

<p class="neg-indent"><span class="smcap">Shelley, Mary W.</span>,
<i>Frankenstein</i> (in Everyman’s Library, No. 616), New York: E. P.
Dutton &amp; Co., last reprinted 1945, 242 pp.</p>

<p class="neg-indent"><span class="smcap">Spilhaus, Athelstan</span>,
Let Robot Work for You, <i>The American Magazine</i>, Dec. 1948,
p. 47 ...</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Another New Product for Robot Salesmen, <i>Modern Industry</i>,
vol. 13, no. 2, Feb. 15, 1947.</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
The Automatic Factory, <i>Fortune</i>, vol. 34, no. 5,
Nov. 1946, p. 160 ...</p>

<p class="neg-indent"><span class="smcap">Anonymous</span>,
Machines Predict What Happens in Your Plant, <i>Business Week</i>,
Sept. 25, 1948, pp. 68-69 ...</p>
</div>

<p><span class="pagenum" id="Page_256">[Pg 256]</span></p>
<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_257">[Pg 257]</span></p>
<h2 class="nobreak">NAME INDEX</h2>
</div>

<p class="blockquot"><i><big>Note:</big> This list of persons mentioned
in the text includes names of fictional characters. The subject index,
which follows, includes all other names.</i></p>

<ul class="index">
<li class="isub1">Aiken, Howard H., <a href="#Page_90">90-112</a>, <a href="#Page_177">177-8</a>,
                                      <a href="#Page_232">232</a>, <a href="#Page_245">245-6</a></li>
<li class="isub1">Alexander, Samuel N., <a href="#Page_251">251</a></li>
<li class="isub1">Alquist, <a href="#Page_200">200</a></li>
<li class="isub1">Alt, Franz L., <a href="#Page_142">142</a>, <a href="#Page_237">237</a>,
                                 <a href="#Page_247">247</a>, <a href="#Page_253">253</a></li>
<li class="isub1">Archer, R. M., <a href="#Page_241">241</a></li>
<li class="isub1">Aristotle, <a href="#Page_152">152</a></li>

<li class="ifrst">Babbage, Charles, <a href="#Page_89">89</a></li>
<li class="isub1">Baehne, G. Walter, <a href="#Page_232">232</a></li>
<li class="isub1">Bailey, C. F., <a href="#Page_237">237</a></li>
<li class="isub1">Barcroft, Joseph, <a href="#Page_229">229</a></li>
<li class="isub1">Beach, Frank A., <a href="#Page_229">229</a></li>
<li class="isub1">Beard, R. E., <a href="#Page_88">88</a>, <a href="#Page_240">240</a></li>
<li class="isub1">Berkeley, Edmund C., <a href="#Page_233">233</a>, <a href="#Page_248">248</a>,
                                       <a href="#Page_254">254</a></li>
<li class="isub1">Berry, R. J. A., <a href="#Page_229">229</a></li>
<li class="isub1">Berry, T. M., <a href="#Page_240">240</a></li>
<li class="isub1">Bloch, Richard M., <a href="#Page_246">246</a>, <a href="#Page_250">250</a></li>
<li class="isub1">Bloomfield, Leonard, <a href="#Page_231">231</a></li>
<li class="isub1">Bodmer, Frederick, <a href="#Page_231">231</a></li>
<li class="isub1">Boelter, L. M. K., <a href="#Page_240">240</a></li>
<li class="isub1">Boole, George, <a href="#Page_152">152</a></li>
<li class="isub1">Boring, Edwin G., <a href="#Page_229">229</a></li>
<li class="isub1">Bower, E. C., <a href="#Page_237">237</a></li>
<li class="isub1">Brainerd, J. G., <a href="#Page_247">247</a></li>
<li class="isub1">Brillouin, Leon N., <a href="#Page_252">252</a></li>
<li class="isub1">Brown, David R., <a href="#Page_251">251</a></li>
<li class="isub1">Brown, G. S., <a href="#Page_245">245</a></li>
<li class="isub1">Brown, J. J., <a href="#Page_255">255</a></li>
<li class="isub1">Brown, S. L., <a href="#Page_241">241-2</a></li>
<li class="isub1">Buckingham, R. A., <a href="#Page_240">240</a></li>
<li class="isub1">Burkhart, William, <a href="#Page_144">144</a>, <a href="#Page_155">155-6</a></li>
<li class="isub1">Burks, Arthur W., <a href="#Page_246">246</a>, <a href="#Page_251">251</a></li>
<li class="isub1">Bush, Vannevar, <a href="#Page_72">72</a>, <a href="#Page_74">74</a>,
                                  <a href="#Page_239">239</a>, <a href="#Page_241">241</a>,
                                  <a href="#Page_245">245</a>, <a href="#Page_253">253</a></li>

<li class="ifrst">Caldwell, Samuel H., <a href="#Page_74">74</a>, <a href="#Page_239">239</a>, <a href="#Page_241">241</a></li>
<li class="isub1">Campbell, Robert V. D., <a href="#Page_249">249-50</a></li>
<li class="isub1">Čapek, Karel, <a href="#Page_199">199</a>, <a href="#Page_255">255</a></li>
<li class="isub1">Carroll, Lewis, <a href="#Page_12">12</a></li>
<li class="isub1">Carter, G. K., <a href="#Page_244">244</a></li>
<li class="isub1">Cesareo, O., <a href="#Page_248">248</a></li>
<li class="isub1">Clemence, G. M., <a href="#Page_237">237</a></li>
<li class="isub1">Clippinger, R. F., <a href="#Page_246">246</a></li>
<li class="isub1">Comrie, John Leslie, <a href="#Page_232">232</a></li>
<li class="isub1">Concordia, C., <a href="#Page_244">244</a></li>
<li class="isub1">Condon, Edward U., <a href="#Page_253">253</a></li>
<li class="isub1">Crew, E. W., <a href="#Page_232">232</a></li>
<li class="isub1">Criner, H. E., <a href="#Page_245">245</a></li>
<li class="isub1">Culley, Frank L., <a href="#Page_237">237</a></li>
<li class="isub1">Curry, Haskell B., <a href="#Page_254">254</a></li>

<li class="ifrst">Davis, Harry M., <a href="#Page_253">253</a></li>
<li class="isub1">Deming, W. Edwards, <a href="#Page_237">237</a></li>
<li class="isub1">Dietzold, Robert L., <a href="#Page_244">244</a></li>
<li class="isub1">Domin, Harry, <a href="#Page_199">199</a></li>
<li class="isub1">Dudley, Homer, <a href="#Page_254">254-5</a></li>
<li class="isub1">Duncan, W. J., <a href="#Page_244">244</a></li>
<li class="isub1">Dunlap, Jack W., <a href="#Page_237">237</a></li>
<li class="isub1">Dwyer, Paul S., <a href="#Page_237">237</a></li>
<li class="isub1">Dyer, H. S., <a href="#Page_237">237</a></li>

<li class="ifrst">Eckert, J. Presper, Jr., <a href="#Page_114">114</a>, <a href="#Page_178">178</a>,
                                           <a href="#Page_247">247</a>, <a href="#Page_251">251</a></li>
<li class="isub1">Eckert, W. J., <a href="#Page_233">233</a>, <a href="#Page_236">236-7</a>,
                                 <a href="#Page_239">239</a>, <a href="#Page_250">250</a></li>
<li class="isub1">Edison, Thomas A., <a href="#Page_15">15</a></li>
<li class="isub1">Ellis, M., <a href="#Page_250">250</a></li>
<li class="isub1">Enns, W. E., <a href="#Page_243">243</a></li>
<li class="isub1">Everett, Robert R., <a href="#Page_251">251-2</a></li>

<li class="ifrst">Feinstein, Lillian, <a href="#Page_237">237</a></li>
<li class="isub1">Flesch, Rudolf, <a href="#Page_231">231</a></li>
<li class="isub1">Flory, L. E., <a href="#Page_252">252</a>
     <span class="pagenum" id="Page_258">[Pg 258]</span></li>

<li class="ifrst">Forrester, Jay W., <a href="#Page_251">251-2</a></li>
<li class="isub1">Frame, J. Sutherland, <a href="#Page_244">244</a></li>
<li class="isub1">Frankenstein, Victor, <a href="#Page_198">198</a>, <a href="#Page_200">200</a></li>
<li class="isub1">Franz, Shepherd I., <a href="#Page_229">229</a></li>
<li class="isub1">Freeland, Stephen L., <a href="#Page_249">249</a></li>
<li class="isub1">Fry, Macon, <a href="#Page_232">232</a></li>
<li class="isub1">Fuller, Harrison W., <a href="#Page_252">252</a></li>
<li class="isub1">Fürth, R., <a href="#Page_242">242</a></li>

<li class="ifrst">Gage, F. D., <a href="#Page_245">245</a></li>
<li class="isub1">Genet, N., <a href="#Page_239">239</a>, <a href="#Page_246">246</a></li>
<li class="isub1">Godwin, Mary W. (Mary W. Shelley), <a href="#Page_198">198</a>, <a href="#Page_255">255</a></li>
<li class="isub1">Goldstine, Adele, <a href="#Page_247">247</a></li>
<li class="isub1">Goldstine, Herman H., <a href="#Page_247">247</a>, <a href="#Page_251">251</a>, <a href="#Page_253">253</a></li>
<li class="isub1">Gove, E. L., <a href="#Page_245">245</a></li>
<li class="isub1">Graff, Willem L., <a href="#Page_231">231</a></li>
<li class="isub1">Graham, R. S., <a href="#Page_244">244</a></li>
<li class="isub1">Gray, T. S., <a href="#Page_245">245</a></li>
<li class="isub1">Green, Harriet C., <a href="#Page_255">255</a></li>

<li class="ifrst">Haeff, Andrew V., <a href="#Page_252">252</a></li>
<li class="isub1">Hansen, Morris H., <a href="#Page_237">237</a></li>
<li class="isub1">Harrison, Joseph O., Jr., <a href="#Page_246">246</a>, <a href="#Page_254">254</a></li>
<li class="isub1">Hart, H. C., <a href="#Page_244">244</a></li>
<li class="isub1">Hartkemeier, Harry Pelle, <a href="#Page_233">233</a></li>
<li class="isub1">Hartree, D. R., <a href="#Page_232">232</a>, <a href="#Page_240">240-1</a>,
                                  <a href="#Page_247">247</a></li>
<li class="isub1">Haupt, Ralph F., <a href="#Page_237">237</a></li>
<li class="isub1">Hayakawa, S. I., <a href="#Page_231">231</a></li>
<li class="isub1">Hazen, H. L., <a href="#Page_243">243</a>, <a href="#Page_245">245</a></li>
<li class="isub1">Hedeman, W. R., <a href="#Page_245">245</a></li>
<li class="isub1">Hedley, K. J., <a href="#Page_233">233</a></li>
<li class="isub1">Herget, Paul, <a href="#Page_237">237</a></li>
<li class="isub1">Herr, D. L., <a href="#Page_244">244</a></li>
<li class="isub1">Herrick, C. Judson, <a href="#Page_229">229</a></li>
<li class="isub1">Hoffleit, Dorrit, <a href="#Page_254">254</a></li>
<li class="isub1">Hogben, Launcelot, <a href="#Page_231">231</a></li>
<li class="isub1">Hollerith, Herman, <a href="#Page_43">43</a></li>
<li class="isub1">Hopper, Grace M., <a href="#Page_246">246</a></li>
<li class="isub1">Horsburgh, E. H., <a href="#Page_232">232</a></li>
<li class="isub1">Hotelling, Harold, <a href="#Page_237">237</a></li>
<li class="isub1">Householder, Alston S., <a href="#Page_230">230</a></li>

<li class="ifrst">Jespersen, Otto, <a href="#Page_231">231</a></li>
<li class="isub1">Juley, Joseph, <a href="#Page_248">248</a></li>

<li class="ifrst">Kalin, Theodore A., <a href="#Page_144">144</a>, <a href="#Page_155">155-6</a></li>
<li class="isub1">Kelvin, Lord, <a href="#Page_72">72</a>, <a href="#Page_240">240</a></li>
<li class="isub1">King, Gilbert W., <a href="#Page_238">238</a></li>
<li class="isub1">Koons, Florence, <a href="#Page_249">249</a></li>
<li class="isub1">Kopp, George A., <a href="#Page_255">255</a></li>
<li class="isub1">Kormes, Jennie P., <a href="#Page_238">238</a></li>
<li class="isub1">Kormes, Mark, <a href="#Page_238">238</a></li>
<li class="isub1">Kornei, Otto, <a href="#Page_252">252</a></li>
<li class="isub1">Kranz, Frederick W., <a href="#Page_242">242</a></li>
<li class="isub1">Kron, Gabriel, <a href="#Page_243">243-4</a></li>
<li class="isub1">Kuder, G. Frederic, <a href="#Page_238">238</a></li>
<li class="isub1">Kuehni, H. P., <a href="#Page_240">240</a>, <a href="#Page_243">243</a></li>

<li class="ifrst">Lagemann, John K., <a href="#Page_253">253</a>, <a href="#Page_255">255</a></li>
<li class="isub1">Landahl, Herbert D., <a href="#Page_230">230</a></li>
<li class="isub1">Lang, H. C., <a href="#Page_233">233</a></li>
<li class="isub1">Lashley, Karl S., <a href="#Page_229">229</a></li>
<li class="isub1">Leaver, E. W., <a href="#Page_255">255</a></li>
<li class="isub1">Leontief, Wassily W., <a href="#Page_254">254</a></li>
<li class="isub1">Lettvin, Jerome Y., <a href="#Page_230">230</a></li>
<li class="isub1">Lilley, S., <a href="#Page_232">232</a></li>
<li class="isub1">Livingston, Hubert M., <a href="#Page_250">250</a></li>
<li class="isub1">Locke, E. L., <a href="#Page_253">253</a></li>
<li class="isub1">Lorraine, R. G., <a href="#Page_243">243</a></li>
<li class="isub1">Lotkin, Max, <a href="#Page_254">254</a></li>
<li class="isub1">Loud, Warren S., <a href="#Page_251">251</a></li>
<li class="isub1">Lowan, Arnold N., <a href="#Page_254">254</a></li>
<li class="isub1">Lubkin, Samuel, <a href="#Page_249">249</a>, <a href="#Page_251">251</a></li>
<li class="isub1">Lyndon, Roger C., <a href="#Page_250">250</a></li>

<li class="ifrst">MacLaughlan, Lorne, <a href="#Page_253">253</a></li>
<li class="isub1">Maginniss, F. J., <a href="#Page_241">241</a></li>
<li class="isub1">Mallock, R. R. M., <a href="#Page_244">244</a></li>
<li class="isub1">Malone, Helen, <a href="#Page_254">254</a></li>
<li class="isub1">Mann, Martin, <a href="#Page_253">253</a></li>
<li class="isub1">Marble, F. G., <a href="#Page_242">242</a></li>
<li class="isub1">Massey, H. S. W., <a href="#Page_240">240</a></li>
<li class="isub1">Mastukazi, Kiyoshi, <a href="#Page_19">19</a></li>
<li class="isub1">Matz, Adolph, <a href="#Page_254">254</a></li>
<li class="isub1">Mauchly, John W., <a href="#Page_114">114</a>, <a href="#Page_178">178</a>,
                          <a href="#Page_247">247</a>, <a href="#Page_251">251</a>, <a href="#Page_253">253</a></li>
<li class="isub1">Maxfield, D. K., <a href="#Page_238">238</a></li>
<li class="isub1">Maxwell, L. R., <a href="#Page_242">242</a></li>
<li class="isub1">McCann, G. D., <a href="#Page_245">245</a></li>
<li class="isub1">McCulloch, Warren S., <a href="#Page_230">230</a></li>
<li class="isub1">McLaughlin, Kathleen, <a href="#Page_238">238</a></li>
<li class="isub1">McPherson, James L., <a href="#Page_254">254</a></li>
<li class="isub1">McPherson, John C., <a href="#Page_238">238</a>
    <span class="pagenum" id="Page_259">[Pg 259]</span></li>
<li class="isub1">Meacham, Alan D., <a href="#Page_237">237</a></li>
<li class="isub1">Mercner, R. O., <a href="#Page_244">244</a></li>
<li class="isub1">Miller, Dayton C., <a href="#Page_242">242</a></li>
<li class="isub1">Miller, Frederick G., <a href="#Page_249">249</a></li>
<li class="isub1">Milliman, Wendell A., <a href="#Page_238">238</a></li>
<li class="isub1">Milne, J. R., <a href="#Page_242">242</a></li>
<li class="isub1">Mitchell, Herbert F., Jr., <a href="#Page_254">254</a></li>
<li class="isub1">Montgomery, H. C., <a href="#Page_242">242</a></li>
<li class="isub1">Moore, Benjamin L., <a href="#Page_252">252</a></li>
<li class="isub1">Moore, C. R., <a href="#Page_242">242</a></li>
<li class="isub1">Murray, Francis J., <a href="#Page_232">232</a></li>
<li class="isub1">Myers, D. M., <a href="#Page_245">245</a></li>

<li class="ifrst">Newman, James R., <a href="#Page_253">253</a></li>

<li class="ifrst">Ogden, C. K., <a href="#Page_231">231</a></li>
<li class="isub1">O’Neal, R. D., <a href="#Page_252">252</a></li>

<li class="ifrst">Parker, W. W., <a href="#Page_243">243</a></li>
<li class="isub1">Patterson, George W., <a href="#Page_251">251</a></li>
<li class="isub1">Pease, M. C., <a href="#Page_255">255</a></li>
<li class="isub1">Pekeris, C. L., <a href="#Page_245">245</a></li>
<li class="isub1">Peterson, H. A., <a href="#Page_240">240</a>, <a href="#Page_243">243-4</a></li>
<li class="isub1">Pfeiffer, John E., <a href="#Page_253">253</a></li>
<li class="isub1">Pieron, Henri, <a href="#Page_229">229</a></li>
<li class="isub1">Pike, W. S., <a href="#Page_252">252</a></li>
<li class="isub1">Pitts, Walter, <a href="#Page_230">230</a></li>
<li class="isub1">Poesch, H., <a href="#Page_240">240</a></li>
<li class="isub1">Porter, A., <a href="#Page_240">240-1</a></li>
<li class="isub1">Potter, Ralph K., <a href="#Page_255">255</a></li>
<li class="isub1">Pringle, R. W., <a href="#Page_242">242</a></li>

<li class="ifrst">Quine, W. V., <a href="#Page_248">248</a></li>

<li class="ifrst">Rajchman, Jan A., <a href="#Page_252">252</a></li>
<li class="isub1">Rashevsky, N., <a href="#Page_230">230</a></li>
<li class="isub1">Raymond, W. J., <a href="#Page_242">242</a></li>
<li class="isub1">Reichenbach, Hans, <a href="#Page_248">248</a></li>
<li class="isub1">Renwick, W., <a href="#Page_249">249</a></li>
<li class="isub1">Ridenour, Louis N., <a href="#Page_253">253</a></li>
<li class="isub1">Riesz, R. R., <a href="#Page_254">254</a></li>
<li class="isub1">Robertson, J. M., <a href="#Page_242">242</a></li>
<li class="isub1">Rose, A., <a href="#Page_247">247</a></li>
<li class="isub1">Rossum, <a href="#Page_199">199</a></li>
<li class="isub1">Royer, Elmer B., <a href="#Page_238">238</a></li>

<li class="ifrst">Sauer, R., <a href="#Page_240">240</a></li>
<li class="isub1">Schlauch, Margaret, <a href="#Page_231">231</a></li>
<li class="isub1">Schnackel, H. G., <a href="#Page_233">233</a></li>
<li class="isub1">Schrödinger, Erwin, <a href="#Page_229">229</a></li>
<li class="isub1">Schwarzchild, Martin, <a href="#Page_237">237</a></li>
<li class="isub1">Shalett, Sidney, <a href="#Page_255">255</a></li>
<li class="isub1">Shannon, Claude E., <a href="#Page_153">153-5</a>, <a href="#Page_241">241</a>,
                     <a href="#Page_248">248</a>, <a href="#Page_255">255</a></li>
<li class="isub1">Sharpless, T. Kite, <a href="#Page_252">252</a></li>
<li class="isub1">Shelley, Mary W., <a href="#Page_198">198</a>, <a href="#Page_255">255</a></li>
<li class="isub1">Shelley, Percy Bysshe, <a href="#Page_198">198</a></li>
<li class="isub1">Sheppard, C. Bradford, <a href="#Page_252">252</a></li>
<li class="isub1">Sherrington, Charles S., <a href="#Page_229">229</a></li>
<li class="isub1">Smith, C. E., <a href="#Page_245">245</a></li>
<li class="isub1">Snyder, Frances E., <a href="#Page_250">250</a></li>
<li class="isub1">Somerville, J. M., <a href="#Page_242">242</a></li>
<li class="isub1">Spilhaus, Athelstan, <a href="#Page_255">255</a></li>
<li class="isub1">Stewart, R. R., <a href="#Page_245">245</a></li>
<li class="isub1">Stibitz, George R., <a href="#Page_129">129-30</a>, <a href="#Page_244">244</a>,
                           <a href="#Page_251">251</a></li>
<li class="isub1">Straiton, A. W., <a href="#Page_242">242</a></li>

<li class="ifrst">Tabor, Lewis P., <a href="#Page_247">247</a></li>
<li class="isub1">Tarski, Alfred, <a href="#Page_248">248-9</a></li>
<li class="isub1">Terhune, G. K., <a href="#Page_242">242</a></li>
<li class="isub1">Thomas, George B., <a href="#Page_238">238</a></li>
<li class="isub1">Thomson, James, <a href="#Page_240">240</a></li>
<li class="isub1">Thomson, William, <a href="#Page_72">72</a>, <a href="#Page_240">240</a></li>
<li class="isub1">Tilney, Frederick, <a href="#Page_229">229</a></li>
<li class="isub1">Torrey, V., <a href="#Page_246">246</a></li>
<li class="isub1">Travis, Irven, <a href="#Page_239">239</a>, <a href="#Page_244">244</a></li>
<li class="isub1">Tumbleson, Robert C., <a href="#Page_253">253</a></li>
<li class="isub1">Turck, J. A. V., <a href="#Page_232">232</a></li>
<li class="isub1">Tyler, Arthur W., <a href="#Page_252">252</a></li>

<li class="ifrst">Varney, R. N., <a href="#Page_243">243</a></li>
<li class="isub1">von Neumann, John, <a href="#Page_124">124</a>, <a href="#Page_251">251</a></li>

<li class="ifrst">Wainwright, Lawrence L., <a href="#Page_72">72</a>, <a href="#Page_241">241</a></li>
<li class="isub1">Walpole, Hugh R., <a href="#Page_231">231</a></li>
<li class="isub1">Watkins, S. S. A., <a href="#Page_254">254</a></li>
<li class="isub1">Wegel, R. L., <a href="#Page_242">242</a></li>
<li class="isub1">Weiner, J. R., <a href="#Page_251">251</a></li>
<li class="isub1">Wheeler, L. L., <a href="#Page_241">241-2</a></li>
<li class="isub1">Whitten, C. A., <a href="#Page_238">238</a></li>
<li class="isub1">Wiener, Norbert, <a href="#Page_229">229</a></li>
<li class="isub1">Wilbur, J. B., <a href="#Page_244">244</a>
    <span class="pagenum" id="Page_260">[Pg 260]</span></li>
<li class="isub1">Wilkes, M. V., <a href="#Page_249">249</a></li>
<li class="isub1">Williams, Samuel B., <a href="#Page_248">248</a></li>
<li class="isub1">Wolf, Arthur W., <a href="#Page_233">233</a></li>
<li class="isub1">Womersley, J. R., <a href="#Page_241">241</a></li>
<li class="isub1">Wood, Thomas, <a href="#Page_19">19</a></li>
<li class="isub1">Woodger, J. H., <a href="#Page_248">248</a></li>
<li class="isub1">Woodruff, L. F., <a href="#Page_250">250</a></li>
<li class="isub1">Wyatt, Willa A., <a href="#Page_254">254</a></li>
<li class="isub1">Wylie, J., <a href="#Page_240">240</a></li>

<li class="ifrst">Yavne, R. O., <a href="#Page_245">245</a></li>

<li class="ifrst">Zworykin, V. K., <a href="#Page_190">190</a>, <a href="#Page_252">252</a>,
                <a href="#Page_255">255</a></li>
</ul>

<hr class="chap x-ebookmaker-drop" />

<div class="chapter">
<p><span class="pagenum" id="Page_261">[Pg 261]</span></p>
<h2 class="nobreak">SUBJECT INDEX</h2>
</div>

<p class="blockquot"><i><big>Notes:</big> Phrases consisting of
an adjective and a noun, or of a noun and a noun, are entered in
their alphabetical place according to the first word. For example,
“electrostatic storage tube” is under</i> <big>e</big>, <i>and “punch
card” is under</i> <big>p</big>.</p>

<ul class="index no-wrap">
<li class="isub1"><i>A</i> field, <a href="#Page_99">99</a></li>
<li class="isub1"><i>A</i> tape, <a href="#Page_82">82-3</a></li>
<li class="isub1">abacus, <a href="#Page_17">17-9</a>, <a href="#Page_133">133</a>, <a href="#Page_220">220</a></li>
<li class="isub1"><i>abax</i> (Greek), <a href="#Page_18">18</a></li>
<li class="isub1">absolute value, <a href="#Page_101">101</a>, <a href="#Page_222">222</a></li>
<li class="isub1">accumulator, <a href="#Page_115">115-6</a></li>
<li class="isub1">accumulator decade, <a href="#Page_118">118</a></li>
<li class="isub1">accuracy, <a href="#Page_67">67</a>, <a href="#Page_89">89</a></li>
<li class="isub1">acetylcholine, <a href="#Page_3">3</a></li>
<li class="isub1">add output, <a href="#Page_120">120</a></li>
<li class="isub1">addend, <a href="#Page_223">223</a></li>
<li class="isub1">adder, <a href="#Page_77">77</a></li>
<li class="isub1">adder mechanism, <a href="#Page_77">77-8</a></li>
<li class="isub1">adding, <a href="#Page_24">24-5</a>, <a href="#Page_27">27</a>, <a href="#Page_37">37</a>, <a href="#Page_55">55</a>,
            <a href="#Page_100">100</a>, <a href="#Page_119">119</a>, <a href="#Page_139">139</a></li>
<li class="isub1">addition circuit, <a href="#Page_37">37</a></li>
<li class="isub1">Aiken Mark I Calculator, <a href="#Page_10">10</a>, <a href="#Page_89">89-112</a>, <a href="#Page_245">245-6</a>;</li>
<li class="isub3"><i>see also</i> Harvard IBM Automatic Sequence-Controlled Calculator</li>
<li class="isub1">Aiken Mark II Relay Calculator, <a href="#Page_176">176-8</a>, <a href="#Page_249">249</a></li>
<li class="isub1">Aiken Mark III Electronic Calculator, <a href="#Page_177">177</a></li>
<li class="isub1">air resistance coefficient, <a href="#Page_80">80-2</a></li>
<li class="isub1">algebra of logic, <a href="#Page_26">26</a>, <a href="#Page_36">36</a>,
            <a href="#Page_56">56-62</a>, <a href="#Page_105">105</a>, <a href="#Page_140">140</a>,
            <a href="#Page_151">151-2</a>, <a href="#Page_164">164</a>,
            <a href="#Page_221"> 221-3</a>, <a href="#Page_248">248</a></li>
<li class="isub1">algebraic equations, machines for solving, <a href="#Page_244">244</a></li>
<li class="isub1">all-or-none response, <a href="#Page_3">3</a></li>
<li class="isub1">alphabet, <a href="#Page_14">14</a></li>
<li class="isub1">alphabetic coding, <a href="#Page_13">13</a>, <a href="#Page_54">54</a></li>
<li class="isub1">alphabetic punching, <a href="#Page_46">46</a></li>
<li class="isub1">alphabetic writing, <a href="#Page_13">13</a></li>
<li class="isub1">amplify, <a href="#Page_73">73</a></li>
<li class="isub1">analogous, <a href="#Page_65">65</a></li>
<li class="isub1">analogue, <a href="#Page_65">65</a></li>
<li class="isub1">analogue machines (machines that handle information expressed as measurements), <a href="#Page_65">65</a>;</li>
<li class="isub3">MIT Differential Analyzer No. 2, <a href="#Page_65">65-88</a>;</li>
<li class="isub3">references, <a href="#Page_239">239-45</a></li>
<li class="isub1">analytical engine, <a href="#Page_90">90</a></li>
<li class="isub1">analyzer, <a href="#Page_68">68</a>, <a href="#Page_241">241-4</a>;</li>
<li class="isub3"><i>see also</i> differential analyzer</li>
<li class="isub1">and, <a href="#Page_146">146-8</a></li>
<li class="isub1">and/or, <a href="#Page_149">149</a></li>
<li class="isub1">angle-indicator, <a href="#Page_74">74-5</a></li>
<li class="isub1">animal thinking, <a href="#Page_4">4</a>, <a href="#Page_8">8</a>, <a href="#Page_188">188</a></li>
<li class="isub1">annuities, <a href="#Page_88">88</a></li>
<li class="isub1">antecedent, <a href="#Page_158">158</a></li>
<li class="isub1">antilogarithm, <a href="#Page_139">139</a>, <a href="#Page_226">226</a></li>
<li class="isub1">antitangent, <a href="#Page_139">139</a>, <a href="#Page_226">226</a></li>
<li class="isub1">approximation, <a href="#Page_220">220</a>;</li>
<li class="isub3"><i>see also</i> rapid approximation</li>
<li class="isub1">aptitude testing, <a href="#Page_190">190</a></li>
<li class="isub1">argument (in a mathematical table or function), <a href="#Page_96">96</a>, <a href="#Page_103">103-4</a>,
                  <a href="#Page_122">122</a>, <a href="#Page_136">136</a>, <a href="#Page_224">224</a></li>
<li class="isub1">arithmetical operations, <a href="#Page_55">55-6</a>, <a href="#Page_173">173</a></li>
<li class="isub1">armor with a motor, <a href="#Page_180">180</a>, <a href="#Page_195">195</a></li>
<li class="isub1">array, <a href="#Page_173">173</a>, <a href="#Page_227">227</a></li>
<li class="isub1">Atomic Energy Commission, <a href="#Page_203">203</a>, <a href="#Page_208">208</a></li>
<li class="isub1">attitudes, <a href="#Page_205">205</a></li>
<li class="isub1">augend, <a href="#Page_223">223</a></li>
<li class="isub1"><i>aut</i> (Latin), <a href="#Page_149">149</a></li>
<li class="isub1">automatic address-book, <a href="#Page_181">181</a></li>
<li class="isub1">automatic carriage, <a href="#Page_53">53</a></li>
<li class="isub1">“Automatic Computing Machinery”</li>
<li class="isub3">(section in <i>Mathematical Tables and Other Aids to Computation</i>),  <a href="#Page_177">177</a>
    <span class="pagenum" id="Page_262">[Pg 262]</span></li>
<li class="isub1">automatic control: house-furnace, <a href="#Page_189">189</a>;</li>
<li class="isub3">lawn-mower, <a href="#Page_188">188</a>;</li>
<li class="isub3">tractor-plow, <a href="#Page_188">188</a>;</li>
<li class="isub3">weather, <a href="#Page_189">189</a></li>
<li class="isub1">automatic cook, <a href="#Page_181">181</a></li>
<li class="isub1">automatic factory, <a href="#Page_189">189</a></li>
<li class="isub1">automatic library, <a href="#Page_9">9</a>, <a href="#Page_181">181</a></li>
<li class="isub1">automatic machinery, <a href="#Page_182">182</a></li>
<li class="isub1">automatic pilot, <a href="#Page_189">189</a></li>
<li class="isub1">automatic recognizer, <a href="#Page_186">186-7</a></li>
<li class="isub1">automatic sequence-controlled calculator, <a href="#Page_90">90</a>;</li>
<li class="isub3"><i>see also</i> Harvard IBM Automatic Sequence-Controlled Calculator</li>
<li class="isub1">automatic stenographer, <a href="#Page_185">185</a></li>
<li class="isub1">automatic switching circuits, <a href="#Page_248">248</a></li>
<li class="isub1">automatic translator, <a href="#Page_182">182</a></li>
<li class="isub1">automatic typist, <a href="#Page_182">182</a>, <a href="#Page_184">184</a></li>
<li class="isub1">axon, <a href="#Page_3">3</a></li>

<li class="ifrst"><i>B</i> field, <a href="#Page_99">99</a></li>
<li class="isub1"><i>B</i> tape, <a href="#Page_82">82-3</a></li>
<li class="isub1">Ballistic Research Laboratories, <a href="#Page_1">1</a>, <a href="#Page_113">113-5</a>,
               <a href="#Page_127">127-8</a>, <a href="#Page_132">132</a>, <a href="#Page_142">142</a></li>
<li class="isub1">base <i>e</i>, <a href="#Page_226">226</a></li>
<li class="isub1">base <a href="#Page_10">10</a>, <a href="#Page_226">226</a></li>
<li class="isub1">beam of electrons, <a href="#Page_172">172</a></li>
<li class="isub1">behavior, <a href="#Page_4">4</a>, <a href="#Page_7">7-8</a>, <a href="#Page_29">29</a></li>
<li class="isub1">Bell Telephone Laboratories, <a href="#Page_4">4-5</a>, <a href="#Page_128">128-43</a>, <a href="#Page_247">247-8</a></li>
<li class="isub1">Bell Telephone Laboratories’ general-purpose relay computer,
                      <a href="#Page_128">128-43</a>, <a href="#Page_247">247-8</a>;</li>
<li class="isub3">cost, <a href="#Page_142">142</a>;</li>
<li class="isub3">reliability, <a href="#Page_141">141</a>;</li>
<li class="isub3">speed, <a href="#Page_142">142</a></li>
<li class="isub1">Bessel functions, <a href="#Page_111">111</a>, <a href="#Page_226">226</a></li>
<li class="isub1">Binac, <a href="#Page_179">179</a></li>
<li class="isub1">binary coding, <a href="#Page_11">11</a>, <a href="#Page_13">13</a></li>
<li class="isub1">binary digit, <a href="#Page_14">14</a></li>
<li class="isub1">binary numbers, <a href="#Page_14">14</a>, <a href="#Page_216">216-9</a></li>
<li class="isub1">biophysics, <a href="#Page_230">230</a></li>
<li class="isub1">biquinary numbers, <a href="#Page_133">133</a>, <a href="#Page_219">219-20</a></li>
<li class="isub1">blocks of arguments, <a href="#Page_137">137</a></li>
<li class="isub1">Boolean algebra, <a href="#Page_152">152</a>, <a href="#Page_248">248</a>;</li>
<li class="isub3"><i>see also</i> mathematical logic</li>
<li class="isub1">both, <a href="#Page_149">149</a></li>
<li class="isub1">bowwow theory, <a href="#Page_12">12</a></li>
<li class="isub1">brain evolution, <a href="#Page_229">229</a></li>
<li class="isub1">brain with a motor, <a href="#Page_180">180</a>, <a href="#Page_195">195</a></li>
<li class="isub1">BTL frames, <a href="#Page_138">138-9</a></li>
<li class="isub1">bus, <a href="#Page_32">32</a>, <a href="#Page_119">119</a></li>
<li class="isub1">button, <a href="#Page_91">91</a>, <a href="#Page_94">94</a></li>

<li class="ifrst"><i>C</i> field, <a href="#Page_99">99</a></li>
<li class="isub1"><i>C</i> tape, <a href="#Page_82">82-3</a></li>
<li class="isub1"><i>calcis</i> (Latin), <a href="#Page_18">18</a></li>
<li class="isub1">calculating punch, <a href="#Page_47">47</a>, <a href="#Page_51">51-2</a>, <a href="#Page_235">235</a></li>
<li class="isub1">calculator frames, <a href="#Page_138">138</a></li>
<li class="isub1">calculator programmed by punch cards, <a href="#Page_236">236</a></li>
<li class="isub1">cam, <a href="#Page_94">94-5</a></li>
<li class="isub1">cam contact, <a href="#Page_91">91</a>, <a href="#Page_94">94-5</a></li>
<li class="isub1">capacitance, <a href="#Page_117">117</a></li>
<li class="isub1">capacitor, <a href="#Page_117">117</a></li>
<li class="isub1">capacity: counter, <a href="#Page_59">59</a>;</li>
<li class="isub3">selecting, <a href="#Page_59">59</a></li>
<li class="isub1">carbon dioxide, <a href="#Page_190">190</a></li>
<li class="isub1">card channel, <a href="#Page_47">47</a>, <a href="#Page_52">52</a></li>
<li class="isub1">card column, <a href="#Page_48">48</a></li>
<li class="isub1">card feed, <a href="#Page_48">48</a>, <a href="#Page_91">91</a></li>
<li class="isub1">card punch, <a href="#Page_91">91</a>, <a href="#Page_97">97</a></li>
<li class="isub1">card reader, <a href="#Page_116">116</a>, <a href="#Page_118">118</a></li>
<li class="isub1">card sorter, <a href="#Page_96">96</a></li>
<li class="isub1">card stacker, <a href="#Page_48">48</a></li>
<li class="isub1">card station, <a href="#Page_47">47</a></li>
<li class="isub1">Carnegie Institution of Washington, <a href="#Page_113">113</a></li>
<li class="isub1">carry impulse, <a href="#Page_118">118</a></li>
<li class="isub1">cell nucleus, <a href="#Page_2">2-3</a></li>
<li class="isub1">census, <a href="#Page_43">43</a>, <a href="#Page_53">53</a></li>
<li class="isub1">channel, <a href="#Page_47">47</a>, <a href="#Page_52">52</a>, <a href="#Page_170">170</a></li>
<li class="isub1">characteristic of a logarithm, <a href="#Page_107">107</a></li>
<li class="isub1">check counter, <a href="#Page_105">105</a></li>
<li class="isub1">check-marks, <a href="#Page_151">151</a></li>
<li class="isub1">checking, <a href="#Page_105">105</a>, <a href="#Page_110">110</a>,
                       <a href="#Page_179">179</a>, <a href="#Page_227">227</a></li>
<li class="isub1">chess game, <a href="#Page_117">117</a></li>
<li class="isub1">chestnut blight, <a href="#Page_201">201</a></li>
<li class="isub1">chortle, <a href="#Page_12">12</a></li>
<li class="isub1">class selector, <a href="#Page_59">59</a></li>
<li class="isub1">clearing, <a href="#Page_100">100</a></li>
<li class="isub1">codes, <a href="#Page_29">29</a>, <a href="#Page_54">54</a>, <a href="#Page_96">96</a>, <a href="#Page_99">99</a></li>
<li class="isub1">coding, <a href="#Page_30">30</a>, <a href="#Page_130">130</a>, <a href="#Page_252">252-3</a></li>
<li class="isub1">coding line, <a href="#Page_99">99</a></li>
<li class="isub1">column (in a punch card), <a href="#Page_45">45</a>
    <span class="pagenum" id="Page_263">[Pg 263]</span></li>
<li class="isub1">connective, <a href="#Page_148">148</a>, <a href="#Page_158">158-9</a></li>
<li class="isub1">connective grouping, <a href="#Page_159">159</a></li>
<li class="isub1">collating, <a href="#Page_51">51</a>, <a href="#Page_173">173</a></li>
<li class="isub1">collator, <a href="#Page_47">47</a>, <a href="#Page_51">51</a>, <a href="#Page_235">235</a></li>
<li class="isub1">collator counting device, <a href="#Page_51">51</a>, <a href="#Page_235">235</a></li>
<li class="isub1">combining information, <a href="#Page_15">15</a></li>
<li class="isub1">combining operations, <a href="#Page_173">173</a></li>
<li class="isub1">Common, <a href="#Page_59">59-60</a></li>
<li class="isub1">comparer, <a href="#Page_57">57-8</a></li>
<li class="isub1">comparing, <a href="#Page_50">50</a>, <a href="#Page_57">57-8</a></li>
<li class="isub1">complement, <a href="#Page_55">55</a>;</li>
<li class="isub3"><i>see also</i> nines complement, ones complement, tens complement</li>
<li class="isub1">Complex Computer, <a href="#Page_129">129-30</a></li>
<li class="isub1">complex numbers, <a href="#Page_128">128-9</a></li>
<li class="isub1">computer, <a href="#Page_6">6</a>, <a href="#Page_27">27</a></li>
<li class="isub1">Computer 1 and Computer 2, <a href="#Page_132">132</a>, <a href="#Page_138">138</a></li>
<li class="isub1">conflicts between statements, <a href="#Page_149">149-50</a></li>
<li class="isub1">consequent, <a href="#Page_158">158</a></li>
<li class="isub1">constant, <a href="#Page_224">224</a></li>
<li class="isub1">constant ratio, <a href="#Page_77">77</a></li>
<li class="isub1">constant register, <a href="#Page_96">96</a>, <a href="#Page_99">99</a></li>
<li class="isub1">constant switch, <a href="#Page_99">99</a></li>
<li class="isub1">Constant Transmitter, <a href="#Page_116">116</a>, <a href="#Page_118">118</a></li>
<li class="isub1">consulting a table, <a href="#Page_103">103</a>, <a href="#Page_122">122</a></li>
<li class="isub1">convergent, <a href="#Page_221">221</a></li>
<li class="isub1">Converter, <a href="#Page_115">115</a></li>
<li class="isub1">context, <a href="#Page_144">144</a></li>
<li class="isub1">continuous annuities, <a href="#Page_88">88</a></li>
<li class="isub1">continuous contingent insurances, <a href="#Page_88">88</a></li>
<li class="isub1">continuously running gear, <a href="#Page_93">93</a></li>
<li class="isub1">control, <a href="#Page_6">6</a>, <a href="#Page_28">28</a>, <a href="#Page_90">90-1</a></li>
<li class="isub1">control brushes, <a href="#Page_51">51-2</a></li>
<li class="isub1">control frames, <a href="#Page_138">138-9</a></li>
<li class="isub1">Control Instrument Company, <a href="#Page_43">43</a></li>
<li class="isub1">control over robot machines, <a href="#Page_196">196-208</a></li>
<li class="isub1">control tape, <a href="#Page_28">28</a></li>
<li class="isub1">controversy, <a href="#Page_197">197</a></li>
<li class="isub1">cosine, <a href="#Page_75">75</a>, <a href="#Page_85">85</a>, <a href="#Page_139">139</a>, <a href="#Page_226">226</a></li>
<li class="isub1">cost of mechanical brains, <a href="#Page_87">87</a>, <a href="#Page_109">109</a>, <a href="#Page_126">126</a>,
    <a href="#Page_142">142</a>, <a href="#Page_165">165</a>, <a href="#Page_168">168</a></li>
<li class="isub1">counter, <a href="#Page_52">52</a>, <a href="#Page_74">74</a>, <a href="#Page_93">93-4</a></li>
<li class="isub1">counter position, <a href="#Page_93">93</a></li>
<li class="isub1">counter wheel, <a href="#Page_93">93</a>, <a href="#Page_118">118</a></li>
<li class="isub1">counting, <a href="#Page_55">55</a></li>
<li class="isub1">coupling (numbers), <a href="#Page_106">106</a></li>
<li class="isub1">cube, <a href="#Page_105">105</a>, <a href="#Page_224">224</a></li>
<li class="isub1">Current (input of comparer), <a href="#Page_57">57</a></li>
<li class="isub1">cycle, <a href="#Page_29">29</a>, <a href="#Page_45">45</a></li>
<li class="isub1">Cycling Unit, <a href="#Page_115">115-6</a></li>
<li class="isub1">Cypriote, <a href="#Page_13">13</a></li>

<li class="ifrst">Dartmouth College, <a href="#Page_131">131</a></li>
<li class="isub1">decade, <a href="#Page_118">118</a></li>
<li class="isub1">decimal digit, <a href="#Page_11">11</a>, <a href="#Page_14">14</a></li>
<li class="isub1">decimal position, <a href="#Page_118">118</a></li>
<li class="isub1">deciphering, <a href="#Page_184">184</a>, <a href="#Page_188">188</a></li>
<li class="isub1">decoding, <a href="#Page_184">184</a>, <a href="#Page_188">188</a></li>
<li class="isub1">definite integral, <a href="#Page_111">111</a>, <a href="#Page_225">225</a></li>
<li class="isub1">delay lines, <a href="#Page_17">17</a>, <a href="#Page_20">20</a>, <a href="#Page_171">171-2</a></li>
<li class="isub1">dendrite, <a href="#Page_3">3</a></li>
<li class="isub1">denial, <a href="#Page_147">147</a></li>
<li class="isub1">dependent variable, <a href="#Page_81">81</a>, <a href="#Page_224">224</a></li>
<li class="isub1">derivative, <a href="#Page_68">68-71</a>, <a href="#Page_225">225</a></li>
<li class="isub1">design of mechanical brains, <a href="#Page_167">167-79</a>, <a href="#Page_251">251</a></li>
<li class="isub1">desk calculating machines, <a href="#Page_4">4</a>, <a href="#Page_11">11</a>, <a href="#Page_17">17</a>, <a href="#Page_19">19</a></li>
<li class="isub1">detail cards, <a href="#Page_50">50</a></li>
<li class="isub1">dial switch, <a href="#Page_92">92</a>, <a href="#Page_95">95-6</a></li>
<li class="isub1">dial telephone, <a href="#Page_17">17</a>, <a href="#Page_19">19</a>, <a href="#Page_128">128</a></li>
<li class="isub1">differences, <a href="#Page_110">110</a>, <a href="#Page_227">227</a></li>
<li class="isub1">differential, <a href="#Page_68">68</a>, <a href="#Page_70">70</a>, <a href="#Page_78">78</a></li>
<li class="isub1">differential analyzer, <a href="#Page_68">68</a>, <a href="#Page_72">72-88</a>, <a href="#Page_239">239-41</a></li>
<li class="isub1">Differential Analyzer No. 2, <a href="#Page_65">65-88</a>;</li>
<li class="isub3">accuracy, <a href="#Page_86">86</a>;</li>
<li class="isub3">cost, <a href="#Page_87">87</a>;</li>
<li class="isub3">reliability, <a href="#Page_87">87</a>;</li>
<li class="isub3">speed, <a href="#Page_87">87</a></li>
<li class="isub1">differential equation, <a href="#Page_68">68-9</a>, <a href="#Page_71">71</a>, <a href="#Page_111">111</a>,
              <a href="#Page_141">141</a>, <a href="#Page_225">225-6</a></li>
<li class="isub1">differential function, <a href="#Page_70">70</a></li>
<li class="isub1">differential gear assembly, <a href="#Page_78">78</a></li>
<li class="isub1">digit, <a href="#Page_11">11</a>, <a href="#Page_14">14</a></li>
<li class="isub1">Digit Pickup, <a href="#Page_60">60</a></li>
<li class="isub1">digit selector, <a href="#Page_60">60</a></li>
<li class="isub1">digit tray, <a href="#Page_119">119</a></li>
<li class="isub1">digit trunk lines, <a href="#Page_119">119</a>
           <span class="pagenum" id="Page_264">[Pg 264]</span></li>
<li class="isub1">digit trunks, <a href="#Page_119">119</a></li>
<li class="isub1">digital machines</li>
<li class="isub3">(machines that handle information expressed as digits or letters):</li>
<li class="isub3">Bell Laboratories’ general-purpose relay calculator, <a href="#Page_128">128-43</a>;</li>
<li class="isub3">Eniac, <a href="#Page_113">113-27</a>;</li>
<li class="isub3">Harvard IBM Automatic Sequence-Controlled Calculator, <a href="#Page_89">89-112</a>;</li>
<li class="isub3">punch-card calculating machinery, <a href="#Page_42">42-64</a>;</li>
<li class="isub3">references, <a href="#Page_232">232-9</a>, <a href="#Page_245">245-55</a></li>
<li class="isub1">directions, <a href="#Page_24">24</a></li>
<li class="isub1">disc, <a href="#Page_78">78-80</a></li>
<li class="isub1">discrimination, <a href="#Page_140">140</a></li>
<li class="isub1">discriminator, <a href="#Page_140">140-1</a></li>
<li class="isub1">distance, <a href="#Page_68">68-9</a></li>
<li class="isub1">distinguishing <i>A</i> and <i>H</i>, <a href="#Page_184">184</a></li>
<li class="isub1">dividend, <a href="#Page_103">103</a>, <a href="#Page_223">223</a></li>
<li class="isub1">Divider-Square-Rooter, <a href="#Page_115">115-7</a></li>
<li class="isub1">dividing, <a href="#Page_55">55-6</a>, <a href="#Page_98">98</a>, <a href="#Page_102">102</a>, <a href="#Page_121">121</a>, <a href="#Page_140">140</a></li>
<li class="isub1">divisor counter, <a href="#Page_102">102</a></li>
<li class="isub1">doorpost, <a href="#Page_65">65-6</a></li>
<li class="isub1">doubling, <a href="#Page_76">76-7</a>, <a href="#Page_100">100</a></li>
<li class="isub1">doubling mechanism, <a href="#Page_76">76-7</a></li>
<li class="isub1">drafting rules, <a href="#Page_149">149</a></li>
<li class="isub1">drag coefficient, <a href="#Page_80">80</a></li>
<li class="isub1">drive, <a href="#Page_86">86</a></li>
<li class="isub1">Dry Ice, <a href="#Page_190">190</a></li>

<li class="ifrst">echo, <a href="#Page_171">171</a></li>
<li class="isub1">Eckert-Mauchly Computer Corporation, <a href="#Page_179">179</a>, <a href="#Page_250">250</a></li>
<li class="isub1">economic relations, <a href="#Page_194">194</a></li>
<li class="isub1">Edsac, <a href="#Page_249">249</a></li>
<li class="isub1">“educated” machine, <a href="#Page_101">101</a></li>
<li class="isub1">Edvac, <a href="#Page_177">177</a>, <a href="#Page_249">249</a></li>
<li class="isub1">Egyptian, <a href="#Page_12">12</a></li>
<li class="isub1">either, <a href="#Page_149">149</a></li>
<li class="isub1">electric charge, <a href="#Page_172">172</a></li>
<li class="isub1">electric remote-control accounting, <a href="#Page_250">250</a></li>
<li class="isub1">electric typewriter, <a href="#Page_91">91</a>, <a href="#Page_97">97</a>, <a href="#Page_236">236</a></li>
<li class="isub1">electromagnet, <a href="#Page_168">168</a></li>
<li class="isub1">Electronic Binary Automatic Computer, <a href="#Page_179">179</a></li>
<li class="isub1">electronic calculating punch, <a href="#Page_236">236</a></li>
<li class="isub1">Electronic Control Company, <a href="#Page_250">250</a></li>
<li class="isub1">Electronic Numerical Integrator and Calculator (Eniac),
                  <a href="#Page_113">113-27</a>, <a href="#Page_246">246-7</a>;</li>
<li class="isub3"><i>see also</i> Eniac</li>
<li class="isub1">electronic tubes, <a href="#Page_17">17</a>, <a href="#Page_20">20-1</a>, <a href="#Page_178">178-9</a>;</li>
<li class="isub3">Cathode, <a href="#Page_21">21</a>;</li>
<li class="isub3">Grid, <a href="#Page_21">21</a>;</li>
<li class="isub3">Plate, <a href="#Page_21">21</a></li>
<li class="isub1">electrostatic storage tube, <a href="#Page_17">17</a>, <a href="#Page_20">20</a>, <a href="#Page_172">172</a></li>
<li class="isub1">11 position, <a href="#Page_45">45</a></li>
<li class="isub1">11 punch, <a href="#Page_58">58</a></li>
<li class="isub1">else, <a href="#Page_146">146-7</a></li>
<li class="isub1">end-around-carry, <a href="#Page_95">95</a>, <a href="#Page_217">217</a>, <a href="#Page_223">223</a></li>
<li class="isub1">engine, <a href="#Page_90">90</a></li>
<li class="isub1">Eniac, <a href="#Page_113">113-27</a>, <a href="#Page_246">246-7</a>;</li>
<li class="isub3">cost, <a href="#Page_126">126</a>;</li>
<li class="isub3">panels, <a href="#Page_115">115</a>;</li>
<li class="isub3">reliability, <a href="#Page_126">126</a>;</li>
<li class="isub3">speed, <a href="#Page_125">125</a>;</li>
<li class="isub3">unbalance, <a href="#Page_124">124</a></li>
<li class="isub1">“enough alike,” <a href="#Page_184">184</a></li>
<li class="isub1">Equal (output of sequencer), <a href="#Page_61">61-2</a></li>
<li class="isub1">equation, <a href="#Page_68">68</a>, <a href="#Page_225">225</a></li>
<li class="isub1">equivalent, <a href="#Page_14">14</a></li>
<li class="isub1">erase key, <a href="#Page_134">134</a></li>
<li class="isub1">Etruscan, <a href="#Page_188">188</a></li>
<li class="isub1">explanation, <a href="#Page_209">209-13</a></li>
<li class="isub1">explicit equation, <a href="#Page_86">86</a></li>
<li class="isub1">exponential, <a href="#Page_85">85</a>, <a href="#Page_106">106</a>, <a href="#Page_225">225-6</a></li>
<li class="isub1">extraction, <a href="#Page_222">222</a></li>

<li class="ifrst">falsity, <a href="#Page_147">147</a></li>
<li class="isub1">farad, <a href="#Page_117">117</a></li>
<li class="isub1">fingers, <a href="#Page_16">16</a>, <a href="#Page_18">18</a></li>
<li class="isub1">fire-control instrument, <a href="#Page_17">17</a>, <a href="#Page_19">19</a>, <a href="#Page_67">67</a>, <a href="#Page_131">131</a></li>
<li class="isub1">5 impulse, <a href="#Page_56">56</a></li>
<li class="isub1">flights, <a href="#Page_70">70</a></li>
<li class="isub1">flip-flop, <a href="#Page_119">119</a></li>
<li class="isub1">following logically, <a href="#Page_145">145</a></li>
<li class="isub1">form feeding device, <a href="#Page_236">236</a></li>
<li class="isub1">formal logic, <a href="#Page_152">152</a></li>
<li class="isub1">formula, <a href="#Page_68">68</a>, <a href="#Page_70">70</a>, <a href="#Page_224">224</a></li>
<li class="isub1">Frankenstein’s monster, <a href="#Page_198">198</a></li>
<li class="isub1">function, <a href="#Page_68">68</a>, <a href="#Page_70">70</a>, <a href="#Page_81">81</a>, <a href="#Page_103">103</a>, <a href="#Page_116">116</a>,
                    <a href="#Page_118">118</a>, <a href="#Page_224">224</a></li>
<li class="isub1">function table, <a href="#Page_80">80-1</a>, <a href="#Page_116">116</a>, <a href="#Page_118">118</a></li>

<li class="ifrst">gang punching, <a href="#Page_50">50</a></li>
<li class="isub1">gearbox, <a href="#Page_77">77-8</a></li>
<li class="isub1">General Electric A.C. Network Analyzer, <a href="#Page_243">243</a></li>
<li class="isub1">General Electric Company, <a href="#Page_243">243</a></li>
<li class="isub1">geographic code, <a href="#Page_54">54</a></li>
<li class="isub1">giant brain, <a href="#Page_1">1</a>, <a href="#Page_5">5-8</a></li>
<li class="isub1">globe, <a href="#Page_65">65-6</a></li>
<li class="isub1">graph, <a href="#Page_81">81</a>
    <span class="pagenum" id="Page_265">[Pg 265]</span></li>
<li class="isub1">great circle, <a href="#Page_69">69</a></li>
<li class="isub1">greater-than, <a href="#Page_25">25-7</a>, <a href="#Page_37">37</a>, <a href="#Page_222">222</a></li>
<li class="isub1">greater-than circuit, <a href="#Page_37">37</a></li>
<li class="isub1">Greek letters, <a href="#Page_120">120</a></li>
<li class="isub1">guided missile, <a href="#Page_197">197</a>, <a href="#Page_206">206</a></li>
<li class="isub1">gun, <a href="#Page_69">69</a></li>

<li class="ifrst">hail storm, <a href="#Page_190">190</a></li>
<li class="isub1">hand perforator, <a href="#Page_132">132</a>, <a href="#Page_134">134</a></li>
<li class="isub1">handling information, <a href="#Page_10">10-18</a></li>
<li class="isub1">harmonic analyzers, <a href="#Page_241">241-2</a></li>
<li class="isub1">harmonic synthesizers, <a href="#Page_241">241-2</a></li>
<li class="isub1">Harvard Computation Laboratory, <a href="#Page_89">89</a>, <a href="#Page_176">176-7</a>,
              <a href="#Page_245">245</a>, <a href="#Page_249">249</a></li>
<li class="isub1">Harvard IBM Automatic Sequence-Controlled Calculator (Mark I), <a href="#Page_10">10</a>,
                <a href="#Page_89">89-112</a>, <a href="#Page_245">245-6</a>;</li>
<li class="isub3">cost, <a href="#Page_109">109</a>;</li>
<li class="isub3">efficiency, <a href="#Page_111">111</a>;</li>
<li class="isub3">reliability, <a href="#Page_110">110</a>;</li>
<li class="isub3">speed, <a href="#Page_109">109</a></li>
<li class="isub1">Harvard Sequence-Controlled Electronic Calculator (Mark III), <a href="#Page_177">177</a></li>
<li class="isub1">Harvard Sequence-Controlled Relay Calculator (Mark II),
                  <a href="#Page_176">176-8</a>, <a href="#Page_249">249</a></li>
<li class="isub1">Harvard University, <a href="#Page_1">1</a>, <a href="#Page_4">4</a>,
         <a href="#Page_8">8</a>, <a href="#Page_89">89</a>,
          <a href="#Page_176">176-7</a>, <a href="#Page_245">245</a>, <a href="#Page_249">249</a></li>
<li class="isub1">hatred, <a href="#Page_206">206</a></li>
<li class="isub1">hoppers, <a href="#Page_51">51</a></li>
<li class="isub1">hub, <a href="#Page_46">46</a>, <a href="#Page_98">98</a></li>
<li class="isub1">human brain, <a href="#Page_2">2-4</a>, <a href="#Page_16">16</a>, <a href="#Page_229">229</a></li>
<li class="isub1">humidity, <a href="#Page_63">63</a></li>

<li class="ifrst">IBM (International Business Machines), <a href="#Page_43">43-64</a>, <a href="#Page_89">89-90</a>, <a href="#Page_177">177</a>,
                    <a href="#Page_233">233-9</a>, <a href="#Page_249">249-50</a></li>
<li class="isub1">IBM Automatic Sequence-Controlled Calculator, <a href="#Page_10">10</a>, <a href="#Page_89">89-112</a>,
                 <a href="#Page_245">245-6</a>;</li>
<li class="isub3"><i>see also</i> Harvard IBM Automatic Sequence-Controlled Calculator</li>
<li class="isub1">IBM card-programmed calculator, <a href="#Page_236">236</a></li>
<li class="isub1">IBM pluggable sequence relay calculator, <a href="#Page_236">236</a></li>
<li class="isub1">IBM punch-card machinery, <a href="#Page_43">43-64</a>, <a href="#Page_233">233-9</a></li>
<li class="isub1">IBM Selective-Sequence Electronic Calculator, <a href="#Page_177">177-9</a>, <a href="#Page_249">249</a></li>
<li class="isub1">ideographic writing, <a href="#Page_12">12</a></li>
<li class="isub1">if, <a href="#Page_146">146-7</a></li>
<li class="isub1">if ... then, <a href="#Page_149">149</a></li>
<li class="isub1">ignorance, <a href="#Page_205">205</a></li>
<li class="isub1">illness, <a href="#Page_191">191-2</a></li>
<li class="isub1">imitative scheme, <a href="#Page_12">12</a></li>
<li class="isub1">in-code, <a href="#Page_99">99</a></li>
<li class="isub1">in-field, <a href="#Page_99">99</a></li>
<li class="isub1">independent variable, <a href="#Page_81">81</a>, <a href="#Page_224">224</a></li>
<li class="isub1">infinity, <a href="#Page_86">86</a>, <a href="#Page_133">133</a>, <a href="#Page_212">212</a>, <a href="#Page_225">225</a></li>
<li class="isub1">information, <a href="#Page_10">10</a></li>
<li class="isub1">initial conditions, <a href="#Page_83">83</a>, <a href="#Page_225">225</a></li>
<li class="isub1">Initiating Unit, <a href="#Page_115">115-6</a></li>
<li class="isub1">input, <a href="#Page_6">6</a>, <a href="#Page_90">90-1</a></li>
<li class="isub1">input devices, <a href="#Page_175">175</a>, <a href="#Page_251">251-2</a></li>
<li class="isub1">input register, <a href="#Page_27">27</a></li>
<li class="isub1">instantaneous rate of change, <a href="#Page_70">70-1</a></li>
<li class="isub1">Institute of Advanced Study, <a href="#Page_124">124</a></li>
<li class="isub1">instructions, <a href="#Page_28">28</a>, <a href="#Page_83">83</a>, <a href="#Page_97">97</a>, <a href="#Page_178">178-9</a></li>
<li class="isub1">insurance company, <a href="#Page_42">42</a></li>
<li class="isub1">insurance policies, <a href="#Page_42">42</a></li>
<li class="isub1">insurance values, <a href="#Page_88">88</a></li>
<li class="isub1">integral, <a href="#Page_68">68</a>, <a href="#Page_71">71-2</a>, <a href="#Page_225">225</a></li>
<li class="isub1">integral sign, <a href="#Page_85">85</a>, <a href="#Page_225">225</a></li>
<li class="isub1">integrating, <a href="#Page_71">71-2</a>, <a href="#Page_78">78</a></li>
<li class="isub1">integrator, <a href="#Page_78">78-80</a></li>
<li class="isub1">integrator mechanism, <a href="#Page_78">78-9</a></li>
<li class="isub1">International Business Machines Corporation (IBM), <a href="#Page_43">43</a>;</li>
<li class="isub3"><i>see</i> IBM</li>
<li class="isub1">International Hydrographic Bureau, <a href="#Page_242">242</a></li>
<li class="isub1">International Phonetic Alphabet, <a href="#Page_13">13</a></li>
<li class="isub1">interpolating, <a href="#Page_131">131</a>, <a href="#Page_221">221</a></li>
<li class="isub1">interposing, <a href="#Page_102">102</a></li>
<li class="isub1">interpreter, <a href="#Page_47">47</a>, <a href="#Page_49">49</a>, <a href="#Page_235">235</a></li>
<li class="isub1">interpreting, <a href="#Page_49">49</a></li>
<li class="isub1">interval, <a href="#Page_68">68</a>, <a href="#Page_70">70</a></li>
<li class="isub1">intuitive thinking, <a href="#Page_8">8</a></li>
<li class="isub1">inverse, <a href="#Page_71">71</a></li>

<li class="ifrst">judgments, <a href="#Page_191">191</a></li>

<li class="ifrst">Kalin-Burkhart Logical-Truth Calculator, <a href="#Page_144">144-66</a>, <a href="#Page_248">248</a>;</li>
<li class="isub3">cost, <a href="#Page_165">165</a>;</li>
<li class="isub3">reliability, <a href="#Page_166">166</a>;</li>
<li class="isub3">speed, <a href="#Page_166">166</a></li>
<li class="isub1">key punch, <a href="#Page_47">47-8</a>, <a href="#Page_96">96</a>, <a href="#Page_235">235</a></li>
<li class="isub1">keyboard, <a href="#Page_48">48</a></li>
<li class="isub1">knots, <a href="#Page_17">17</a>
    <span class="pagenum" id="Page_266">[Pg 266]</span></li>

<li class="ifrst">language of logic, <a href="#Page_56">56-62</a>, <a href="#Page_105">105</a>, <a href="#Page_140">140</a>;</li>
<li class="isub3"><i>see also</i> mathematical logic</li>
<li class="isub1">languages, <a href="#Page_10">10-21</a>, <a href="#Page_231">231</a></li>
<li class="isub1">latch relay, <a href="#Page_40">40-1</a></li>
<li class="isub1">left-hand components, <a href="#Page_56">56</a>, <a href="#Page_121">121</a>, <a href="#Page_215">215</a></li>
<li class="isub1">library, <a href="#Page_9">9</a>, <a href="#Page_181">181</a></li>
<li class="isub1">Library of Congress, <a href="#Page_15">15</a></li>
<li class="isub1">lie detector, <a href="#Page_192">192</a></li>
<li class="isub1">line of coding, <a href="#Page_99">99</a></li>
<li class="isub1">linear, <a href="#Page_224">224-5</a></li>
<li class="isub1">linear interpolation, <a href="#Page_221">221</a></li>
<li class="isub1">linear simultaneous equations, <a href="#Page_141">141</a>, <a href="#Page_225">225</a></li>
<li class="isub1">lobe, <a href="#Page_94">94-5</a></li>
<li class="isub1">logarithm, <a href="#Page_67">67</a>, <a href="#Page_85">85</a>, <a href="#Page_106">106-8</a>, <a href="#Page_139">139</a>, <a href="#Page_225">225</a></li>
<li class="isub1">Logarithm-In-Out counter, <a href="#Page_107">107</a></li>
<li class="isub1">logic, <a href="#Page_144">144</a>;</li>
<li class="isub3"><i>see also</i> mathematical logic</li>
<li class="isub1">logical choice, <a href="#Page_4">4</a>;</li>
<li class="isub3"><i>see also</i> mathematical logic</li>
<li class="isub1">logical connective, <a href="#Page_148">148</a>, <a href="#Page_222">222</a></li>
<li class="isub1">logical operations, <a href="#Page_56">56-62</a>, <a href="#Page_173">173</a></li>
<li class="isub1">logical pattern, <a href="#Page_145">145-6</a></li>
<li class="isub1">logical truth, <a href="#Page_144">144-56</a>, <a href="#Page_166">166</a></li>
<li class="isub1">Logical-Truth Calculator, <a href="#Page_144">144-66</a>;</li>
<li class="isub3"><i>see</i> Kalin-Burkhart Logical-Truth Calculator</li>
<li class="isub1">loopholes, <a href="#Page_149">149</a></li>
<li class="isub1">Low Primary (output of sequencer), <a href="#Page_61">61-2</a></li>
<li class="isub1">Low Secondary (output of sequencer), <a href="#Page_61">61-2</a></li>
<li class="isub1">Lower Brushes, <a href="#Page_52">52</a></li>
<li class="isub1">loxodrome, <a href="#Page_69">69-70</a></li>

<li class="ifrst">machine call number, <a href="#Page_99">99</a></li>
<li class="isub1">machine cycle, <a href="#Page_56">56</a></li>
<li class="isub1">machine language, <a href="#Page_29">29</a>, <a href="#Page_99">99</a>, <a href="#Page_175">175</a>, <a href="#Page_191">191</a></li>
<li class="isub1">machines as a language for thinking, <a href="#Page_19">19-20</a>;</li>
<li class="isub3">references, <a href="#Page_231">231-2</a></li>
<li class="isub1">machines involving voice and speech, <a href="#Page_185">185-6</a>, <a href="#Page_254">254</a></li>
<li class="isub1">magnetic surfaces, <a href="#Page_17">17</a>, <a href="#Page_20">20</a>, <a href="#Page_168">168-70</a>, <a href="#Page_179">179</a></li>
<li class="isub1">magnetic tape, <a href="#Page_169">169-70</a>, <a href="#Page_179">179</a></li>
<li class="isub1">magnetic wire, <a href="#Page_168">168</a></li>
<li class="isub1">magnetized spot, <a href="#Page_168">168-70</a></li>
<li class="isub1">main connective, <a href="#Page_160">160</a></li>
<li class="isub1">many-wire cable, <a href="#Page_50">50</a></li>
<li class="isub1">Mark I (Harvard IBM Automatic Sequence-Controlled Calculator), <a href="#Page_10">10</a>,
                <a href="#Page_89">89-112</a>, <a href="#Page_245">245-6</a>;</li>
<li class="isub3"><i>see also</i> Harvard IBM Automatic Sequence-Controlled Calculator</li>
<li class="isub1">Mark II (Harvard Sequence-Controlled Relay Calculator), <a href="#Page_176">176-8</a>, <a href="#Page_249">249</a></li>
<li class="isub1">Mark III (Harvard Sequence-Controlled Electronic Calculator), <a href="#Page_177">177</a></li>
<li class="isub1">Massachusetts Institute of Technology, <a href="#Page_1">1</a>, <a href="#Page_20">20</a>, <a href="#Page_65">65</a>,
               <a href="#Page_72">72-88</a>, <a href="#Page_153">153</a></li>
<li class="isub1">Massachusetts Institute of Technology’s Differential Analyzer No. 2, <a href="#Page_65">65-88</a>;</li>
<li class="isub3">accuracy, <a href="#Page_86">86</a>;</li>
<li class="isub3">cost, <a href="#Page_87">87</a>;</li>
<li class="isub3">reliability, <a href="#Page_87">87</a>;</li>
<li class="isub3">speed, <a href="#Page_87">87</a></li>
<li class="isub1">master card, <a href="#Page_50">50</a></li>
<li class="isub1">Master Programmer, <a href="#Page_115">115-6</a></li>
<li class="isub1">matching, <a href="#Page_173">173</a></li>
<li class="isub1">mathematical biophysics, <a href="#Page_230">230</a></li>
<li class="isub1">mathematical logic, <a href="#Page_26">26</a>, <a href="#Page_36">36</a>,
         <a href="#Page_56">56-62</a>, <a href="#Page_105">105</a>,
         <a href="#Page_140">140</a>, <a href="#Page_151">151-2</a>, <a href="#Page_164">164</a>,
         <a href="#Page_221">221-3</a>, <a href="#Page_248">248</a></li>
<li class="isub1">matrices, <a href="#Page_173">173</a>, <a href="#Page_227">227</a></li>
<li class="isub1">matrix, <a href="#Page_173">173</a>, <a href="#Page_227">227</a></li>
<li class="isub1">meanings, <a href="#Page_209">209</a>, <a href="#Page_231">231</a></li>
<li class="isub1">measurements, <a href="#Page_65">65-6</a>, <a href="#Page_68">68</a></li>
<li class="isub1">mechanical brain, <a href="#Page_1">1</a>, <a href="#Page_5">5-8</a>, <a href="#Page_20">20</a>;</li>
<li class="isub3">crucial devices for, <a href="#Page_20">20</a></li>
<li class="isub1">mechanical brains under construction, <a href="#Page_176">176-9</a></li>
<li class="isub1">memory, <a href="#Page_27">27</a>, <a href="#Page_90">90-1</a></li>
<li class="isub1">mentality, <a href="#Page_24">24</a>, <a href="#Page_27">27</a></li>
<li class="isub1">mercury tank, <a href="#Page_171">171</a>, <a href="#Page_179">179</a></li>
<li class="isub1">merging, <a href="#Page_173">173</a></li>
<li class="isub1">metal fingers, <a href="#Page_135">135</a></li>
<li class="isub1">mica, <a href="#Page_172">172</a></li>
<li class="isub1">microphone, <a href="#Page_185">185</a></li>
<li class="isub1">mimeograph stencil, <a href="#Page_16">16</a></li>
<li class="isub1">Minoan, <a href="#Page_188">188</a></li>
<li class="isub1">miscellaneous field, <a href="#Page_99">99</a>
    <span class="pagenum" id="Page_267">[Pg 267]</span></li>
<li class="isub1">mistake, <a href="#Page_134">134</a></li>
<li class="isub1">Moore School of Electrical Engineering, <a href="#Page_7">7</a>, <a href="#Page_113">113-27</a>,
                           <a href="#Page_177">177</a>, <a href="#Page_249">249</a></li>
<li class="isub1">multiplicand, <a href="#Page_223">223</a></li>
<li class="isub1">multiplicand counter, <a href="#Page_101">101</a></li>
<li class="isub1">multiplication schemes, <a href="#Page_214">214-6</a></li>
<li class="isub1">multiplier, <a href="#Page_115">115-6</a></li>
<li class="isub1">multiplier counter, <a href="#Page_101">101</a></li>
<li class="isub1">multiply-divide unit, <a href="#Page_103">103</a></li>
<li class="isub1">multiplying, <a href="#Page_55">55-6</a>, <a href="#Page_101">101</a>, <a href="#Page_121">121</a>, <a href="#Page_140">140</a></li>
<li class="isub1">multiplying punch, <a href="#Page_47">47</a>, <a href="#Page_52">52</a>, <a href="#Page_235">235</a></li>

<li class="ifrst">National Advisory Committee for Aeronautics, <a href="#Page_128">128</a>, <a href="#Page_132">132</a></li>
<li class="isub1">Naval Proving Ground, <a href="#Page_177">177</a></li>
<li class="isub1">negation, <a href="#Page_24">24-5</a>, <a href="#Page_27">27</a>, <a href="#Page_34">34-6</a></li>
<li class="isub1">negation circuit, <a href="#Page_36">36</a></li>
<li class="isub1">negative, <a href="#Page_147">147</a></li>
<li class="isub1">negative digit, <a href="#Page_215">215</a></li>
<li class="isub1">neon bulb, <a href="#Page_119">119</a></li>
<li class="isub1">nerve, <a href="#Page_2">2-4</a></li>
<li class="isub1">nerve cell, <a href="#Page_2">2</a>, <a href="#Page_3">3</a>, <a href="#Page_16">16</a></li>
<li class="isub1">nerve fiber, <a href="#Page_2">2</a>, <a href="#Page_3">3</a></li>
<li class="isub1">nerve networks, <a href="#Page_230">230</a></li>
<li class="isub1">nervous system, <a href="#Page_188">188</a></li>
<li class="isub1">network analyzers, <a href="#Page_242">242-4</a></li>
<li class="isub1">neurosis, <a href="#Page_191">191</a></li>
<li class="isub1">nine-pulses, <a href="#Page_120">120-1</a></li>
<li class="isub1">nines complement, <a href="#Page_95">95</a>, <a href="#Page_121">121</a>, <a href="#Page_223">223</a></li>
<li class="isub1">No X, <a href="#Page_59">59</a></li>
<li class="isub1">Northrop Aircraft, Inc., <a href="#Page_179">179</a></li>
<li class="isub1">not, <a href="#Page_146">146-8</a></li>
<li class="isub1">numeric coding, <a href="#Page_13">13</a>, <a href="#Page_54">54</a></li>
<li class="isub1">numerical X position, <a href="#Page_45">45</a></li>
<li class="isub1">numerical Y position, <a href="#Page_45">45</a></li>

<li class="ifrst">occupation code, <a href="#Page_54">54</a></li>
<li class="isub1">octal notation, <a href="#Page_179">179</a>, <a href="#Page_219">219</a></li>
<li class="isub1">ohm, <a href="#Page_117">117</a></li>
<li class="isub1">Ojibwa, <a href="#Page_12">12</a></li>
<li class="isub1">ones complement, <a href="#Page_217">217</a></li>
<li class="isub1">only, <a href="#Page_146">146-7</a></li>
<li class="isub1">operation code, <a href="#Page_103">103</a></li>
<li class="isub1">operations with numbers, <a href="#Page_24">24-7</a></li>
<li class="isub1">or, <a href="#Page_146">146-9</a></li>
<li class="isub1">organization of digital machines, <a href="#Page_251">251</a></li>
<li class="isub1">out-code, <a href="#Page_99">99</a></li>
<li class="isub1">out-field, <a href="#Page_99">99</a></li>
<li class="isub1">output, <a href="#Page_6">6</a>, <a href="#Page_90">90-1</a>, <a href="#Page_251">251-2</a></li>
<li class="isub1">output devices, <a href="#Page_176">176</a>, <a href="#Page_251">251-2</a></li>
<li class="isub1">output register, <a href="#Page_27">27</a></li>

<li class="ifrst">paper channel, <a href="#Page_52">52</a></li>
<li class="isub1">partial differential equations, <a href="#Page_87">87</a></li>
<li class="isub1">partial products, <a href="#Page_115">115</a>, <a href="#Page_214">214</a></li>
<li class="isub1">Pearl Assurance Company, <a href="#Page_88">88</a></li>
<li class="isub1">pebbles, <a href="#Page_17">17-8</a></li>
<li class="isub1">pen with a motor, <a href="#Page_180">180</a>, <a href="#Page_195">195</a></li>
<li class="isub1">permanent table frames, <a href="#Page_138">138-9</a></li>
<li class="isub1">personal income tax, <a href="#Page_141">141</a></li>
<li class="isub1">phonetic writing, <a href="#Page_13">13</a></li>
<li class="isub1">phonograph, <a href="#Page_15">15-6</a></li>
<li class="isub1">phonographic writing, <a href="#Page_13">13</a></li>
<li class="isub1">phototube, <a href="#Page_81">81-2</a>, <a href="#Page_183">183-4</a></li>
<li class="isub1">physical equipment for handling information, <a href="#Page_11">11</a>,
                    <a href="#Page_15">15-21</a>, <a href="#Page_91">91</a></li>
<li class="isub1">physical problems, <a href="#Page_69">69-72</a></li>
<li class="isub1">physical quantities, <a href="#Page_67">67-9</a></li>
<li class="isub1">pictographic writing, <a href="#Page_12">12</a></li>
<li class="isub1">plugboard, <a href="#Page_46">46</a>, <a href="#Page_98">98</a></li>
<li class="isub1">plug-in units, <a href="#Page_117">117-8</a></li>
<li class="isub1">point of view, <a href="#Page_207">207</a></li>
<li class="isub1">pooh-pooh theory, <a href="#Page_12">12</a></li>
<li class="isub1">position (in a punch card), <a href="#Page_45">45</a></li>
<li class="isub1">position frames, <a href="#Page_138">138-9</a></li>
<li class="isub1">power, <a href="#Page_43">43</a>, <a href="#Page_65">65</a>, <a href="#Page_133">133</a>,
                      <a href="#Page_216">216</a>, <a href="#Page_224">224</a></li>
<li class="isub1">prejudice, <a href="#Page_205">205</a></li>
<li class="isub1">Previous (input of comparer), <a href="#Page_57">57</a></li>
<li class="isub1">Primary (input of sequencer), <a href="#Page_61">61-2</a></li>
<li class="isub1">Primary Brushes, <a href="#Page_51">51</a>, <a href="#Page_62">62</a></li>
<li class="isub1">Primary Feed, <a href="#Page_51">51</a>, <a href="#Page_61">61</a></li>
<li class="isub1">Primary Sequence Brushes, <a href="#Page_51">51</a></li>
<li class="isub1">printer, <a href="#Page_137">137</a></li>
<li class="isub1">printer frames, <a href="#Page_138">138</a></li>
<li class="isub1">problem frames, <a href="#Page_138">138</a></li>
<li class="isub1">problem position, <a href="#Page_132">132</a>, <a href="#Page_135">135</a></li>
<li class="isub1">problem tape, <a href="#Page_134">134</a></li>
<li class="isub1">processor, <a href="#Page_132">132</a>, <a href="#Page_134">134</a>, <a href="#Page_175">175</a></li>
<li class="isub1">product, <a href="#Page_70">70</a>, <a href="#Page_102">102</a>, <a href="#Page_223">223</a></li>
<li class="isub1">product counter, <a href="#Page_102">102</a></li>
<li class="isub1">production scheduling, <a href="#Page_193">193</a></li>
<li class="isub1">program, <a href="#Page_122">122</a>, <a href="#Page_173">173</a>, <a href="#Page_252">252-3</a></li>
<li class="isub1">program-control switch, <a href="#Page_123">123</a>
    <span class="pagenum" id="Page_268">[Pg 268]</span></li>
<li class="isub1">program pulse, <a href="#Page_122">122</a></li>
<li class="isub1">program-pulse input terminal, <a href="#Page_123">123</a></li>
<li class="isub1">program register, <a href="#Page_38">38</a></li>
<li class="isub1">program tape, <a href="#Page_28">28-9</a></li>
<li class="isub1">program trays, <a href="#Page_119">119</a></li>
<li class="isub1">program trunk lines, <a href="#Page_119">119</a></li>
<li class="isub1">programming method of von Neumann, <a href="#Page_124">124</a></li>
<li class="isub1">pronoun, <a href="#Page_223">223</a></li>
<li class="isub1">psychological testing, <a href="#Page_190">190</a></li>
<li class="isub1">psychological trainer, <a href="#Page_191">191-2</a></li>
<li class="isub1">pulses, <a href="#Page_120">120</a>, <a href="#Page_171">171</a></li>
<li class="isub1">punch card, <a href="#Page_17">17</a>, <a href="#Page_44">44-5</a>,
               <a href="#Page_95">95</a>, <a href="#Page_97">97</a></li>
<li class="isub1">punch-card column, <a href="#Page_45">45</a></li>
<li class="isub1">punch-card machinery, <a href="#Page_17">17</a>, <a href="#Page_20">20</a>,
                     <a href="#Page_42">42-64</a>, <a href="#Page_232">232-9</a>;</li>
<li class="isub3">cost, <a href="#Page_63">63</a>;</li>
<li class="isub3">reliability, <a href="#Page_63">63-4</a>;</li>
<li class="isub3">speed, <a href="#Page_62">62-3</a></li>
<li class="isub1">punch feed, <a href="#Page_51">51-2</a></li>
<li class="isub1">punched paper tape, <a href="#Page_17">17</a>, <a href="#Page_23">23</a>,
                 <a href="#Page_82">82</a>, <a href="#Page_95">95</a></li>
<li class="isub1">punching channel, <a href="#Page_50">50</a></li>
<li class="isub1">punching dies, <a href="#Page_48">48</a>, <a href="#Page_51">51-2</a></li>
<li class="isub1">pyramid circuit, <a href="#Page_39">39</a></li>

<li class="ifrst">quantity of information, <a href="#Page_11">11</a>, <a href="#Page_14">14-15</a></li>
<li class="isub1">quartz, <a href="#Page_171">171</a></li>
<li class="isub1">quotient, <a href="#Page_98">98</a>, <a href="#Page_103">103</a></li>

<li class="ifrst"><i>R.U.R.</i>, <a href="#Page_199">199</a></li>
<li class="isub1">radar, <a href="#Page_183">183</a></li>
<li class="isub1">railroad line, <a href="#Page_6">6</a>, <a href="#Page_119">119</a></li>
<li class="isub1">rapid approximation, <a href="#Page_106">106-8</a>, <a href="#Page_220">220-1</a></li>
<li class="isub1">rate of change, <a href="#Page_68">68</a>, <a href="#Page_70">70-1</a></li>
<li class="isub1">ratio, <a href="#Page_77">77</a>, <a href="#Page_83">83</a></li>
<li class="isub1">Raytheon Computer, <a href="#Page_250">250</a></li>
<li class="isub1">reading, <a href="#Page_57">57</a></li>
<li class="isub1">reading brushes, <a href="#Page_51">51-2</a></li>
<li class="isub1">reading channel, <a href="#Page_50">50</a></li>
<li class="isub1">reading of punch cards, <a href="#Page_44">44</a></li>
<li class="isub1">reasoning, <a href="#Page_144">144</a></li>
<li class="isub1">rebus-writing, <a href="#Page_13">13</a></li>
<li class="isub1">reciprocal, <a href="#Page_85">85</a>, <a href="#Page_224">224</a></li>
<li class="isub1">recognizing, <a href="#Page_8">8</a>, <a href="#Page_182">182-5</a></li>
<li class="isub1">recorder, <a href="#Page_132">132</a>, <a href="#Page_137">137</a></li>
<li class="isub1">rectifier, <a href="#Page_32">32</a></li>
<li class="isub1">referent, <a href="#Page_12">12</a></li>
<li class="isub1">register, <a href="#Page_27">27</a></li>
<li class="isub1">reject, <a href="#Page_49">49</a></li>
<li class="isub1">relay, <a href="#Page_17">17</a>, <a href="#Page_20">20-1</a>,
                         <a href="#Page_23">23</a>, <a href="#Page_92">92</a>,
                         <a href="#Page_129">129</a>, <a href="#Page_133">133</a>,
                         <a href="#Page_178">178</a>;</li>
<li class="isub3">Common, <a href="#Page_21">21</a>;</li>
<li class="isub3">Ground, <a href="#Page_21">21</a>;</li>
<li class="isub3">Normally Closed, <a href="#Page_21">21</a>;</li>
<li class="isub3">Normally Open, <a href="#Page_21">21</a>;</li>
<li class="isub3">Pickup, <a href="#Page_21">21</a></li>
<li class="isub1">release key, <a href="#Page_48">48</a></li>
<li class="isub1">reliability, <a href="#Page_63">63-4</a>, <a href="#Page_110">110</a>,
             <a href="#Page_126">126</a>, <a href="#Page_128">128</a>,
             <a href="#Page_141">141-2</a>, <a href="#Page_166">166</a>,
             <a href="#Page_168">168</a>, <a href="#Page_174">174</a></li>
<li class="isub1">Remington-Rand, <a href="#Page_43">43</a></li>
<li class="isub1">reperforator, <a href="#Page_137">137</a></li>
<li class="isub1">rephrasing, <a href="#Page_163">163-4</a></li>
<li class="isub1">reproducer, <a href="#Page_47">47</a>, <a href="#Page_49">49-50</a>,
                              <a href="#Page_235">235</a></li>
<li class="isub1">reproducing, <a href="#Page_49">49</a></li>
<li class="isub1">reset code, <a href="#Page_100">100</a></li>
<li class="isub1">resetting, <a href="#Page_100">100</a></li>
<li class="isub1">resistance, <a href="#Page_80">80</a>, <a href="#Page_117">117</a></li>
<li class="isub1">resistance coefficient, <a href="#Page_80">80</a></li>
<li class="isub1">resistor, <a href="#Page_117">117</a></li>
<li class="isub1">right-hand components, <a href="#Page_56">56</a>, <a href="#Page_121">121</a>, <a href="#Page_215">215</a></li>
<li class="isub1">robot machine, <a href="#Page_197">197</a>, <a href="#Page_198">198-208</a>, <a href="#Page_255">255</a></li>
<li class="isub1">robot salesman, <a href="#Page_201">201</a></li>
<li class="isub1"><i>robota</i> (Czech), <a href="#Page_199">199</a></li>
<li class="isub1">Roman numerals, <a href="#Page_212">212</a>;</li>
<li class="isub3">ancient style, <a href="#Page_219">219</a></li>
<li class="isub1">room, <a href="#Page_70">70</a></li>
<li class="isub1">Rossum’s Universal Robots, <a href="#Page_199">199</a></li>
<li class="isub1">rounding off, <a href="#Page_55">55-6</a></li>
<li class="isub1">routine, <a href="#Page_8">8</a>, <a href="#Page_167">167</a>, <a href="#Page_173">173</a></li>
<li class="isub1">routine frames, <a href="#Page_138">138-9</a></li>
<li class="isub1">routine tape, <a href="#Page_28">28</a>, <a href="#Page_134">134</a></li>
<li class="isub1">rules, <a href="#Page_191">191</a>, <a href="#Page_224">224</a></li>

<li class="ifrst">satisfy, <a href="#Page_225">225</a></li>
<li class="isub1">scale factor, <a href="#Page_74">74</a>, <a href="#Page_86">86</a></li>
<li class="isub1">schemes for expressing meanings, <a href="#Page_11">11-15</a></li>
<li class="isub1">screen, <a href="#Page_172">172</a></li>
<li class="isub1">screw, <a href="#Page_78">78</a></li>
<li class="isub1">Secondary (input of sequencer), <a href="#Page_61">61-2</a></li>
<li class="isub1">Secondary Brushes, <a href="#Page_51">51</a>, <a href="#Page_62">62</a></li>
<li class="isub1">Secondary Feed, <a href="#Page_61">61</a></li>
<li class="isub1">Select-Receiving-Register circuit, <a href="#Page_39">39</a></li>
<li class="isub1">selecting, <a href="#Page_26">26</a>, <a href="#Page_58">58</a>, <a href="#Page_104">104</a></li>
<li class="isub1">selection, <a href="#Page_26">26-7</a>, <a href="#Page_38">38</a>, <a href="#Page_222">222</a></li>
<li class="isub1">selection circuit, <a href="#Page_38">38</a></li>
<li class="isub1">selection counter, <a href="#Page_104">104</a>
    <span class="pagenum" id="Page_269">[Pg 269]</span></li>
<li class="isub1">selector, <a href="#Page_58">58-60</a></li>
<li class="isub1">sensing digits, <a href="#Page_108">108</a></li>
<li class="isub1">separation sign, <a href="#Page_129">129</a></li>
<li class="isub1">sequence-control tape, <a href="#Page_98">98</a></li>
<li class="isub1">sequence-control-tape code, <a href="#Page_98">98</a></li>
<li class="isub1">sequence-controlled, <a href="#Page_89">89</a></li>
<li class="isub1">sequence-tape feed, <a href="#Page_98">98</a></li>
<li class="isub1">sequencer, <a href="#Page_61">61</a></li>
<li class="isub1">sequencing, <a href="#Page_61">61</a></li>
<li class="isub1">shifting, <a href="#Page_217">217</a></li>
<li class="isub1">short-cut multiplication, <a href="#Page_215">215-6</a></li>
<li class="isub1">Simon, <a href="#Page_22">22-40</a></li>
<li class="isub1">simultaneous, <a href="#Page_225">225</a></li>
<li class="isub1">simultaneous equations, <a href="#Page_85">85</a>, <a href="#Page_225">225</a></li>
<li class="isub1">sine, <a href="#Page_75">75</a>, <a href="#Page_85">85</a>, <a href="#Page_106">106</a>, <a href="#Page_139">139</a>, <a href="#Page_226">226</a></li>
<li class="isub1">sink (of a circuit), <a href="#Page_154">154</a></li>
<li class="isub1">slab, <a href="#Page_18">18</a></li>
<li class="isub1">slide rule, <a href="#Page_65">65</a>, <a href="#Page_67">67</a></li>
<li class="isub1">smoothness, <a href="#Page_110">110</a>, <a href="#Page_227">227</a></li>
<li class="isub1">social control, types, <a href="#Page_203">203</a></li>
<li class="isub1">sorter, <a href="#Page_47">47-9</a></li>
<li class="isub1">sorting, <a href="#Page_57">57</a>, <a href="#Page_173">173</a></li>
<li class="isub1">soundtracks, <a href="#Page_16">16</a>, <a href="#Page_18">18</a></li>
<li class="isub1">source (of a circuit), <a href="#Page_154">154</a></li>
<li class="isub1">space key, <a href="#Page_48">48</a></li>
<li class="isub1">speedometer, <a href="#Page_68">68</a></li>
<li class="isub1">spelling rules, <a href="#Page_185">185</a></li>
<li class="isub1">spoken English, <a href="#Page_11">11</a></li>
<li class="isub1">square, <a href="#Page_224">224</a></li>
<li class="isub1">square matrix, <a href="#Page_227">227</a></li>
<li class="isub1">square root, <a href="#Page_116">116-7</a>, <a href="#Page_173">173</a>,
                    <a href="#Page_220">220</a>, <a href="#Page_224">224</a></li>
<li class="isub1">Start Key, <a href="#Page_98">98</a></li>
<li class="isub1">statements, <a href="#Page_26">26</a>, <a href="#Page_144">144-51</a></li>
<li class="isub1">static electricity, <a href="#Page_63">63</a></li>
<li class="isub1">storage, <a href="#Page_6">6</a></li>
<li class="isub1">storage counter, <a href="#Page_93">93</a></li>
<li class="isub1">storage devices, <a href="#Page_252">252</a></li>
<li class="isub1">storage register, <a href="#Page_28">28</a>, <a href="#Page_93">93</a></li>
<li class="isub1">storing information, <a href="#Page_15">15</a></li>
<li class="isub1">storing register frames, <a href="#Page_138">138</a></li>
<li class="isub1">storing registers, <a href="#Page_139">139</a></li>
<li class="isub1">string, <a href="#Page_65">65-6</a></li>
<li class="isub1">stylus, <a href="#Page_16">16</a></li>
<li class="isub1">subroutine, <a href="#Page_106">106</a></li>
<li class="isub1">Subsidiary Sequence Mechanism, <a href="#Page_90">90</a>, <a href="#Page_106">106</a></li>
<li class="isub1">subtract output, <a href="#Page_120">120</a></li>
<li class="isub1">subtracting, <a href="#Page_55">55</a>, <a href="#Page_100">100</a>, <a href="#Page_119">119</a>,
             <a href="#Page_139">139</a>, <a href="#Page_223">223</a></li>
<li class="isub1">subtracting by adding, <a href="#Page_223">223</a></li>
<li class="isub1">summary punch, <a href="#Page_50">50</a>, <a href="#Page_116">116</a>, <a href="#Page_119">119</a></li>
<li class="isub1">summary-punching, <a href="#Page_50">50</a></li>
<li class="isub1">switch open and current flowing, <a href="#Page_154">154</a></li>
<li class="isub1">switchboard, <a href="#Page_76">76</a></li>
<li class="isub1">switches in parallel, <a href="#Page_154">154</a></li>
<li class="isub1">switches in series, <a href="#Page_154">154</a></li>
<li class="isub1">switching circuits, <a href="#Page_155">155</a></li>
<li class="isub1">syllable-writing, <a href="#Page_13">13</a></li>
<li class="isub1">syllables, <a href="#Page_211">211</a></li>
<li class="isub1">syllogism, <a href="#Page_146">146</a>, <a href="#Page_152">152</a></li>
<li class="isub1">symbolic logic, <a href="#Page_221">221-3</a>, <a href="#Page_248">248</a>;</li>
<li class="isub3"><i>see also</i> mathematical logic</li>
<li class="isub1">symbolic writing, <a href="#Page_12">12</a></li>
<li class="isub1">synapse, <a href="#Page_3">3</a></li>
<li class="isub1">System of Electric Remote-Control Accounting, <a href="#Page_250">250</a></li>
<li class="isub1">systems for handling information, <a href="#Page_10">10</a></li>

<li class="ifrst">table tape, <a href="#Page_134">134</a></li>
<li class="isub1">tables (of values), <a href="#Page_103">103</a>, <a href="#Page_136">136</a>, <a href="#Page_224">224</a></li>
<li class="isub1">tabular value, <a href="#Page_136">136</a>, <a href="#Page_224">224</a></li>
<li class="isub1">tabulator, <a href="#Page_47">47</a>, <a href="#Page_52">52</a>, <a href="#Page_119">119</a>, <a href="#Page_235">235</a></li>
<li class="isub1">tallies, <a href="#Page_17">17</a></li>
<li class="isub1">tangent, <a href="#Page_105">105</a>, <a href="#Page_226">226</a></li>
<li class="isub1">tank (armored), <a href="#Page_180">180</a>, <a href="#Page_195">195</a></li>
<li class="isub1">tank (mercury tank), <a href="#Page_171">171</a>, <a href="#Page_179">179</a></li>
<li class="isub1">tape-controlled carriage, <a href="#Page_236">236</a></li>
<li class="isub1">tape feed, <a href="#Page_91">91</a>, <a href="#Page_178">178-9</a></li>
<li class="isub1">tape punch, <a href="#Page_91">91</a>, <a href="#Page_97">97-8</a>,
                              <a href="#Page_137">137</a></li>
<li class="isub1">tape reels, <a href="#Page_170">170</a></li>
<li class="isub1">tape transmitter, <a href="#Page_135">135</a>, <a href="#Page_137">137</a></li>
<li class="isub1">telegraph line, <a href="#Page_6">6</a>, <a href="#Page_119">119</a></li>
<li class="isub1">telephone central station, <a href="#Page_138">138</a></li>
<li class="isub1">teletype, <a href="#Page_17">17</a></li>
<li class="isub1">teletype transmitter, <a href="#Page_133">133</a>, <a href="#Page_135">135</a></li>
<li class="isub1">teletypewriter, <a href="#Page_130">130</a>, <a href="#Page_137">137</a></li>
<li class="isub1">ten-position relay, <a href="#Page_91">91-3</a></li>
<li class="isub1">ten-position switch, <a href="#Page_91">91-2</a></li>
<li class="isub1">ten-pulses, <a href="#Page_120">120-1</a></li>
<li class="isub1">tens complement, <a href="#Page_224">224</a></li>
<li class="isub1">test scoring machine, <a href="#Page_236">236</a></li>
<li class="isub1">then, <a href="#Page_146">146-7</a></li>
<li class="isub1">thermostat, <a href="#Page_187">187</a>
    <span class="pagenum" id="Page_270">[Pg 270]</span></li>
<li class="isub1">thinking, <a href="#Page_1">1-5</a>, <a href="#Page_10">10</a>, <a href="#Page_97">97</a></li>
<li class="isub1">timed electrical currents, <a href="#Page_44">44</a></li>
<li class="isub1">timing contact, <a href="#Page_94">94</a></li>
<li class="isub1">tolerances, <a href="#Page_67">67</a>, <a href="#Page_105">105</a></li>
<li class="isub1">torque, <a href="#Page_73">73</a>, <a href="#Page_86">86</a></li>
<li class="isub1">torque amplifier, <a href="#Page_73">73</a></li>
<li class="isub1">trajectories, <a href="#Page_69">69</a>, <a href="#Page_114">114</a>, <a href="#Page_141">141</a></li>
<li class="isub1">transfer circuit, <a href="#Page_33">33</a></li>
<li class="isub1">transferring, <a href="#Page_31">31</a>, <a href="#Page_34">34</a>, <a href="#Page_100">100</a>, <a href="#Page_119">119</a>, <a href="#Page_167">167</a></li>
<li class="isub1">translating, <a href="#Page_57">57</a></li>
<li class="isub1">transmitter, <a href="#Page_74">74</a></li>
<li class="isub1">triggering control, <a href="#Page_183">183</a>, <a href="#Page_186">186-7</a></li>
<li class="isub1">trigonometric tables, <a href="#Page_226">226</a></li>
<li class="isub1">trigonometric tangent, <a href="#Page_105">105</a>, <a href="#Page_226">226</a></li>
<li class="isub1">truth, <a href="#Page_144">144</a></li>
<li class="isub1">truth table, <a href="#Page_147">147</a>, <a href="#Page_155">155</a>, <a href="#Page_222">222</a></li>
<li class="isub1">truth value, <a href="#Page_26">26</a>, <a href="#Page_58">58</a>, <a href="#Page_105">105</a>, <a href="#Page_147">147</a>, <a href="#Page_222">222</a></li>
<li class="isub1">tuning, <a href="#Page_183">183</a></li>
<li class="isub1">turning force, <a href="#Page_72">72</a></li>
<li class="isub1">12 position, <a href="#Page_45">45</a></li>
<li class="isub1">two-position relay, <a href="#Page_21">21</a>, <a href="#Page_91">91-2</a>;</li>
<li class="isub3"><i>see also</i> relay</li>
<li class="isub1">two-position switch, <a href="#Page_91">91-2</a></li>
<li class="isub1">typewriter, <a href="#Page_16">16</a>, <a href="#Page_18">18</a></li>
<li class="isub1">typewriter carriage, <a href="#Page_53">53</a></li>

<li class="ifrst">unattended operation, <a href="#Page_174">174</a></li>
<li class="isub1">understanding, <a href="#Page_212">212-3</a>, <a href="#Page_231">231</a></li>
<li class="isub1">unemployment, <a href="#Page_201">201-2</a></li>
<li class="isub1">Unequal (output of comparer), <a href="#Page_57">57</a></li>
<li class="isub1">unit of information, <a href="#Page_11">11</a>, <a href="#Page_14">14-5</a>,
                         <a href="#Page_169">169</a></li>
<li class="isub1">United Nations, <a href="#Page_203">203</a>, <a href="#Page_208">208</a></li>
<li class="isub1">United States Army Ordnance Department, <a href="#Page_113">113-4</a></li>
<li class="isub1">Univac, <a href="#Page_250">250</a></li>
<li class="isub1">University of Pennsylvania, <a href="#Page_7">7</a>, <a href="#Page_113">113</a></li>
<li class="isub1">unknowns, <a href="#Page_141">141</a></li>
<li class="isub1">Upper Brushes, <a href="#Page_52">52</a></li>

<li class="ifrst">value tape code, <a href="#Page_96">96</a></li>
<li class="isub1">value tape feed, <a href="#Page_95">95-6</a></li>
<li class="isub1">variables, <a href="#Page_84">84</a>, <a href="#Page_223">223</a></li>
<li class="isub1"><i>vel</i> (Latin), <a href="#Page_149">149</a></li>
<li class="isub1">verifier, <a href="#Page_47">47-8</a>, <a href="#Page_235">235</a></li>
<li class="isub1">vibration, <a href="#Page_69">69</a></li>
<li class="isub1">Vocoder, <a href="#Page_255">255</a></li>
<li class="isub1">Voder, <a href="#Page_254">254</a></li>
<li class="isub1">voltage, <a href="#Page_74">74</a></li>

<li class="ifrst">Watson Scientific Computing Laboratory, <a href="#Page_239">239</a></li>
<li class="isub1">weather control, <a href="#Page_189">189</a>, <a href="#Page_255">255</a></li>
<li class="isub1">weather forecasting, <a href="#Page_189">189</a>, <a href="#Page_255">255</a></li>
<li class="isub1">wheel (of a counter), <a href="#Page_78">78</a></li>
<li class="isub1">white elephant, <a href="#Page_73">73</a>, <a href="#Page_114">114</a></li>
<li class="isub1">winch, <a href="#Page_73">73</a></li>
<li class="isub1">words for explaining, <a href="#Page_209">209-12</a></li>

<li class="ifrst">X, <a href="#Page_59">59</a></li>
<li class="isub1">X distributor, <a href="#Page_59">59</a></li>
<li class="isub1">X Pickup, <a href="#Page_59">59</a></li>
<li class="isub1">X punch, <a href="#Page_45">45</a>, <a href="#Page_58">58</a></li>
<li class="isub1">X selector, <a href="#Page_59">59</a></li>

<li class="ifrst">zero, <a href="#Page_133">133</a>, <a href="#Page_212">212</a></li>
<li class="isub1"><i>zh</i> (sound), <a href="#Page_13">13</a>, <a href="#Page_185">185</a></li>
<li class="isub1">Zuse Computer, <a href="#Page_250">250</a></li>
</ul>

<hr class="chap x-ebookmaker-drop" />

<div class="footnotes">
<p class="f150"><b>Footnotes:</b></p>

<div class="footnote"><p class="no-indent">
<a id="Footnote_1" href="#FNanchor_1" class="label">[1]</a>
Copyright 1923 by Doubleday, Page and Co.; all rights reserved;
quotations reprinted by permission of Karel Čapek and Samuel French.</p>
</div>

<div class="footnote"><p class="no-indent">
<a id="Footnote_2" href="#FNanchor_2" class="label">[2]</a>
The preceding word is the spoken word, not the written one.</p>
</div>

<div class="footnote"><p class="no-indent">
<a id="Footnote_3" href="#FNanchor_3" class="label">[3]</a>
The preceding word is the spoken word, not the written one.</p>
</div>

<div class="footnote"><p class="no-indent">
<a id="Footnote_4" href="#FNanchor_4" class="label">[4]</a>
The preceding word is the spoken word, not the written one.</p>
</div>

<div class="footnote"><p class="no-indent">
<a id="Footnote_5" href="#FNanchor_5" class="label">[5]</a>
The preceding word is the spoken word, not the written one.</p>
</div></div>

<div class="transnote bbox space-above2">
<p class="f120 space-above1">Transcriber’s Notes:</p>
<hr class="r5" />
<p class="indent">The illustrations have been moved so that they do not break up
                  paragraphs and so that they are next to the text they illustrate.</p>
<p class="indent">Typographical and punctuation errors have been silently corrected.</p>
</div>

<div style='display:block; margin-top:4em'>*** END OF THE PROJECT GUTENBERG EBOOK GIANT BRAINS; OR MACHINES THAT THINK ***</div>
<div style='text-align:left'>

<div style='display:block; margin:1em 0'>
Updated editions will replace the previous one&#8212;the old editions will
be renamed.
</div>

<div style='display:block; margin:1em 0'>
Creating the works from print editions not protected by U.S. copyright
law means that no one owns a United States copyright in these works,
so the Foundation (and you!) can copy and distribute it in the United
States without permission and without paying copyright
royalties. Special rules, set forth in the General Terms of Use part
of this license, apply to copying and distributing Project
Gutenberg&#8482; electronic works to protect the PROJECT GUTENBERG&#8482;
concept and trademark. Project Gutenberg is a registered trademark,
and may not be used if you charge for an eBook, except by following
the terms of the trademark license, including paying royalties for use
of the Project Gutenberg trademark. If you do not charge anything for
copies of this eBook, complying with the trademark license is very
easy. You may use this eBook for nearly any purpose such as creation
of derivative works, reports, performances and research. Project
Gutenberg eBooks may be modified and printed and given away&#8212;you may
do practically ANYTHING in the United States with eBooks not protected
by U.S. copyright law. Redistribution is subject to the trademark
license, especially commercial redistribution.
</div>

<div style='margin-top:1em; font-size:1.1em; text-align:center'>START: FULL LICENSE</div>
<div style='text-align:center;font-size:0.9em'>THE FULL PROJECT GUTENBERG LICENSE</div>
<div style='text-align:center;font-size:0.9em'>PLEASE READ THIS BEFORE YOU DISTRIBUTE OR USE THIS WORK</div>

<div style='display:block; margin:1em 0'>
To protect the Project Gutenberg&#8482; mission of promoting the free
distribution of electronic works, by using or distributing this work
(or any other work associated in any way with the phrase &#8220;Project
Gutenberg&#8221;), you agree to comply with all the terms of the Full
Project Gutenberg&#8482; License available with this file or online at
www.gutenberg.org/license.
</div>

<div style='display:block; font-size:1.1em; margin:1em 0; font-weight:bold'>
Section 1. General Terms of Use and Redistributing Project Gutenberg&#8482; electronic works
</div>

<div style='display:block; margin:1em 0'>
1.A. By reading or using any part of this Project Gutenberg&#8482;
electronic work, you indicate that you have read, understand, agree to
and accept all the terms of this license and intellectual property
(trademark/copyright) agreement. If you do not agree to abide by all
the terms of this agreement, you must cease using and return or
destroy all copies of Project Gutenberg&#8482; electronic works in your
possession. If you paid a fee for obtaining a copy of or access to a
Project Gutenberg&#8482; electronic work and you do not agree to be bound
by the terms of this agreement, you may obtain a refund from the person
or entity to whom you paid the fee as set forth in paragraph 1.E.8.
</div>

<div style='display:block; margin:1em 0'>
1.B. &#8220;Project Gutenberg&#8221; is a registered trademark. It may only be
used on or associated in any way with an electronic work by people who
agree to be bound by the terms of this agreement. There are a few
things that you can do with most Project Gutenberg&#8482; electronic works
even without complying with the full terms of this agreement. See
paragraph 1.C below. There are a lot of things you can do with Project
Gutenberg&#8482; electronic works if you follow the terms of this
agreement and help preserve free future access to Project Gutenberg&#8482;
electronic works. See paragraph 1.E below.
</div>

<div style='display:block; margin:1em 0'>
1.C. The Project Gutenberg Literary Archive Foundation (&#8220;the
Foundation&#8221; or PGLAF), owns a compilation copyright in the collection
of Project Gutenberg&#8482; electronic works. Nearly all the individual
works in the collection are in the public domain in the United
States. If an individual work is unprotected by copyright law in the
United States and you are located in the United States, we do not
claim a right to prevent you from copying, distributing, performing,
displaying or creating derivative works based on the work as long as
all references to Project Gutenberg are removed. Of course, we hope
that you will support the Project Gutenberg&#8482; mission of promoting
free access to electronic works by freely sharing Project Gutenberg&#8482;
works in compliance with the terms of this agreement for keeping the
Project Gutenberg&#8482; name associated with the work. You can easily
comply with the terms of this agreement by keeping this work in the
same format with its attached full Project Gutenberg&#8482; License when
you share it without charge with others.
</div>

<div style='display:block; margin:1em 0'>
1.D. The copyright laws of the place where you are located also govern
what you can do with this work. Copyright laws in most countries are
in a constant state of change. If you are outside the United States,
check the laws of your country in addition to the terms of this
agreement before downloading, copying, displaying, performing,
distributing or creating derivative works based on this work or any
other Project Gutenberg&#8482; work. The Foundation makes no
representations concerning the copyright status of any work in any
country other than the United States.
</div>

<div style='display:block; margin:1em 0'>
1.E. Unless you have removed all references to Project Gutenberg:
</div>

<div style='display:block; margin:1em 0'>
1.E.1. The following sentence, with active links to, or other
immediate access to, the full Project Gutenberg&#8482; License must appear
prominently whenever any copy of a Project Gutenberg&#8482; work (any work
on which the phrase &#8220;Project Gutenberg&#8221; appears, or with which the
phrase &#8220;Project Gutenberg&#8221; is associated) is accessed, displayed,
performed, viewed, copied or distributed:
</div>

<blockquote>
  <div style='display:block; margin:1em 0'>
    This eBook is for the use of anyone anywhere in the United States and most
    other parts of the world at no cost and with almost no restrictions
    whatsoever. You may copy it, give it away or re-use it under the terms
    of the Project Gutenberg License included with this eBook or online
    at <a href="https://www.gutenberg.org">www.gutenberg.org</a>. If you
    are not located in the United States, you will have to check the laws
    of the country where you are located before using this eBook.
  </div>
</blockquote>

<div style='display:block; margin:1em 0'>
1.E.2. If an individual Project Gutenberg&#8482; electronic work is
derived from texts not protected by U.S. copyright law (does not
contain a notice indicating that it is posted with permission of the
copyright holder), the work can be copied and distributed to anyone in
the United States without paying any fees or charges. If you are
redistributing or providing access to a work with the phrase &#8220;Project
Gutenberg&#8221; associated with or appearing on the work, you must comply
either with the requirements of paragraphs 1.E.1 through 1.E.7 or
obtain permission for the use of the work and the Project Gutenberg&#8482;
trademark as set forth in paragraphs 1.E.8 or 1.E.9.
</div>

<div style='display:block; margin:1em 0'>
1.E.3. If an individual Project Gutenberg&#8482; electronic work is posted
with the permission of the copyright holder, your use and distribution
must comply with both paragraphs 1.E.1 through 1.E.7 and any
additional terms imposed by the copyright holder. Additional terms
will be linked to the Project Gutenberg&#8482; License for all works
posted with the permission of the copyright holder found at the
beginning of this work.
</div>

<div style='display:block; margin:1em 0'>
1.E.4. Do not unlink or detach or remove the full Project Gutenberg&#8482;
License terms from this work, or any files containing a part of this
work or any other work associated with Project Gutenberg&#8482;.
</div>

<div style='display:block; margin:1em 0'>
1.E.5. Do not copy, display, perform, distribute or redistribute this
electronic work, or any part of this electronic work, without
prominently displaying the sentence set forth in paragraph 1.E.1 with
active links or immediate access to the full terms of the Project
Gutenberg&#8482; License.
</div>

<div style='display:block; margin:1em 0'>
1.E.6. You may convert to and distribute this work in any binary,
compressed, marked up, nonproprietary or proprietary form, including
any word processing or hypertext form. However, if you provide access
to or distribute copies of a Project Gutenberg&#8482; work in a format
other than &#8220;Plain Vanilla ASCII&#8221; or other format used in the official
version posted on the official Project Gutenberg&#8482; website
(www.gutenberg.org), you must, at no additional cost, fee or expense
to the user, provide a copy, a means of exporting a copy, or a means
of obtaining a copy upon request, of the work in its original &#8220;Plain
Vanilla ASCII&#8221; or other form. Any alternate format must include the
full Project Gutenberg&#8482; License as specified in paragraph 1.E.1.
</div>

<div style='display:block; margin:1em 0'>
1.E.7. Do not charge a fee for access to, viewing, displaying,
performing, copying or distributing any Project Gutenberg&#8482; works
unless you comply with paragraph 1.E.8 or 1.E.9.
</div>

<div style='display:block; margin:1em 0'>
1.E.8. You may charge a reasonable fee for copies of or providing
access to or distributing Project Gutenberg&#8482; electronic works
provided that:
</div>

<div style='margin-left:0.7em;'>
    <div style='text-indent:-0.7em'>
        &#8226; You pay a royalty fee of 20% of the gross profits you derive from
        the use of Project Gutenberg&#8482; works calculated using the method
        you already use to calculate your applicable taxes. The fee is owed
        to the owner of the Project Gutenberg&#8482; trademark, but he has
        agreed to donate royalties under this paragraph to the Project
        Gutenberg Literary Archive Foundation. Royalty payments must be paid
        within 60 days following each date on which you prepare (or are
        legally required to prepare) your periodic tax returns. Royalty
        payments should be clearly marked as such and sent to the Project
        Gutenberg Literary Archive Foundation at the address specified in
        Section 4, &#8220;Information about donations to the Project Gutenberg
        Literary Archive Foundation.&#8221;
    </div>

    <div style='text-indent:-0.7em'>
        &#8226; You provide a full refund of any money paid by a user who notifies
        you in writing (or by e-mail) within 30 days of receipt that s/he
        does not agree to the terms of the full Project Gutenberg&#8482;
        License. You must require such a user to return or destroy all
        copies of the works possessed in a physical medium and discontinue
        all use of and all access to other copies of Project Gutenberg&#8482;
        works.
    </div>

    <div style='text-indent:-0.7em'>
        &#8226; You provide, in accordance with paragraph 1.F.3, a full refund of
        any money paid for a work or a replacement copy, if a defect in the
        electronic work is discovered and reported to you within 90 days of
        receipt of the work.
    </div>

    <div style='text-indent:-0.7em'>
        &#8226; You comply with all other terms of this agreement for free
        distribution of Project Gutenberg&#8482; works.
    </div>
</div>

<div style='display:block; margin:1em 0'>
1.E.9. If you wish to charge a fee or distribute a Project
Gutenberg&#8482; electronic work or group of works on different terms than
are set forth in this agreement, you must obtain permission in writing
from the Project Gutenberg Literary Archive Foundation, the manager of
the Project Gutenberg&#8482; trademark. Contact the Foundation as set
forth in Section 3 below.
</div>

<div style='display:block; margin:1em 0'>
1.F.
</div>

<div style='display:block; margin:1em 0'>
1.F.1. Project Gutenberg volunteers and employees expend considerable
effort to identify, do copyright research on, transcribe and proofread
works not protected by U.S. copyright law in creating the Project
Gutenberg&#8482; collection. Despite these efforts, Project Gutenberg&#8482;
electronic works, and the medium on which they may be stored, may
contain &#8220;Defects,&#8221; such as, but not limited to, incomplete, inaccurate
or corrupt data, transcription errors, a copyright or other
intellectual property infringement, a defective or damaged disk or
other medium, a computer virus, or computer codes that damage or
cannot be read by your equipment.
</div>

<div style='display:block; margin:1em 0'>
1.F.2. LIMITED WARRANTY, DISCLAIMER OF DAMAGES - Except for the &#8220;Right
of Replacement or Refund&#8221; described in paragraph 1.F.3, the Project
Gutenberg Literary Archive Foundation, the owner of the Project
Gutenberg&#8482; trademark, and any other party distributing a Project
Gutenberg&#8482; electronic work under this agreement, disclaim all
liability to you for damages, costs and expenses, including legal
fees. YOU AGREE THAT YOU HAVE NO REMEDIES FOR NEGLIGENCE, STRICT
LIABILITY, BREACH OF WARRANTY OR BREACH OF CONTRACT EXCEPT THOSE
PROVIDED IN PARAGRAPH 1.F.3. YOU AGREE THAT THE FOUNDATION, THE
TRADEMARK OWNER, AND ANY DISTRIBUTOR UNDER THIS AGREEMENT WILL NOT BE
LIABLE TO YOU FOR ACTUAL, DIRECT, INDIRECT, CONSEQUENTIAL, PUNITIVE OR
INCIDENTAL DAMAGES EVEN IF YOU GIVE NOTICE OF THE POSSIBILITY OF SUCH
DAMAGE.
</div>

<div style='display:block; margin:1em 0'>
1.F.3. LIMITED RIGHT OF REPLACEMENT OR REFUND - If you discover a
defect in this electronic work within 90 days of receiving it, you can
receive a refund of the money (if any) you paid for it by sending a
written explanation to the person you received the work from. If you
received the work on a physical medium, you must return the medium
with your written explanation. The person or entity that provided you
with the defective work may elect to provide a replacement copy in
lieu of a refund. If you received the work electronically, the person
or entity providing it to you may choose to give you a second
opportunity to receive the work electronically in lieu of a refund. If
the second copy is also defective, you may demand a refund in writing
without further opportunities to fix the problem.
</div>

<div style='display:block; margin:1em 0'>
1.F.4. Except for the limited right of replacement or refund set forth
in paragraph 1.F.3, this work is provided to you &#8216;AS-IS&#8217;, WITH NO
OTHER WARRANTIES OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PURPOSE.
</div>

<div style='display:block; margin:1em 0'>
1.F.5. Some states do not allow disclaimers of certain implied
warranties or the exclusion or limitation of certain types of
damages. If any disclaimer or limitation set forth in this agreement
violates the law of the state applicable to this agreement, the
agreement shall be interpreted to make the maximum disclaimer or
limitation permitted by the applicable state law. The invalidity or
unenforceability of any provision of this agreement shall not void the
remaining provisions.
</div>

<div style='display:block; margin:1em 0'>
1.F.6. INDEMNITY - You agree to indemnify and hold the Foundation, the
trademark owner, any agent or employee of the Foundation, anyone
providing copies of Project Gutenberg&#8482; electronic works in
accordance with this agreement, and any volunteers associated with the
production, promotion and distribution of Project Gutenberg&#8482;
electronic works, harmless from all liability, costs and expenses,
including legal fees, that arise directly or indirectly from any of
the following which you do or cause to occur: (a) distribution of this
or any Project Gutenberg&#8482; work, (b) alteration, modification, or
additions or deletions to any Project Gutenberg&#8482; work, and (c) any
Defect you cause.
</div>

<div style='display:block; font-size:1.1em; margin:1em 0; font-weight:bold'>
Section 2. Information about the Mission of Project Gutenberg&#8482;
</div>

<div style='display:block; margin:1em 0'>
Project Gutenberg&#8482; is synonymous with the free distribution of
electronic works in formats readable by the widest variety of
computers including obsolete, old, middle-aged and new computers. It
exists because of the efforts of hundreds of volunteers and donations
from people in all walks of life.
</div>

<div style='display:block; margin:1em 0'>
Volunteers and financial support to provide volunteers with the
assistance they need are critical to reaching Project Gutenberg&#8482;&#8217;s
goals and ensuring that the Project Gutenberg&#8482; collection will
remain freely available for generations to come. In 2001, the Project
Gutenberg Literary Archive Foundation was created to provide a secure
and permanent future for Project Gutenberg&#8482; and future
generations. To learn more about the Project Gutenberg Literary
Archive Foundation and how your efforts and donations can help, see
Sections 3 and 4 and the Foundation information page at www.gutenberg.org.
</div>

<div style='display:block; font-size:1.1em; margin:1em 0; font-weight:bold'>
Section 3. Information about the Project Gutenberg Literary Archive Foundation
</div>

<div style='display:block; margin:1em 0'>
The Project Gutenberg Literary Archive Foundation is a non-profit
501(c)(3) educational corporation organized under the laws of the
state of Mississippi and granted tax exempt status by the Internal
Revenue Service. The Foundation&#8217;s EIN or federal tax identification
number is 64-6221541. Contributions to the Project Gutenberg Literary
Archive Foundation are tax deductible to the full extent permitted by
U.S. federal laws and your state&#8217;s laws.
</div>

<div style='display:block; margin:1em 0'>
The Foundation&#8217;s business office is located at 809 North 1500 West,
Salt Lake City, UT 84116, (801) 596-1887. Email contact links and up
to date contact information can be found at the Foundation&#8217;s website
and official page at www.gutenberg.org/contact
</div>

<div style='display:block; font-size:1.1em; margin:1em 0; font-weight:bold'>
Section 4. Information about Donations to the Project Gutenberg Literary Archive Foundation
</div>

<div style='display:block; margin:1em 0'>
Project Gutenberg&#8482; depends upon and cannot survive without widespread
public support and donations to carry out its mission of
increasing the number of public domain and licensed works that can be
freely distributed in machine-readable form accessible by the widest
array of equipment including outdated equipment. Many small donations
($1 to $5,000) are particularly important to maintaining tax exempt
status with the IRS.
</div>

<div style='display:block; margin:1em 0'>
The Foundation is committed to complying with the laws regulating
charities and charitable donations in all 50 states of the United
States. Compliance requirements are not uniform and it takes a
considerable effort, much paperwork and many fees to meet and keep up
with these requirements. We do not solicit donations in locations
where we have not received written confirmation of compliance. To SEND
DONATIONS or determine the status of compliance for any particular state
visit <a href="https://www.gutenberg.org/donate/">www.gutenberg.org/donate</a>.
</div>

<div style='display:block; margin:1em 0'>
While we cannot and do not solicit contributions from states where we
have not met the solicitation requirements, we know of no prohibition
against accepting unsolicited donations from donors in such states who
approach us with offers to donate.
</div>

<div style='display:block; margin:1em 0'>
International donations are gratefully accepted, but we cannot make
any statements concerning tax treatment of donations received from
outside the United States. U.S. laws alone swamp our small staff.
</div>

<div style='display:block; margin:1em 0'>
Please check the Project Gutenberg web pages for current donation
methods and addresses. Donations are accepted in a number of other
ways including checks, online payments and credit card donations. To
donate, please visit: www.gutenberg.org/donate
</div>

<div style='display:block; font-size:1.1em; margin:1em 0; font-weight:bold'>
Section 5. General Information About Project Gutenberg&#8482; electronic works
</div>

<div style='display:block; margin:1em 0'>
Professor Michael S. Hart was the originator of the Project
Gutenberg&#8482; concept of a library of electronic works that could be
freely shared with anyone. For forty years, he produced and
distributed Project Gutenberg&#8482; eBooks with only a loose network of
volunteer support.
</div>

<div style='display:block; margin:1em 0'>
Project Gutenberg&#8482; eBooks are often created from several printed
editions, all of which are confirmed as not protected by copyright in
the U.S. unless a copyright notice is included. Thus, we do not
necessarily keep eBooks in compliance with any particular paper
edition.
</div>

<div style='display:block; margin:1em 0'>
Most people start at our website which has the main PG search
facility: <a href="https://www.gutenberg.org">www.gutenberg.org</a>.
</div>

<div style='display:block; margin:1em 0'>
This website includes information about Project Gutenberg&#8482;,
including how to make donations to the Project Gutenberg Literary
Archive Foundation, how to help produce our new eBooks, and how to
subscribe to our email newsletter to hear about new eBooks.
</div>

</div>
</body>
</html>
